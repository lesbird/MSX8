

                *
                * MSX ROM LOADER
                *
                * CP/M SAFE
                * LOAD MSX-US.ROM TO 0100H
                * LOAD GAME.ROM TO 4000H
                * CP/M UNSAFE FROM HERE ON
                * COPY 0100H DOWN TO 0000H
                * JUMP TO GAME START ADR LOADED FROM 4002H
                *
 0005 =         BDOS	EQU	0005H
 005C =         DEFFCB	EQU	005CH
                * SET THIS TO 1 TO ENABLE PATCHER SUPPORT
 0001 =         PATCHE	EQU	1
                * TEST ROUTINES TO MAKE SURE MSX BIOS IS LOADED
 0041 =         DISSCR	EQU	0041H
 0044 =         ENASCR	EQU	0044H
                * MEM LOCS TO INITIALIZE
 F672 =         MEMSIZ	EQU	0F672H
 F674 =         STKTOP	EQU	0F674H
 F676 =         TXTTAB	EQU	0F676H
 F678 =         TEMPPT	EQU	0F678H
 F69B =         FRETOP	EQU	0F69BH
 F6B1 =         SAVSTK	EQU	0F6B1H
 F6C2 =         VARTAB	EQU	0F6C2H
 F6C4 =         ARYTAB	EQU	0F6C4H
 F6C6 =         STREND	EQU	0F6C6H
 F6C8 =         DATPTR	EQU	0F6C8H
 F6CA =         DEFTBL	EQU	0F6CAH
 F6E4 =         PRMPRV	EQU	0F6E4H
 F85F =         MAXFIL	EQU	0F85FH
 F860 =         FILTAB	EQU	0F860H
 F862 =         NULBUF	EQU	0F862H
 F91F =         CGPNT	EQU	0F91FH
 F924 =         CGPBAS	EQU	0F924H
 F926 =         PATBAS	EQU	0F926H
 F928 =         ATRBAS	EQU	0F928H
 F92C =         CMASK	EQU	0F92CH
 FC48 =         BOTTOM	EQU	0FC48H
 FC4A =         HIMEM	EQU	0FC4AH
                *
 0100           	ORG	100H
                *
 0100 =         START	EQU	$
 0100 31DFC4    	LXI	SP,STACK
 0103 C300C0    	JMP	STARTH
                *
 C000           	ORG	0C000H
                * RUNNING IN HIGH MEMORY
 C000 =         STARTH	EQU	$
 C000 F3        	DI
                * TURN OFF H8 FRONT PANEL INTERRUPTS
 C001 3E90      	MVI	A,090H
 C003 D3F0      	OUT	0F0H
                * SHOW SIGN-ON MESSAGE
 C005 212EC3    	LXI	H,MSX8MSG
 C008 CD14C3    	CALL	PRINTS
                *
 C00B 216DC3    	LXI	H,LOADB1
 C00E CD14C3    	CALL	PRINTS
                *
 C011 210001    	LXI	H,0100H
 C014 226CC4    	SHLD	ROMLOC
 C017 21003F    	LXI	H,3F00H ; UP TO APPROX 16K OF BIOS CODE
 C01A 226EC4    	SHLD	ROMSIZ
 C01D 2177C4    	LXI	H,FCBBIOS
 C020 CDB5C1    	CALL	LDROM
 C023 FEFF      	CPI	0FFH
 C025 CAA3C1    	JZ	NOBIOSF
                *
 C028 2189C3    	LXI	H,LOADB2
 C02B CD14C3    	CALL	PRINTS
                *
 C02E 2190C3    	LXI	H,LOADR1
 C031 CD14C3    	CALL	PRINTS
                *
 C034 210040    	LXI	H,4000H
 C037 226CC4    	SHLD	ROMLOC
 C03A 210080    	LXI	H,8000H ; UP TO 32K ROMS
 C03D 226EC4    	SHLD	ROMSIZ
 C040 215C00    	LXI	H,DEFFCB ; COMMAND LINE FCB
 C043 CDB5C1    	CALL	LDROM
 C046 FEFF      	CPI	0FFH
 C048 CAACC1    	JZ	NOGAMEF
                * GET GAME LAUNCH ADDRESS
 C04B CDE4C2    	CALL	CRLF
 C04E 2A0240    	LHLD	4002H
 C051 2273C4    	SHLD	GAMADR	; GAME START ADR
 C054 E5        	PUSH	H
 C055 7C        	MOV	A,H
 C056 E680      	ANI	80H	; GAME SHOULD BE AT 8000H INSTEAD OF 4000H
 C058 C4B6C2    	CNZ	COPYTO8
 C05B 215CC4    	LXI	H,STARTM
 C05E CD14C3    	CALL	PRINTS
 C061 E1        	POP	H
 C062 7C        	MOV	A,H
 C063 CDEFC2    	CALL	OUTHEX
 C066 7D        	MOV	A,L
 C067 CDEFC2    	CALL	OUTHEX
 C06A CDE4C2    	CALL	CRLF
                *
                IF	PATCHE
 C06D 21A1C3    	LXI	H,LOADR2
 C070 CD14C3    	CALL	PRINTS
                ENDIF
                * PATCH ELEVATOR ACTION (HACK)
 C073 211640    	LXI	H,4016H
 C076 7E        	MOV	A,M
 C077 FECD      	CPI	0CDH	; LOOK FOR CALL 4D59H
 C079 C292C0    	JNZ	STARTH1
 C07C 23        	INX	H
 C07D 7E        	MOV	A,M	; 59H
 C07E FE59      	CPI	059H
 C080 C292C0    	JNZ	STARTH1
 C083 23        	INX	H
 C084 7E        	MOV	A,M
 C085 FE4D      	CPI	04DH	; 4DH
 C087 C292C0    	JNZ	STARTH1
 C08A 3600      	MVI	M,0	; CHANGE TO NOP,NOP,NOP
 C08C 2B        	DCX	H
 C08D 3600      	MVI	M,0
 C08F 2B        	DCX	H
 C090 3600      	MVI	M,0
                * PATCH HARDCODED VDP AND PSG REFERENCES IN THE ROM CODE, IF ANY
                * THIS IS ENABLED IN THE MSX8P.COM VERSION BUT IN THE STANDARD MSX8.COM...
                * ...WE DO NOT DO THIS BECAUSE SOMETIMES IT WILL BREAK THE GAME
                * THE PATCHER WILL LOOK FOR DIRECT I/O TO THE VDP AND PSG AND PATCH...
                * ...WITH THE CORRECTED I/O ADDRESSES
 C092 =         STARTH1 EQU	$
                IF	PATCHE
 C092 CD0DC2    	CALL	PATCH
                *
 C095 21BEC3    	LXI	H,LOADR3
 C098 CD14C3    	CALL	PRINTS
 C09B 3A72C4    	LDA	PATCNT
 C09E CDEFC2    	CALL	OUTHEX
 C0A1 CDE4C2    	CALL	CRLF
                ENDIF
                * COPY 16K BIOS DOWN TO 0000H
 C0A4 210001    	LXI	H,0100H ; BIOS LOCATION
 C0A7 110000    	LXI	D,0000H ; TARGET LOCATION
 C0AA 01003F    	LXI	B,3F00H ; APPROX 16K
 C0AD =         COPYB	EQU	$
 C0AD 7E        	MOV	A,M
 C0AE 23        	INX	H
 C0AF 12        	STAX	D
 C0B0 13        	INX	D
 C0B1 0B        	DCX	B
 C0B2 79        	MOV	A,C
 C0B3 B0        	ORA	B
 C0B4 C2ADC0    	JNZ	COPYB
                *
 C0B7 21D9C3    	LXI	H,RUNGAM
 C0BA CD14C3    	CALL	PRINTS
                * INITIALIZE UPPER MEMORY VARIABLES
 C0BD 2100F0    	LXI	H,0F000H
 C0C0 01FF0F    	LXI	B,0FFFH
                * ZERO ALL FROM 0xF000 UP TO 0xFFFF
 C0C3 =         FILL00	EQU	$
 C0C3 AF        	XRA	A
 C0C4 77        	MOV	M,A
 C0C5 23        	INX	H
 C0C6 0B        	DCX	B
 C0C7 79        	MOV	A,C
 C0C8 B0        	ORA	B
 C0C9 C2C3C0    	JNZ	FILL00
                * FILL IN DEFAULT VALUES FOR WORKSPACE AREA
                * THESE VALUES ARE IN MSX-US.ROM AT 0x2768 SO IF
                * THE ADDRESS CHANGES YOU NEED TO UPDATE IT HERE
 C0CC 216827    	LXI	H,02768H
 C0CF 1180F3    	LXI	D,0F380H
 C0D2 019000    	LXI	B,90H
 C0D5 =         TOF380	EQU	$
 C0D5 7E        	MOV	A,M
 C0D6 23        	INX	H
 C0D7 12        	STAX	D
 C0D8 13        	INX	D
 C0D9 0B        	DCX	B
 C0DA 79        	MOV	A,C
 C0DB B0        	ORA	B
 C0DC C2D5C0    	JNZ	TOF380
                * NOW PATCH HIGH MEMORY AREAS WITH DEFAULT VALUES
                * THESE VALUES WERE TAKEN FROM MSX REDBOOK
 C0DF 2168F1    	LXI	H,0F168H
 C0E2 2272F6    	SHLD	MEMSIZ
 C0E5 21A0F0    	LXI	H,0F0A0H
 C0E8 2274F6    	SHLD	STKTOP
 C0EB 210180    	LXI	H,8001H
 C0EE 2276F6    	SHLD	TXTTAB
 C0F1 217AF6    	LXI	H,0F67AH
 C0F4 2278F6    	SHLD	TEMPPT
 C0F7 2168F1    	LXI	H,0F168H
 C0FA 229BF6    	SHLD	FRETOP
 C0FD 219EF0    	LXI	H,0F09EH
 C100 22B1F6    	SHLD	SAVSTK
 C103 210380    	LXI	H,8003H
 C106 22C2F6    	SHLD	VARTAB
 C109 22C4F6    	SHLD	ARYTAB
 C10C 22C6F6    	SHLD	STREND
 C10F 210080    	LXI	H,8000H
 C112 22C8F6    	SHLD	DATPTR
 C115 011A00    	LXI	B,26
 C118 21CAF6    	LXI	H,DEFTBL
 C11B =         DEFTBL0 EQU	$
 C11B 3608      	MVI	M,08H
 C11D 23        	INX	H
 C11E 0D        	DCR	C
 C11F C21BC1    	JNZ	DEFTBL0
 C122 21E4F6    	LXI	H,0F6E4H
 C125 22E4F6    	SHLD	PRMPRV
 C128 3E01      	MVI	A,1
 C12A 325FF8    	STA	MAXFIL
 C12D 216AF1    	LXI	H,0F16AH
 C130 2260F8    	SHLD	FILTAB
 C133 2177F1    	LXI	H,0F177H
 C136 2262F8    	SHLD	NULBUF
 C139 AF        	XRA	A
 C13A 321FF9    	STA	CGPNT
 C13D 21BF1B    	LXI	H,1BBFH
 C140 2220F9    	SHLD	CGPNT+1
 C143 210008    	LXI	H,0800H
 C146 2224F9    	SHLD	CGPBAS
 C149 210038    	LXI	H,3800H
 C14C 2226F9    	SHLD	PATBAS
 C14F 21001B    	LXI	H,1B00H
 C152 2228F9    	SHLD	ATRBAS
 C155 3E80      	MVI	A,80H
 C157 322CF9    	STA	CMASK
 C15A 210080    	LXI	H,8000H
 C15D 2248FC    	SHLD	BOTTOM
 C160 2180F3    	LXI	H,0F380H
 C163 224AFC    	SHLD	HIMEM
                * SETUP UPPER MEMORY HOOKS WITH RET OPCODES
 C166 219AFD    	LXI	H,0FD9AH
 C169 013002    	LXI	B,0230H
 C16C =         FILLC9	EQU	$
 C16C 3EC9      	MVI	A,0C9H
 C16E 77        	MOV	M,A
 C16F 23        	INX	H
 C170 0B        	DCX	B
 C171 79        	MOV	A,C
 C172 B0        	ORA	B
 C173 C26CC1    	JNZ	FILLC9
                * SET H8 TO 4MHZ
 C176 3E02      	MVI	A,2
 C178 D330      	OUT	030H
                * DISABLE UART INTERRUPTS - FOR HEATHKIT SYSTEMS CP/M ENABLES THESE SO WE
                * ...NEED TO TURN THEM OFF
 C17A 3E00      	MVI	A,0
 C17C D3E9      	OUT	0E9H	; DISABLE UART INTERRUPTS
                * TURN ON Z80 IM1 MODE
 C17E ED56      	DB	0EDH,056H
                *
 C180 FB        	EI
                * WAIT FOR 'L' TO LAUNCH THE GAME
 C181 =         STARTL	EQU	$
 C181 CDCFC2    	CALL	IN350
 C184 CDD8C2    	CALL	OUT350
 C187 FE44      	CPI	'D'
 C189 CC4100    	CZ	DISSCR
 C18C FE45      	CPI	'E'
 C18E CC4400    	CZ	ENASCR
 C191 FE4C      	CPI	'L'
 C193 C281C1    	JNZ	STARTL
                *
 C196 21F4C3    	LXI	H,LAUGAM
 C199 CD14C3    	CALL	PRINTS
                *
 C19C 2A0240    	LHLD	4002H
 C19F E9        	PCHL
 C1A0 C30000    	JMP	0000H
                *
 C1A3 =         NOBIOSF EQU	$
 C1A3 2107C4    	LXI	H,NOBIOS
 C1A6 CD14C3    	CALL	PRINTS
 C1A9 C30000    	JMP	0000H
                *
 C1AC =         NOGAMEF EQU	$
 C1AC 2129C4    	LXI	H,NOGAME
 C1AF CD14C3    	CALL	PRINTS
 C1B2 C30000    	JMP	0000H
                *
 C1B5 =         LDROM	EQU	$
 C1B5 2275C4    	SHLD	CURFCB
 C1B8 EB        	XCHG
 C1B9 010F00    	LXI	B,000FH
 C1BC CD0500    	CALL	BDOS
 C1BF FEFF      	CPI	0FFH
 C1C1 C8        	RZ
 C1C2 110000    	LXI	D,0000H
 C1C5 =         LDROML	EQU	$
 C1C5 D5        	PUSH	D
 C1C6 011400    	LXI	B,0014H
 C1C9 2A75C4    	LHLD	CURFCB
 C1CC EB        	XCHG
 C1CD CD0500    	CALL	BDOS	; READ 128 BYTES TO 0080H
 C1D0 D1        	POP	D
 C1D1 B7        	ORA	A
 C1D2 C2FDC1    	JNZ	LDROMX
 C1D5 D5        	PUSH	D
 C1D6 2A6CC4    	LHLD	ROMLOC
 C1D9 19        	DAD	D	; ADD OFFSET
 C1DA EB        	XCHG		; DE=DESTINATION+OFFSET
 C1DB 018000    	LXI	B,128	; BYTES TO COPY
 C1DE 218000    	LXI	H,0080H ; DMA ADDRESS
 C1E1 =         LDROM1	EQU	$
 C1E1 7E        	MOV	A,M
 C1E2 12        	STAX	D
 C1E3 23        	INX	H
 C1E4 13        	INX	D
 C1E5 0D        	DCR	C
 C1E6 C2E1C1    	JNZ	LDROM1
 C1E9 D1        	POP	D
 C1EA EB        	XCHG		; HL=OFFSET
 C1EB 118000    	LXI	D,128
 C1EE 19        	DAD	D	; HL=OFFSET+128
 C1EF EB        	XCHG		; DE=OFFSET+128
 C1F0 3E2E      	MVI	A,'.'
 C1F2 CDD8C2    	CALL	OUT350
 C1F5 2A6EC4    	LHLD	ROMSIZ
 C1F8 7A        	MOV	A,D
 C1F9 BC        	CMP	H	; LOADED ENOUGH?
 C1FA C2C5C1    	JNZ	LDROML	; COPY NEXT RECORD
                * CLOSE FILE AND RETURN
 C1FD =         LDROMX	EQU	$
 C1FD EB        	XCHG		; HL=BYTES READ
 C1FE 2270C4    	SHLD	ROMCNT
 C201 011000    	LXI	B,0010H
 C204 2A75C4    	LHLD	CURFCB
 C207 EB        	XCHG
 C208 CD0500    	CALL	BDOS
 C20B AF        	XRA	A
 C20C C9        	RET
                * LOOKING FOR DIRECT I/O TO PSG (A0,A1,A2) AND VDP (98,99)
                * AND REPLACING WITH HEATHKIT PSG (BA,BB) AND VDP (B8,B9)
                IF	PATCHE
 C20D =         PATCH	EQU	$
 C20D AF        	XRA	A
 C20E 3272C4    	STA	PATCNT
 C211 2A70C4    	LHLD	ROMCNT
 C214 EB        	XCHG		; DE=ROM BYTES READ
 C215 210040    	LXI	H,04000H
 C218 =         PATCH0	EQU	$
 C218 7E        	MOV	A,M
 C219 23        	INX	H
 C21A FEDB      	CPI	0DBH	; IN OPCODE
 C21C CC30C2    	CZ	PATCH1
 C21F FED3      	CPI	0D3H	; OUT OPCODE
 C221 CC30C2    	CZ	PATCH1
 C224 FEED      	CPI	0EDH	; OUTI OPCODE
 C226 CCA8C2    	CZ	PATCH2
 C229 1B        	DCX	D
 C22A 7B        	MOV	A,E
 C22B B2        	ORA	D
 C22C C218C2    	JNZ	PATCH0
 C22F C9        	RET
 C230 =         PATCH1	EQU	$
 C230 7E        	MOV	A,M
 C231 FEA0      	CPI	0A0H
 C233 CC50C2    	CZ	PATCHA0
 C236 FEA1      	CPI	0A1H
 C238 CC55C2    	CZ	PATCHA1
 C23B FEA2      	CPI	0A2H
 C23D CC5AC2    	CZ	PATCHA2
 C240 FE98      	CPI	098H
 C242 CC98C2    	CZ	PATCH98
 C245 FE99      	CPI	099H
 C247 CC9DC2    	CZ	PATCH99
 C24A FEA9      	CPI	0A9H
 C24C CC89C2    	CZ	PATCHA9
 C24F C9        	RET
 C250 =         PATCHA0 EQU	$
 C250 36BB      	MVI	M,0BBH
 C252 C39FC2    	JMP	PATCHED
 C255 =         PATCHA1 EQU	$
 C255 36BA      	MVI	M,0BAH
 C257 C39FC2    	JMP	PATCHED
                * LOOK FOR AND PATCH JOYSTICK FUNCTION
                * OUT 0A0H,A
                * IN A,0A2H
                * CHANGES TO
                * CALL 00D5H
                * NOP
 C25A =         PATCHA2 EQU	$
 C25A E5        	PUSH	H
 C25B 0E01      	MVI	C,1
 C25D =         PATCHA3 EQU	$
 C25D 3600      	MVI	M,0	; NOP
 C25F 2B        	DCX	H
 C260 0C        	INR	C
 C261 7E        	MOV	A,M
 C262 FED3      	CPI	0D3H	; LOOK FOR OUT (0A0H),A
 C264 C25DC2    	JNZ	PATCHA3
                *	MOV	A,C
                *	CALL	OUTHEX
 C267 E5        	PUSH	H
 C268 36CD      	MVI	M,0CDH
 C26A 23        	INX	H
 C26B 0D        	DCR	C
 C26C 36D5      	MVI	M,0D5H
 C26E 23        	INX	H
 C26F 0D        	DCR	C
 C270 3600      	MVI	M,000H	; CALL 00D5H (GTSTCK)
 C272 23        	INX	H
 C273 0D        	DCR	C
 C274 362F      	MVI	M,02FH	; CPL
 C276 23        	INX	H
 C277 0D        	DCR	C
 C278 CA82C2    	JZ	PATCHA5
 C27B =         PATCHA4 EQU	$
 C27B 3600      	MVI	M,000H	; NOP OPCODES
 C27D 23        	INX	H
 C27E 0D        	DCR	C
 C27F C27BC2    	JNZ	PATCHA4
 C282 =         PATCHA5 EQU	$
 C282 E1        	POP	H
 C283 0E08      	MVI	C,8
                *	CALL	OUTMEM
 C285 E1        	POP	H
 C286 C39FC2    	JMP	PATCHED
                * IN A,(0A9H) = XOR A, CPL
 C289 =         PATCHA9 EQU	$
 C289 E5        	PUSH	H
 C28A 362F      	MVI	M,02FH
 C28C 2B        	DCX	H
 C28D E5        	PUSH	H
 C28E 36AF      	MVI	M,0AFH
 C290 23        	INX	H
 C291 E1        	POP	H
 C292 0E08      	MVI	C,8
                *	CALL	OUTMEM
 C294 E1        	POP	H
 C295 C39FC2    	JMP	PATCHED
 C298 =         PATCH98 EQU	$
 C298 36B8      	MVI	M,0B8H
 C29A C39FC2    	JMP	PATCHED
 C29D =         PATCH99 EQU	$
 C29D 36B9      	MVI	M,0B9H
 C29F =         PATCHED EQU	$
 C29F 3A72C4    	LDA	PATCNT
 C2A2 3C        	INR	A
 C2A3 3272C4    	STA	PATCNT
 C2A6 AF        	XRA	A
 C2A7 C9        	RET
 C2A8 =         PATCH2	EQU	$	; PATCH OUTI OPCODE
 C2A8 E5        	PUSH	H
 C2A9 =         PATCH3	EQU	$
 C2A9 2B        	DCX	H
 C2AA 7E        	MOV	A,M
 C2AB FE0E      	CPI	00EH	; LOOK FOR LD C,<N>
 C2AD C2A9C2    	JNZ	PATCH3
 C2B0 23        	INX	H	; ADVANCE TO <N>
 C2B1 CD30C2    	CALL	PATCH1
 C2B4 E1        	POP	H
 C2B5 C9        	RET
                ENDIF
                * GAME IS SET UP TO RUN AT 8000H INSTEAD OF 4000H SO COPY
                * 16K ROM BYTES TO 8000H
 C2B6 =         COPYTO8 EQU	$
 C2B6 210040    	LXI	H,4000H
 C2B9 110080    	LXI	D,8000H
 C2BC 010040    	LXI	B,4000H
 C2BF =         COPYTOL EQU	$
 C2BF 7E        	MOV	A,M
 C2C0 23        	INX	H
 C2C1 12        	STAX	D
 C2C2 13        	INX	D
 C2C3 0B        	DCX	B
 C2C4 79        	MOV	A,C
 C2C5 B0        	ORA	B
 C2C6 C2BFC2    	JNZ	COPYTOL
 C2C9 C9        	RET
                * CANNOT RELY ON BDOS ANYMORE AS IT WILL BE DESTROYED
                * WHEN MSX BIOS IS LOADED SO WE READ THE 16550 CONSOLE
                * PORT DIRECTLY
 C2CA =         IN350R	EQU	$	; CHAR READY?
 C2CA DBED      	IN	0EDH
 C2CC E601      	ANI	01H
 C2CE C9        	RET
 C2CF =         IN350	EQU	$	; WAIT FOR INPUT
 C2CF CDCAC2    	CALL	IN350R
 C2D2 CACFC2    	JZ	IN350
 C2D5 DBE8      	IN	0E8H
 C2D7 C9        	RET
                *
 C2D8 =         OUT350	EQU	$
 C2D8 F5        	PUSH	PSW
 C2D9 =         OUT350L EQU	$
 C2D9 DBED      	IN	0EDH
 C2DB E620      	ANI	20H
 C2DD CAD9C2    	JZ	OUT350L
 C2E0 F1        	POP	PSW
 C2E1 D3E8      	OUT	0E8H
 C2E3 C9        	RET
                *
 C2E4 =         CRLF	EQU	$
 C2E4 3E0D      	MVI	A,0DH
 C2E6 CDD8C2    	CALL	OUT350
 C2E9 3E0A      	MVI	A,0AH
 C2EB CDD8C2    	CALL	OUT350
 C2EE C9        	RET
                IF	0
                * DUMP MEM AT HL C=NUM BYTES
                OUTMEM	EQU	$
                	CALL	CRLF
                	MOV	A,H
                	CALL	OUTHEX
                	MOV	A,L
                	CALL	OUTHEX
                	MOV	A,M
                	CALL	OUTHEX
                	INX	H
                	DCR	C
                	JNZ	OUTMEM
                	CALL	CRLF
                	CALL	CRLF
                	RET
                ENDIF
                * PRINT HEX VALUE OF (A) TO CONSOLE
 C2EF =         OUTHEX	EQU	$
 C2EF D5        	PUSH	D
 C2F0 E5        	PUSH	H
 C2F1 F5        	PUSH	PSW
 C2F2 E6F0      	ANI	0F0H
 C2F4 1F        	RAR
 C2F5 1F        	RAR
 C2F6 1F        	RAR
 C2F7 1F        	RAR
 C2F8 5F        	MOV	E,A
 C2F9 1600      	MVI	D,0
 C2FB 211EC3    	LXI	H,HEXTBL
 C2FE 19        	DAD	D
 C2FF 7E        	MOV	A,M
 C300 CDD8C2    	CALL	OUT350
 C303 F1        	POP	PSW
 C304 E60F      	ANI	00FH
 C306 5F        	MOV	E,A
 C307 1600      	MVI	D,0
 C309 211EC3    	LXI	H,HEXTBL
 C30C 19        	DAD	D
 C30D 7E        	MOV	A,M
 C30E CDD8C2    	CALL	OUT350
 C311 E1        	POP	H
 C312 D1        	POP	D
 C313 C9        	RET
                * HL=STRING TERMINATED WITH 0
 C314 =         PRINTS	EQU	$
 C314 7E        	MOV	A,M
 C315 B7        	ORA	A
 C316 C8        	RZ
 C317 CDD8C2    	CALL	OUT350
 C31A 23        	INX	H
 C31B C314C3    	JMP	PRINTS
                *
 C31E 3031323334HEXTBL	DB	'0123456789ABCDEF'
                *
 C32E 0D0A4D5358MSX8MSG DB	0DH,0AH,'MSX ROM LOADER',0DH,0AH
 C340 5553414745	DB	'USAGE: MSX8 GAMEFILE.ROM',0DH,0AH
 C35A 3230323420	DB	'2024 BY LES BIRD',0DH,0AH
 C36C 00        	DB	0
 C36D 0D0A      LOADB1	DB	0DH,0AH
 C36F 4C4F414449	DB	'LOADING MSX-US.ROM BIOS',0DH,0AH,0
 C389 444F4E450DLOADB2	DB	'DONE',0DH,0AH,0
 C390 0D0A      LOADR1	DB	0DH,0AH
 C392 4C4F414449	DB	'LOADING GAME',0DH,0AH,0
                IF	PATCHE
 C3A1 0D0A      LOADR2	DB	0DH,0AH
 C3A3 5041544348	DB	'PATCHING (IF NECESSARY)...',0
 C3BE 0D0A      LOADR3	DB	0DH,0AH
 C3C0 444F4E4520	DB	'DONE - PATCHES APPLIED: ',0
                ENDIF
 C3D9 0D0A      RUNGAM	DB	0DH,0AH
 C3DB 5052455353	DB	'PRESS L TO LAUNCH GAME',0DH,0AH,0
 C3F4 0D0A      LAUGAM	DB	0DH,0AH
 C3F6 4C41554E43	DB	'LAUNCHING GAME',0DH,0AH,0
 C407 0D0A      NOBIOS	DB	0DH,0AH
 C409 4E4F204D53	DB	'NO MSX-US.ROM BIOS FILE FOUND',0DH,0AH,0
 C429 0D0A      NOGAME	DB	0DH,0AH
 C42B 4E4F204741	DB	'NO GAME FILE TO LOAD',0DH,0AH
 C441 5553414745	DB	'USAGE: MSX8 GAMEFILE.ROM',0DH,0AH,0
 C45C 5354415254STARTM	DB	'START ADDRESS: ',0
                *
 C46C 0000      ROMLOC	DW	0
 C46E 0000      ROMSIZ	DW	0
 C470 0000      ROMCNT	DW	0
 C472 00        PATCNT	DB	0
 C473 0000      GAMADR	DW	0
 C475 0000      CURFCB	DW	0
                *
 C477 00        FCBBIOS DB	0		; DRIVE
 C478 4D53582D55	DB	'MSX-US  '	; FILENAME
 C480 524F4D    	DB	'ROM'		; EXTENSION
 C483 00        	DB	0		; EXT NUM
 C484 00        	DB	0		; RESERVED
 C485 00        	DB	0		; RESERVED
 C486 00        	DB	0		; RECORD COUNT
 C487           	DS	16
 C497 00        	DB	0		; CURRENT RECORD
 C498           	DS	3		; RANDOM RECORD NUM
                *
 C49B 00        FCBGAME DB	0
 C49C 47414C4158	DB	'GALAX343'
 C4A4 524F4D    	DB	'ROM'
 C4A7 00        	DB	0
 C4A8 00        	DB	0
 C4A9 00        	DB	0
 C4AA 00        	DB	0
 C4AB           	DS	16
 C4BB 00        	DB	0
 C4BC           	DS	3
                *
 C4BF           	DS	32
 C4DF =         STACK	EQU	$
                *
 C4DF           	END	START
