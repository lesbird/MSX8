

                *
                * MSX ROM LOADER
                *
                * CP/M SAFE
                * LOAD MSX-US.ROM TO 0100H
                * LOAD GAME.ROM TO 4000H
                * CP/M UNSAFE FROM HERE ON
                * COPY 0100H DOWN TO 0000H
                * JUMP TO GAME START ADR LOADED FROM 4002H
                *
 0005 =         BDOS	EQU	0005H
 005C =         DEFFCB	EQU	005CH
                * SET THIS TO 1 TO ENABLE PATCHER SUPPORT
 0000 =         PATCHE	EQU	0
                * TEST ROUTINES TO MAKE SURE MSX BIOS IS LOADED
 0041 =         DISSCR	EQU	0041H
 0044 =         ENASCR	EQU	0044H
                * MEM LOCS TO INITIALIZE
 F672 =         MEMSIZ	EQU	0F672H
 F674 =         STKTOP	EQU	0F674H
 F676 =         TXTTAB	EQU	0F676H
 F678 =         TEMPPT	EQU	0F678H
 F69B =         FRETOP	EQU	0F69BH
 F6B1 =         SAVSTK	EQU	0F6B1H
 F6C2 =         VARTAB	EQU	0F6C2H
 F6C4 =         ARYTAB	EQU	0F6C4H
 F6C6 =         STREND	EQU	0F6C6H
 F6C8 =         DATPTR	EQU	0F6C8H
 F6CA =         DEFTBL	EQU	0F6CAH
 F6E4 =         PRMPRV	EQU	0F6E4H
 F85F =         MAXFIL	EQU	0F85FH
 F860 =         FILTAB	EQU	0F860H
 F862 =         NULBUF	EQU	0F862H
 F91F =         CGPNT	EQU	0F91FH
 F924 =         CGPBAS	EQU	0F924H
 F926 =         PATBAS	EQU	0F926H
 F928 =         ATRBAS	EQU	0F928H
 F92C =         CMASK	EQU	0F92CH
 FC48 =         BOTTOM	EQU	0FC48H
 FC4A =         HIMEM	EQU	0FC4AH
                *
 0100           	ORG	100H
                *
 0100 =         START	EQU	$
 0100 31E6C3    	LXI	SP,STACK
 0103 C300C0    	JMP	STARTH
                *
 C000           	ORG	0C000H
                * RUNNING IN HIGH MEMORY
 C000 =         STARTH	EQU	$
 C000 F3        	DI
                * TURN OFF H8 FRONT PANEL INTERRUPTS
 C001 3E90      	MVI	A,090H
 C003 D3F0      	OUT	0F0H
                * SHOW SIGN-ON MESSAGE
 C005 216DC2    	LXI	H,MSX8MSG
 C008 CD53C2    	CALL	PRINTS
                *
 C00B 21ACC2    	LXI	H,LOADB1
 C00E CD53C2    	CALL	PRINTS
                *
 C011 210001    	LXI	H,0100H
 C014 2273C3    	SHLD	ROMLOC
 C017 21003F    	LXI	H,3F00H ; UP TO APPROX 16K OF BIOS CODE
 C01A 2275C3    	SHLD	ROMSIZ
 C01D 217EC3    	LXI	H,FCBBIOS
 C020 CD9DC1    	CALL	LDROM
 C023 FEFF      	CPI	0FFH
 C025 CA8BC1    	JZ	NOBIOSF
                *
 C028 21C8C2    	LXI	H,LOADB2
 C02B CD53C2    	CALL	PRINTS
                *
 C02E 21CFC2    	LXI	H,LOADR1
 C031 CD53C2    	CALL	PRINTS
                *
 C034 210040    	LXI	H,4000H
 C037 2273C3    	SHLD	ROMLOC
 C03A 210080    	LXI	H,8000H ; UP TO 32K ROMS
 C03D 2275C3    	SHLD	ROMSIZ
 C040 215C00    	LXI	H,DEFFCB ; COMMAND LINE FCB
 C043 CD9DC1    	CALL	LDROM
 C046 FEFF      	CPI	0FFH
 C048 CA94C1    	JZ	NOGAMEF
                * GET GAME LAUNCH ADDRESS
 C04B CD23C2    	CALL	CRLF
 C04E 2A0240    	LHLD	4002H
 C051 227AC3    	SHLD	GAMADR	; GAME START ADR
 C054 E5        	PUSH	H
 C055 7C        	MOV	A,H
 C056 E680      	ANI	80H	; GAME SHOULD BE AT 8000H INSTEAD OF 4000H
 C058 C4F5C1    	CNZ	COPYTO8
 C05B 2163C3    	LXI	H,STARTM
 C05E CD53C2    	CALL	PRINTS
 C061 E1        	POP	H
 C062 7C        	MOV	A,H
 C063 CD2EC2    	CALL	OUTHEX
 C066 7D        	MOV	A,L
 C067 CD2EC2    	CALL	OUTHEX
 C06A CD23C2    	CALL	CRLF
                *
                IF	PATCHE
                	LXI	H,LOADR2
                	CALL	PRINTS
                ENDIF
                * PATCH ELEVATOR ACTION (HACK)
 C06D 211640    	LXI	H,4016H
 C070 7E        	MOV	A,M
 C071 FECD      	CPI	0CDH	; LOOK FOR CALL 4D59H
 C073 C28CC0    	JNZ	STARTH1
 C076 23        	INX	H
 C077 7E        	MOV	A,M	; 59H
 C078 FE59      	CPI	059H
 C07A C28CC0    	JNZ	STARTH1
 C07D 23        	INX	H
 C07E 7E        	MOV	A,M
 C07F FE4D      	CPI	04DH	; 4DH
 C081 C28CC0    	JNZ	STARTH1
 C084 3600      	MVI	M,0	; CHANGE TO NOP,NOP,NOP
 C086 2B        	DCX	H
 C087 3600      	MVI	M,0
 C089 2B        	DCX	H
 C08A 3600      	MVI	M,0
                * PATCH HARDCODED VDP AND PSG REFERENCES IN THE ROM CODE, IF ANY
                * THIS IS ENABLED IN THE MSX8P.COM VERSION BUT IN THE STANDARD MSX8.COM...
                * ...WE DO NOT DO THIS BECAUSE SOMETIMES IT WILL BREAK THE GAME
                * THE PATCHER WILL LOOK FOR DIRECT I/O TO THE VDP AND PSG AND PATCH...
                * ...WITH THE CORRECTED I/O ADDRESSES
 C08C =         STARTH1 EQU	$
                IF	PATCHE
                	CALL	PATCH
                *
                	LXI	H,LOADR3
                	CALL	PRINTS
                	LDA	PATCNT
                	CALL	OUTHEX
                	CALL	CRLF
                ENDIF
                * COPY 16K BIOS DOWN TO 0000H
 C08C 210001    	LXI	H,0100H ; BIOS LOCATION
 C08F 110000    	LXI	D,0000H ; TARGET LOCATION
 C092 01003F    	LXI	B,3F00H ; APPROX 16K
 C095 =         COPYB	EQU	$
 C095 7E        	MOV	A,M
 C096 23        	INX	H
 C097 12        	STAX	D
 C098 13        	INX	D
 C099 0B        	DCX	B
 C09A 79        	MOV	A,C
 C09B B0        	ORA	B
 C09C C295C0    	JNZ	COPYB
                *
 C09F 21E0C2    	LXI	H,RUNGAM
 C0A2 CD53C2    	CALL	PRINTS
                * INITIALIZE UPPER MEMORY VARIABLES
 C0A5 2100F0    	LXI	H,0F000H
 C0A8 01FF0F    	LXI	B,0FFFH
                * ZERO ALL FROM 0xF000 UP TO 0xFFFF
 C0AB =         FILL00	EQU	$
 C0AB AF        	XRA	A
 C0AC 77        	MOV	M,A
 C0AD 23        	INX	H
 C0AE 0B        	DCX	B
 C0AF 79        	MOV	A,C
 C0B0 B0        	ORA	B
 C0B1 C2ABC0    	JNZ	FILL00
                * FILL IN DEFAULT VALUES FOR WORKSPACE AREA
                * THESE VALUES ARE IN MSX-US.ROM AT 0x2768 SO IF
                * THE ADDRESS CHANGES YOU NEED TO UPDATE IT HERE
 C0B4 216827    	LXI	H,02768H
 C0B7 1180F3    	LXI	D,0F380H
 C0BA 019000    	LXI	B,90H
 C0BD =         TOF380	EQU	$
 C0BD 7E        	MOV	A,M
 C0BE 23        	INX	H
 C0BF 12        	STAX	D
 C0C0 13        	INX	D
 C0C1 0B        	DCX	B
 C0C2 79        	MOV	A,C
 C0C3 B0        	ORA	B
 C0C4 C2BDC0    	JNZ	TOF380
                * NOW PATCH HIGH MEMORY AREAS WITH DEFAULT VALUES
                * THESE VALUES WERE TAKEN FROM MSX REDBOOK
 C0C7 2168F1    	LXI	H,0F168H
 C0CA 2272F6    	SHLD	MEMSIZ
 C0CD 21A0F0    	LXI	H,0F0A0H
 C0D0 2274F6    	SHLD	STKTOP
 C0D3 210180    	LXI	H,8001H
 C0D6 2276F6    	SHLD	TXTTAB
 C0D9 217AF6    	LXI	H,0F67AH
 C0DC 2278F6    	SHLD	TEMPPT
 C0DF 2168F1    	LXI	H,0F168H
 C0E2 229BF6    	SHLD	FRETOP
 C0E5 219EF0    	LXI	H,0F09EH
 C0E8 22B1F6    	SHLD	SAVSTK
 C0EB 210380    	LXI	H,8003H
 C0EE 22C2F6    	SHLD	VARTAB
 C0F1 22C4F6    	SHLD	ARYTAB
 C0F4 22C6F6    	SHLD	STREND
 C0F7 210080    	LXI	H,8000H
 C0FA 22C8F6    	SHLD	DATPTR
 C0FD 011A00    	LXI	B,26
 C100 21CAF6    	LXI	H,DEFTBL
 C103 =         DEFTBL0 EQU	$
 C103 3608      	MVI	M,08H
 C105 23        	INX	H
 C106 0D        	DCR	C
 C107 C203C1    	JNZ	DEFTBL0
 C10A 21E4F6    	LXI	H,0F6E4H
 C10D 22E4F6    	SHLD	PRMPRV
 C110 3E01      	MVI	A,1
 C112 325FF8    	STA	MAXFIL
 C115 216AF1    	LXI	H,0F16AH
 C118 2260F8    	SHLD	FILTAB
 C11B 2177F1    	LXI	H,0F177H
 C11E 2262F8    	SHLD	NULBUF
 C121 AF        	XRA	A
 C122 321FF9    	STA	CGPNT
 C125 21BF1B    	LXI	H,1BBFH
 C128 2220F9    	SHLD	CGPNT+1
 C12B 210008    	LXI	H,0800H
 C12E 2224F9    	SHLD	CGPBAS
 C131 210038    	LXI	H,3800H
 C134 2226F9    	SHLD	PATBAS
 C137 21001B    	LXI	H,1B00H
 C13A 2228F9    	SHLD	ATRBAS
 C13D 3E80      	MVI	A,80H
 C13F 322CF9    	STA	CMASK
 C142 210080    	LXI	H,8000H
 C145 2248FC    	SHLD	BOTTOM
 C148 2180F3    	LXI	H,0F380H
 C14B 224AFC    	SHLD	HIMEM
                * SETUP UPPER MEMORY HOOKS WITH RET OPCODES
 C14E 219AFD    	LXI	H,0FD9AH
 C151 013002    	LXI	B,0230H
 C154 =         FILLC9	EQU	$
 C154 3EC9      	MVI	A,0C9H
 C156 77        	MOV	M,A
 C157 23        	INX	H
 C158 0B        	DCX	B
 C159 79        	MOV	A,C
 C15A B0        	ORA	B
 C15B C254C1    	JNZ	FILLC9
                * SET H8 TO 4MHZ
 C15E 3E02      	MVI	A,2
 C160 D330      	OUT	030H
                * DISABLE UART INTERRUPTS - FOR HEATHKIT SYSTEMS CP/M ENABLES THESE SO WE
                * ...NEED TO TURN THEM OFF
 C162 3E00      	MVI	A,0
 C164 D3E9      	OUT	0E9H	; DISABLE UART INTERRUPTS
                * TURN ON Z80 IM1 MODE
 C166 ED56      	DB	0EDH,056H
                *
 C168 FB        	EI
                * WAIT FOR 'L' TO LAUNCH THE GAME
 C169 =         STARTL	EQU	$
 C169 CD0EC2    	CALL	IN350
 C16C CD17C2    	CALL	OUT350
 C16F FE44      	CPI	'D'
 C171 CC4100    	CZ	DISSCR
 C174 FE45      	CPI	'E'
 C176 CC4400    	CZ	ENASCR
 C179 FE4C      	CPI	'L'
 C17B C269C1    	JNZ	STARTL
                *
 C17E 21FBC2    	LXI	H,LAUGAM
 C181 CD53C2    	CALL	PRINTS
                *
 C184 2A0240    	LHLD	4002H
 C187 E9        	PCHL
 C188 C30000    	JMP	0000H
                *
 C18B =         NOBIOSF EQU	$
 C18B 210EC3    	LXI	H,NOBIOS
 C18E CD53C2    	CALL	PRINTS
 C191 C30000    	JMP	0000H
                *
 C194 =         NOGAMEF EQU	$
 C194 2130C3    	LXI	H,NOGAME
 C197 CD53C2    	CALL	PRINTS
 C19A C30000    	JMP	0000H
                *
 C19D =         LDROM	EQU	$
 C19D 227CC3    	SHLD	CURFCB
 C1A0 EB        	XCHG
 C1A1 010F00    	LXI	B,000FH
 C1A4 CD0500    	CALL	BDOS
 C1A7 FEFF      	CPI	0FFH
 C1A9 C8        	RZ
 C1AA 110000    	LXI	D,0000H
 C1AD =         LDROML	EQU	$
 C1AD D5        	PUSH	D
 C1AE 011400    	LXI	B,0014H
 C1B1 2A7CC3    	LHLD	CURFCB
 C1B4 EB        	XCHG
 C1B5 CD0500    	CALL	BDOS	; READ 128 BYTES TO 0080H
 C1B8 D1        	POP	D
 C1B9 B7        	ORA	A
 C1BA C2E5C1    	JNZ	LDROMX
 C1BD D5        	PUSH	D
 C1BE 2A73C3    	LHLD	ROMLOC
 C1C1 19        	DAD	D	; ADD OFFSET
 C1C2 EB        	XCHG		; DE=DESTINATION+OFFSET
 C1C3 018000    	LXI	B,128	; BYTES TO COPY
 C1C6 218000    	LXI	H,0080H ; DMA ADDRESS
 C1C9 =         LDROM1	EQU	$
 C1C9 7E        	MOV	A,M
 C1CA 12        	STAX	D
 C1CB 23        	INX	H
 C1CC 13        	INX	D
 C1CD 0D        	DCR	C
 C1CE C2C9C1    	JNZ	LDROM1
 C1D1 D1        	POP	D
 C1D2 EB        	XCHG		; HL=OFFSET
 C1D3 118000    	LXI	D,128
 C1D6 19        	DAD	D	; HL=OFFSET+128
 C1D7 EB        	XCHG		; DE=OFFSET+128
 C1D8 3E2E      	MVI	A,'.'
 C1DA CD17C2    	CALL	OUT350
 C1DD 2A75C3    	LHLD	ROMSIZ
 C1E0 7A        	MOV	A,D
 C1E1 BC        	CMP	H	; LOADED ENOUGH?
 C1E2 C2ADC1    	JNZ	LDROML	; COPY NEXT RECORD
                * CLOSE FILE AND RETURN
 C1E5 =         LDROMX	EQU	$
 C1E5 EB        	XCHG		; HL=BYTES READ
 C1E6 2277C3    	SHLD	ROMCNT
 C1E9 011000    	LXI	B,0010H
 C1EC 2A7CC3    	LHLD	CURFCB
 C1EF EB        	XCHG
 C1F0 CD0500    	CALL	BDOS
 C1F3 AF        	XRA	A
 C1F4 C9        	RET
                * LOOKING FOR DIRECT I/O TO PSG (A0,A1,A2) AND VDP (98,99)
                * AND REPLACING WITH HEATHKIT PSG (BA,BB) AND VDP (B8,B9)
                IF	PATCHE
                PATCH	EQU	$
                	XRA	A
                	STA	PATCNT
                	LHLD	ROMCNT
                	XCHG		; DE=ROM BYTES READ
                	LXI	H,04000H
                PATCH0	EQU	$
                	MOV	A,M
                	INX	H
                	CPI	0DBH	; IN OPCODE
                	CZ	PATCH1
                	CPI	0D3H	; OUT OPCODE
                	CZ	PATCH1
                	CPI	0EDH	; OUTI OPCODE
                	CZ	PATCH2
                	DCX	D
                	MOV	A,E
                	ORA	D
                	JNZ	PATCH0
                	RET
                PATCH1	EQU	$
                	MOV	A,M
                	CPI	0A0H
                	CZ	PATCHA0
                	CPI	0A1H
                	CZ	PATCHA1
                	CPI	0A2H
                	CZ	PATCHA2
                	CPI	098H
                	CZ	PATCH98
                	CPI	099H
                	CZ	PATCH99
                	CPI	0A9H
                	CZ	PATCHA9
                	RET
                PATCHA0 EQU	$
                	MVI	M,0BBH
                	JMP	PATCHED
                PATCHA1 EQU	$
                	MVI	M,0BAH
                	JMP	PATCHED
                * LOOK FOR AND PATCH JOYSTICK FUNCTION
                * OUT 0A0H,A
                * IN A,0A2H
                * CHANGES TO
                * CALL 00D5H
                * NOP
                PATCHA2 EQU	$
                	PUSH	H
                	MVI	C,1
                PATCHA3 EQU	$
                	MVI	M,0	; NOP
                	DCX	H
                	INR	C
                	MOV	A,M
                	CPI	0D3H	; LOOK FOR OUT (0A0H),A
                	JNZ	PATCHA3
                *	MOV	A,C
                *	CALL	OUTHEX
                	PUSH	H
                	MVI	M,0CDH
                	INX	H
                	DCR	C
                	MVI	M,0D5H
                	INX	H
                	DCR	C
                	MVI	M,000H	; CALL 00D5H (GTSTCK)
                	INX	H
                	DCR	C
                	MVI	M,02FH	; CPL
                	INX	H
                	DCR	C
                	JZ	PATCHA5
                PATCHA4 EQU	$
                	MVI	M,000H	; NOP OPCODES
                	INX	H
                	DCR	C
                	JNZ	PATCHA4
                PATCHA5 EQU	$
                	POP	H
                	MVI	C,8
                *	CALL	OUTMEM
                	POP	H
                	JMP	PATCHED
                * IN A,(0A9H) = XOR A, CPL
                PATCHA9 EQU	$
                	PUSH	H
                	MVI	M,02FH
                	DCX	H
                	PUSH	H
                	MVI	M,0AFH
                	INX	H
                	POP	H
                	MVI	C,8
                *	CALL	OUTMEM
                	POP	H
                	JMP	PATCHED
                PATCH98 EQU	$
                	MVI	M,0B8H
                	JMP	PATCHED
                PATCH99 EQU	$
                	MVI	M,0B9H
                PATCHED EQU	$
                	LDA	PATCNT
                	INR	A
                	STA	PATCNT
                	XRA	A
                	RET
                PATCH2	EQU	$	; PATCH OUTI OPCODE
                	PUSH	H
                PATCH3	EQU	$
                	DCX	H
                	MOV	A,M
                	CPI	00EH	; LOOK FOR LD C,<N>
                	JNZ	PATCH3
                	INX	H	; ADVANCE TO <N>
                	CALL	PATCH1
                	POP	H
                	RET
                ENDIF
                * GAME IS SET UP TO RUN AT 8000H INSTEAD OF 4000H SO COPY
                * 16K ROM BYTES TO 8000H
 C1F5 =         COPYTO8 EQU	$
 C1F5 210040    	LXI	H,4000H
 C1F8 110080    	LXI	D,8000H
 C1FB 010040    	LXI	B,4000H
 C1FE =         COPYTOL EQU	$
 C1FE 7E        	MOV	A,M
 C1FF 23        	INX	H
 C200 12        	STAX	D
 C201 13        	INX	D
 C202 0B        	DCX	B
 C203 79        	MOV	A,C
 C204 B0        	ORA	B
 C205 C2FEC1    	JNZ	COPYTOL
 C208 C9        	RET
                * CANNOT RELY ON BDOS ANYMORE AS IT WILL BE DESTROYED
                * WHEN MSX BIOS IS LOADED SO WE READ THE 16550 CONSOLE
                * PORT DIRECTLY
 C209 =         IN350R	EQU	$	; CHAR READY?
 C209 DBED      	IN	0EDH
 C20B E601      	ANI	01H
 C20D C9        	RET
 C20E =         IN350	EQU	$	; WAIT FOR INPUT
 C20E CD09C2    	CALL	IN350R
 C211 CA0EC2    	JZ	IN350
 C214 DBE8      	IN	0E8H
 C216 C9        	RET
                *
 C217 =         OUT350	EQU	$
 C217 F5        	PUSH	PSW
 C218 =         OUT350L EQU	$
 C218 DBED      	IN	0EDH
 C21A E620      	ANI	20H
 C21C CA18C2    	JZ	OUT350L
 C21F F1        	POP	PSW
 C220 D3E8      	OUT	0E8H
 C222 C9        	RET
                *
 C223 =         CRLF	EQU	$
 C223 3E0D      	MVI	A,0DH
 C225 CD17C2    	CALL	OUT350
 C228 3E0A      	MVI	A,0AH
 C22A CD17C2    	CALL	OUT350
 C22D C9        	RET
                IF	0
                * DUMP MEM AT HL C=NUM BYTES
                OUTMEM	EQU	$
                	CALL	CRLF
                	MOV	A,H
                	CALL	OUTHEX
                	MOV	A,L
                	CALL	OUTHEX
                	MOV	A,M
                	CALL	OUTHEX
                	INX	H
                	DCR	C
                	JNZ	OUTMEM
                	CALL	CRLF
                	CALL	CRLF
                	RET
                ENDIF
                * PRINT HEX VALUE OF (A) TO CONSOLE
 C22E =         OUTHEX	EQU	$
 C22E D5        	PUSH	D
 C22F E5        	PUSH	H
 C230 F5        	PUSH	PSW
 C231 E6F0      	ANI	0F0H
 C233 1F        	RAR
 C234 1F        	RAR
 C235 1F        	RAR
 C236 1F        	RAR
 C237 5F        	MOV	E,A
 C238 1600      	MVI	D,0
 C23A 215DC2    	LXI	H,HEXTBL
 C23D 19        	DAD	D
 C23E 7E        	MOV	A,M
 C23F CD17C2    	CALL	OUT350
 C242 F1        	POP	PSW
 C243 E60F      	ANI	00FH
 C245 5F        	MOV	E,A
 C246 1600      	MVI	D,0
 C248 215DC2    	LXI	H,HEXTBL
 C24B 19        	DAD	D
 C24C 7E        	MOV	A,M
 C24D CD17C2    	CALL	OUT350
 C250 E1        	POP	H
 C251 D1        	POP	D
 C252 C9        	RET
                * HL=STRING TERMINATED WITH 0
 C253 =         PRINTS	EQU	$
 C253 7E        	MOV	A,M
 C254 B7        	ORA	A
 C255 C8        	RZ
 C256 CD17C2    	CALL	OUT350
 C259 23        	INX	H
 C25A C353C2    	JMP	PRINTS
                *
 C25D 3031323334HEXTBL	DB	'0123456789ABCDEF'
                *
 C26D 0D0A4D5358MSX8MSG DB	0DH,0AH,'MSX ROM LOADER',0DH,0AH
 C27F 5553414745	DB	'USAGE: MSX8 GAMEFILE.ROM',0DH,0AH
 C299 3230323420	DB	'2024 BY LES BIRD',0DH,0AH
 C2AB 00        	DB	0
 C2AC 0D0A      LOADB1	DB	0DH,0AH
 C2AE 4C4F414449	DB	'LOADING MSX-US.ROM BIOS',0DH,0AH,0
 C2C8 444F4E450DLOADB2	DB	'DONE',0DH,0AH,0
 C2CF 0D0A      LOADR1	DB	0DH,0AH
 C2D1 4C4F414449	DB	'LOADING GAME',0DH,0AH,0
                IF	PATCHE
                LOADR2	DB	0DH,0AH
                	DB	'PATCHING (IF NECESSARY)...',0
                LOADR3	DB	0DH,0AH
                	DB	'DONE - PATCHES APPLIED: ',0
                ENDIF
 C2E0 0D0A      RUNGAM	DB	0DH,0AH
 C2E2 5052455353	DB	'PRESS L TO LAUNCH GAME',0DH,0AH,0
 C2FB 0D0A      LAUGAM	DB	0DH,0AH
 C2FD 4C41554E43	DB	'LAUNCHING GAME',0DH,0AH,0
 C30E 0D0A      NOBIOS	DB	0DH,0AH
 C310 4E4F204D53	DB	'NO MSX-US.ROM BIOS FILE FOUND',0DH,0AH,0
 C330 0D0A      NOGAME	DB	0DH,0AH
 C332 4E4F204741	DB	'NO GAME FILE TO LOAD',0DH,0AH
 C348 5553414745	DB	'USAGE: MSX8 GAMEFILE.ROM',0DH,0AH,0
 C363 5354415254STARTM	DB	'START ADDRESS: ',0
                *
 C373 0000      ROMLOC	DW	0
 C375 0000      ROMSIZ	DW	0
 C377 0000      ROMCNT	DW	0
 C379 00        PATCNT	DB	0
 C37A 0000      GAMADR	DW	0
 C37C 0000      CURFCB	DW	0
                *
 C37E 00        FCBBIOS DB	0		; DRIVE
 C37F 4D53582D55	DB	'MSX-US  '	; FILENAME
 C387 524F4D    	DB	'ROM'		; EXTENSION
 C38A 00        	DB	0		; EXT NUM
 C38B 00        	DB	0		; RESERVED
 C38C 00        	DB	0		; RESERVED
 C38D 00        	DB	0		; RECORD COUNT
 C38E           	DS	16
 C39E 00        	DB	0		; CURRENT RECORD
 C39F           	DS	3		; RANDOM RECORD NUM
                *
 C3A2 00        FCBGAME DB	0
 C3A3 47414C4158	DB	'GALAX343'
 C3AB 524F4D    	DB	'ROM'
 C3AE 00        	DB	0
 C3AF 00        	DB	0
 C3B0 00        	DB	0
 C3B1 00        	DB	0
 C3B2           	DS	16
 C3C2 00        	DB	0
 C3C3           	DS	3
                *
 C3C6           	DS	32
 C3E6 =         STACK	EQU	$
                *
 C3E6           	END	START
