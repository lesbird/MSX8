*
* MSX ROM LOADER
*
* CP/M SAFE
* LOAD MSX-US.ROM TO 0100H
* LOAD GAME.ROM TO 4000H
* CP/M UNSAFE FROM HERE ON
* COPY 0100H DOWN TO 0000H
* JUMP TO GAME START ADR LOADED FROM 4002H
*
BDOS	EQU	0005H
DEFFCB	EQU	005CH
* TEST ROUTINES TO MAKE SURE MSX BIOS IS LOADED
DISSCR	EQU	0041H
ENASCR	EQU	0044H
* MEM LOCS TO INITIALIZE
MEMSIZ	EQU	0F672H
STKTOP	EQU	0F674H
TXTTAB	EQU	0F676H
TEMPPT	EQU	0F678H
FRETOP	EQU	0F69BH
SAVSTK	EQU	0F6B1H
VARTAB	EQU	0F6C2H
ARYTAB	EQU	0F6C4H
STREND	EQU	0F6C6H
DATPTR	EQU	0F6C8H
DEFTBL	EQU	0F6CAH
PRMPRV	EQU	0F6E4H
MAXFIL	EQU	0F85FH
FILTAB	EQU	0F860H
NULBUF	EQU	0F862H
CGPNT	EQU	0F91FH
CGPBAS	EQU	0F924H
PATBAS	EQU	0F926H
ATRBAS	EQU	0F928H
CMASK	EQU	0F92CH
BOTTOM	EQU	0FC48H
HIMEM	EQU	0FC4AH
*
	ORG	100H
*
START	EQU	$
	LXI	SP,STACK
	JMP	STARTH
*
	ORG	0C000H
* RUNNING IN HIGH MEMORY
STARTH	EQU	$
	DI
* TURN OFF H8 FRONT PANEL INTERRUPTS
	MVI	A,090H
	OUT	0F0H
* SHOW SIGN-ON MESSAGE
	LXI	H,MSX8MSG
	CALL	PRINTS
*
	LXI	H,LOADB1
	CALL	PRINTS
*
	LXI	H,0100H
	SHLD	ROMLOC
	LXI	H,3F00H ; UP TO 16K
	SHLD	ROMSIZ
	LXI	H,FCBBIOS
	CALL	LDROM
	CPI	0FFH
	JZ	NOBIOSF
*
	LXI	H,LOADB2
	CALL	PRINTS
*
	LXI	H,LOADR1
	CALL	PRINTS
*
	LXI	H,4000H
	SHLD	ROMLOC
	LXI	H,8000H ; UP TO 32K ROMS
	SHLD	ROMSIZ
	LXI	H,DEFFCB ; COMMAND LINE FCB
	CALL	LDROM
	CPI	0FFH
	JZ	NOGAMEF
* GET GAME LAUNCH ADDRESS
	CALL	CRLF
	LHLD	4002H
	SHLD	GAMADR	; GAME START ADR
	MOV	A,H
	CPI	80H	; GAME SHOULD BE AT 8000H INSTEAD OF 4000H
	CZ	COPYTO8
	PUSH	H
	LXI	H,STARTM
	CALL	PRINTS
	POP	H
	MOV	A,H
	CALL	OUTHEX
	MOV	A,L
	CALL	OUTHEX
	CALL	CRLF
*
	LXI	H,LOADR2
	CALL	PRINTS
* PATCH ELEVATOR ACTION (HACK)
	LXI	H,4016H
	MOV	A,M
	CPI	0CDH	; LOOK FOR CALL 4D59H
	JNZ	STARTH1
	INX	H
	MOV	A,M	; 59H
	CPI	059H
	JNZ	STARTH1
	INX	H
	MOV	A,M
	CPI	04DH	; 4DH
	JNZ	STARTH1
	MVI	M,0	; CHANGE TO NOP,NOP,NOP
	DCX	H
	MVI	M,0
	DCX	H
	MVI	M,0
* PATCH HARDCODED VDP AND PSG REFERENCES IN THE ROM CODE, IF ANY
* THIS IS ENABLED IN THE MSX8P.COM VERSION BUT IN THE STANDARD MSX8.COM...
* ...WE DO NOT DO THIS BECAUSE SOMETIMES IT WILL BREAK THE GAME
* THE PATCHER WILL LOOK FOR DIRECT I/O TO THE VDP AND PSG AND PATCH...
* ...WITH THE CORRECTED I/O ADDRESSES
STARTH1 EQU	$
*	CALL	PATCH
*
	LXI	H,LOADR3
	CALL	PRINTS
	LDA	PATCNT
	CALL	OUTHEX
	CALL	CRLF
* COPY 16K BIOS DOWN TO 0000H
	LXI	H,0100H ; BIOS LOCATION
	LXI	D,0000H ; TARGET LOCATION
	LXI	B,3F00H ; 16K
COPYB	EQU	$
	MOV	A,M
	INX	H
	STAX	D
	INX	D
	DCX	B
	MOV	A,C
	ORA	B
	JNZ	COPYB
*
	LXI	H,RUNGAM
	CALL	PRINTS
* INITIALIZE UPPER MEMORY VARIABLES
	LXI	H,0F000H
	LXI	B,0FFFH
* ZERO ALL FROM 0xF000 UP TO 0xFFFF
FILL00	EQU	$
	XRA	A
	MOV	M,A
	INX	H
	DCX	B
	MOV	A,C
	ORA	B
	JNZ	FILL00
* FILL IN DEFAULT VALUES FOR WORKSPACE AREA
* THESE VALUES ARE IN MSX-US.ROM AT 0x2768 SO IF
* THE ADDRESS CHANGES YOU NEED TO UPDATE IT HERE
	LXI	H,02768H
	LXI	D,0F380H
	LXI	B,90H
TOF380	EQU	$
	MOV	A,M
	INX	H
	STAX	D
	INX	D
	DCX	B
	MOV	A,C
	ORA	B
	JNZ	TOF380
* NOW PATCH HIGH MEMORY AREAS WITH DEFAULT VALUES
* THESE VALUES WERE TAKEN FROM MSX REDBOOK
	LXI	H,0F168H
	SHLD	MEMSIZ
	LXI	H,0F0A0H
	SHLD	STKTOP
	LXI	H,8001H
	SHLD	TXTTAB
	LXI	H,0F67AH
	SHLD	TEMPPT
	LXI	H,0F168H
	SHLD	FRETOP
	LXI	H,0F09EH
	SHLD	SAVSTK
	LXI	H,8003H
	SHLD	VARTAB
	SHLD	ARYTAB
	SHLD	STREND
	LXI	H,8000H
	SHLD	DATPTR
	LXI	B,26
	LXI	H,DEFTBL
DEFTBL0 EQU	$
	MVI	M,08H
	INX	H
	DCR	C
	JNZ	DEFTBL0
	LXI	H,0F6E4H
	SHLD	PRMPRV
	MVI	A,1
	STA	MAXFIL
	LXI	H,0F16AH
	SHLD	FILTAB
	LXI	H,0F177H
	SHLD	NULBUF
	XRA	A
	STA	CGPNT
	LXI	H,1BBFH
	SHLD	CGPNT+1
	LXI	H,0800H
	SHLD	CGPBAS
	LXI	H,3800H
	SHLD	PATBAS
	LXI	H,1B00H
	SHLD	ATRBAS
	MVI	A,80H
	STA	CMASK
	LXI	H,8000H
	SHLD	BOTTOM
	LXI	H,0F380H
	SHLD	HIMEM
* SETUP UPPER MEMORY HOOKS WITH RET OPCODES
	LXI	H,0FD9AH
	LXI	B,0230H
FILLC9	EQU	$
	MVI	A,0C9H
	MOV	M,A
	INX	H
	DCX	B
	MOV	A,C
	ORA	B
	JNZ	FILLC9
* SET H8 TO 4MHZ
	MVI	A,2
	OUT	030H
* DISABLE UART INTERRUPTS - FOR HEATHKIT SYSTEMS CP/M ENABLES THESE SO WE
* ...NEED TO TURN THEM OFF
	MVI	A,0
	OUT	0E9H	; DISABLE UART INTERRUPTS
* TURN ON Z80 IM1 MODE
	DB	0EDH,056H
*
	EI
* WAIT FOR 'L' TO LAUNCH THE GAME
STARTL	EQU	$
	CALL	IN350
	CALL	OUT350
	CPI	'D'
	CZ	DISSCR
	CPI	'E'
	CZ	ENASCR
	CPI	'L'
	JNZ	STARTL
*
	LXI	H,LAUGAM
	CALL	PRINTS
*
	LHLD	4002H
	PCHL
	JMP	0000H
*
NOBIOSF EQU	$
	LXI	H,NOBIOS
	CALL	PRINTS
	JMP	0000H
*
NOGAMEF EQU	$
	LXI	H,NOGAME
	CALL	PRINTS
	JMP	0000H
*
LDROM	EQU	$
	SHLD	CURFCB
	XCHG
	LXI	B,000FH
	CALL	BDOS
	CPI	0FFH
	RZ
	LXI	D,0000H
LDROML	EQU	$
	PUSH	D
	LXI	B,0014H
	LHLD	CURFCB
	XCHG
	CALL	BDOS	; READ 128 BYTES TO 0080H
	POP	D
	ORA	A
	JNZ	LDROMX
	PUSH	D
	LHLD	ROMLOC
	DAD	D	; ADD OFFSET
	XCHG		; DE=DESTINATION+OFFSET
	LXI	B,128	; BYTES TO COPY
	LXI	H,0080H ; DMA ADDRESS
LDROM1	EQU	$
	MOV	A,M
	STAX	D
	INX	H
	INX	D
	DCR	C
	JNZ	LDROM1
	POP	D
	XCHG		; HL=OFFSET
	LXI	D,128
	DAD	D	; HL=OFFSET+128
	XCHG		; DE=OFFSET+128
	MVI	A,'.'
	CALL	OUT350
	LHLD	ROMSIZ
	MOV	A,D
	CMP	H	; LOADED ENOUGH?
	JNZ	LDROML	; COPY NEXT RECORD
* CLOSE FILE AND RETURN
LDROMX	EQU	$
	XCHG		; HL=BYTES READ
	SHLD	ROMCNT
	LXI	B,0010H
	LHLD	CURFCB
	XCHG
	CALL	BDOS
	XRA	A
	RET
* LOOKING FOR DIRECT I/O TO PSG (A0,A1,A2) AND VDP (98,99)
* AND REPLACING WITH HEATHKIT PSG (BA,BB) AND VDP (B8,B9)
PATCH	EQU	$
	XRA	A
	STA	PATCNT
	LHLD	ROMCNT
	XCHG		; DE=ROM BYTES READ
	LXI	H,04000H
PATCH0	EQU	$
	MOV	A,M
	INX	H
	CPI	0DBH	; IN OPCODE
	CZ	PATCH1
	CPI	0D3H	; OUT OPCODE
	CZ	PATCH1
	CPI	0EDH	; OUTI OPCODE
	CZ	PATCH2
	DCX	D
	MOV	A,E
	ORA	D
	JNZ	PATCH0
	RET
PATCH1	EQU	$
	MOV	A,M
	CPI	0A0H
	CZ	PATCHA0
	CPI	0A1H
	CZ	PATCHA1
	CPI	0A2H
	CZ	PATCHA2
	CPI	098H
	CZ	PATCH98
	CPI	099H
	CZ	PATCH99
	CPI	0A9H
	CZ	PATCHA9
	RET
PATCHA0 EQU	$
	MVI	M,0BBH
	JMP	PATCHED
PATCHA1 EQU	$
	MVI	M,0BAH
	JMP	PATCHED
* LOOK FOR AND PATCH JOYSTICK FUNCTION
* OUT 0A0H,A
* IN A,0A2H
* CHANGES TO
* CALL 00D5H
* NOP
PATCHA2 EQU	$
	PUSH	H
	MVI	C,1
PATCHA3 EQU	$
	MVI	M,0	; NOP
	DCX	H
	INR	C
	MOV	A,M
	CPI	0D3H	; LOOK FOR OUT (0A0H),A
	JNZ	PATCHA3
*	MOV	A,C
*	CALL	OUTHEX
	PUSH	H
	MVI	M,0CDH
	INX	H
	DCR	C
	MVI	M,0D5H
	INX	H
	DCR	C
	MVI	M,000H	; CALL 00D5H (GTSTCK)
	INX	H
	DCR	C
	MVI	M,02FH	; CPL
	INX	H
	DCR	C
	JZ	PATCHA5
PATCHA4 EQU	$
	MVI	M,000H	; NOP OPCODES
	INX	H
	DCR	C
	JNZ	PATCHA4
PATCHA5 EQU	$
	POP	H
	MVI	C,8
*	CALL	OUTMEM
	POP	H
	JMP	PATCHED
* IN A,(0A9H) = XOR A, CPL
PATCHA9 EQU	$
	PUSH	H
	MVI	M,02FH
	DCX	H
	PUSH	H
	MVI	M,0AFH
	INX	H
	POP	H
	MVI	C,8
*	CALL	OUTMEM
	POP	H
	JMP	PATCHED
PATCH98 EQU	$
	MVI	M,0B8H
	JMP	PATCHED
PATCH99 EQU	$
	MVI	M,0B9H
PATCHED EQU	$
	LDA	PATCNT
	INR	A
	STA	PATCNT
	XRA	A
	RET
PATCH2	EQU	$	; PATCH OUTI OPCODE
	PUSH	H
PATCH3	EQU	$
	DCX	H
	MOV	A,M
	CPI	00EH	; LOOK FOR LD C,<N>
	JNZ	PATCH3
	INX	H	; ADVANCE TO <N>
	CALL	PATCH1
	POP	H
	RET
* GAME IS SET UP TO RUN AT 8000H INSTEAD OF 4000H SO COPY
* 16K ROM BYTES TO 8000H
COPYTO8	EQU	$
	LXI	H,4000H
	LXI	D,8000H
	LXI	B,4000H
COPYTOL	EQU	$
	MOV	A,M
	INX	H
	STAX	D
	INX	D
	DCX	B
	MOV	A,C
	ORA	B
	JNZ	COPYTOL
	RET
* CANNOT RELY ON BDOS ANYMORE AS IT WILL BE DESTROYED
* WHEN MSX BIOS IS LOADED SO WE READ THE 16550 CONSOLE
* PORT DIRECTLY
IN350R	EQU	$	; CHAR READY?
	IN	0EDH
	ANI	01H
	RET
IN350	EQU	$	; WAIT FOR INPUT
	CALL	IN350R
	JZ	IN350
	IN	0E8H
	RET
*
OUT350	EQU	$
	PUSH	PSW
OUT350L EQU	$
	IN	0EDH
	ANI	20H
	JZ	OUT350L
	POP	PSW
	OUT	0E8H
	RET
*
CRLF	EQU	$
	MVI	A,0DH
	CALL	OUT350
	MVI	A,0AH
	CALL	OUT350
	RET
* DUMP MEM AT HL C=NUM BYTES
OUTMEM	EQU	$
	CALL	CRLF
	MOV	A,H
	CALL	OUTHEX
	MOV	A,L
	CALL	OUTHEX
	MOV	A,M
	CALL	OUTHEX
	INX	H
	DCR	C
	JNZ	OUTMEM
	CALL	CRLF
	CALL	CRLF
	RET
* PRINT HEX VALUE OF (A) TO CONSOLE
OUTHEX	EQU	$
	PUSH	D
	PUSH	H
	PUSH	PSW
	ANI	0F0H
	RAR
	RAR
	RAR
	RAR
	MOV	E,A
	MVI	D,0
	LXI	H,HEXTBL
	DAD	D
	MOV	A,M
	CALL	OUT350
	POP	PSW
	ANI	00FH
	MOV	E,A
	MVI	D,0
	LXI	H,HEXTBL
	DAD	D
	MOV	A,M
	CALL	OUT350
	POP	H
	POP	D
	RET
* HL=STRING TERMINATED WITH 0
PRINTS	EQU	$
	MOV	A,M
	ORA	A
	RZ
	CALL	OUT350
	INX	H
	JMP	PRINTS
*
HEXTBL	DB	'0123456789ABCDEF'
*
MSX8MSG DB	0DH,0AH,'MSX ROM LOADER',0DH,0AH
	DB	'USAGE: MSX8 GAMEFILE.ROM',0DH,0AH
	DB	'2024 BY LES BIRD',0DH,0AH
	DB	0
LOADB1	DB	0DH,0AH
	DB	'LOADING MSX-US.ROM BIOS',0DH,0AH,0
LOADB2	DB	'DONE',0DH,0AH,0
LOADR1	DB	0DH,0AH
	DB	'LOADING GAME',0DH,0AH,0
LOADR2	DB	0DH,0AH
	DB	'PATCHING (IF NECESSARY)...',0
LOADR3	DB	0DH,0AH
	DB	'DONE - PATCHES APPLIED: ',0
RUNGAM	DB	0DH,0AH
	DB	'PRESS L TO LAUNCH GAME',0DH,0AH,0
LAUGAM	DB	0DH,0AH
	DB	'LAUNCHING GAME',0DH,0AH,0
NOBIOS	DB	0DH,0AH
	DB	'NO MSX-US.ROM BIOS FILE FOUND',0DH,0AH,0
NOGAME	DB	0DH,0AH
	DB	'NO GAME FILE TO LOAD',0DH,0AH
	DB	'USAGE: MSX8 GAMEFILE.ROM',0DH,0AH,0
STARTM	DB	'START ADDRESS: ',0
*
ROMLOC	DW	0
ROMSIZ	DW	0
ROMCNT	DW	0
PATCNT	DB	0
GAMADR	DW	0
CURFCB	DW	0
*
FCBBIOS DB	0		; DRIVE
	DB	'MSX-US  '	; FILENAME
	DB	'ROM'		; EXTENSION
	DB	0		; EXT NUM
	DB	0		; RESERVED
	DB	0		; RESERVED
	DB	0		; RECORD COUNT
	DS	16
	DB	0		; CURRENT RECORD
	DS	3		; RANDOM RECORD NUM
*
FCBGAME DB	0
	DB	'GALAX343'
	DB	'ROM'
	DB	0
	DB	0
	DB	0
	DB	0
	DS	16
	DB	0
	DS	3
*
	DS	64
STACK	EQU	$
*
	END	START
