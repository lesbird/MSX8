basic2.asm:
     1                          ; BASIC.ASM
     2                          
     3                          ; MSX BASIC ROM, MSX 1 version (version 1.0)
     4                          
     5                          ; Source re-created by Z80DIS 2.2
     6                          ; Z80DIS was written by Kenneth Gielow, Palo Alto, CA
     7                          
     8                          ; Code Copyrighted by ASCII and maybe others
     9                          ; Source comments by Arjen Zeilemaker
    10                          
    11                          ; Sourcecode supplied for STUDY ONLY
    12                          ; Recreation NOT permitted without authorisation of the copyrightholders
    13                          
    14                          
    15                                  INCLUDE "const.def"
const.def:
     1                          DEFC S_COLOR     = $0155
     2                          DEFC S_SCREEN    = $0159
     3                          DEFC S_WIDTHS    = $015D
     4                          DEFC EXTROM      = $015F
     5                          DEFC S_VDP       = $0161
     6                          DEFC CHKSLZ      = $0162
     7                          DEFC S_VDPF      = $0165
     8                          DEFC CHKNEW      = $0165
     9                          DEFC S_BASE      = $0169
    10                          DEFC BIGFIL      = $016B
    11                          DEFC S_BASEF     = $016D
    12                          DEFC S_VPOKE     = $0171
    13                          DEFC S_VPEEK     = $0175
    14                          DEFC S_SETS      = $0179
    15                          DEFC CHGCPU      = $0180
    16                          DEFC S_PROMPT    = $0181
    17                          DEFC GETCPU      = $0183
    18                          DEFC S_SDFSCR    = $0185
    19                          DEFC S_SETSCR    = $0189
    20                          DEFC S_SCOPY     = $018D
    21                          DEFC S_GETPUT    = $01B1
    22                          DEFC VARWRK      = $F380
    23                          DEFC LOW_        = $F406
    24                          DEFC HIGH_       = $F408
    25                          DEFC HEADER      = $F40A
    26                          DEFC ERRFLG      = $F414
    27                          DEFC LPTPOS      = $F415
    28                          DEFC PRTFLG      = $F416
    29                          DEFC NTMSXP      = $F417
    30                          DEFC RAWPRT      = $F418
    31                          DEFC VLZADR      = $F419
    32                          DEFC VLZDAT      = $F41B
    33                          DEFC CURLIN      = $F41C
    34                          DEFC KBFMIN      = $F41E
    35                          DEFC KBUF        = $F41F
    36                          DEFC BUFMIN      = $F55D
    37                          DEFC BUF         = $F55E
    38                          DEFC ENDBUF      = $F660
    39                          DEFC TTYPOS      = $F661
    40                          DEFC DIMFLG      = $F662
    41                          DEFC VALTYP      = $F663
    42                          DEFC DORES       = $F664
    43                          DEFC DONUM       = $F665
    44                          DEFC CONTXT      = $F666
    45                          DEFC CONSAV      = $F668
    46                          DEFC CONTYP      = $F669
    47                          DEFC CONLO       = $F66A
    48                          DEFC MEMSIZ      = $F672
    49                          DEFC STKTOP      = $F674
    50                          DEFC TXTTAB      = $F676
    51                          DEFC TEMPPT      = $F678
    52                          DEFC TEMPST      = $F67A
    53                          DEFC DSCTMP      = $F698
    54                          DEFC FRETOP      = $F69B
    55                          DEFC TEMP3       = $F69D
    56                          DEFC TEMP8       = $F69F
    57                          DEFC ENDFOR      = $F6A1
    58                          DEFC DATLIN      = $F6A3
    59                          DEFC SUBFLG      = $F6A5
    60                          DEFC FLGINP      = $F6A6
    61                          DEFC TEMP        = $F6A7
    62                          DEFC PTRFLG      = $F6A9
    63                          DEFC AUTFLG      = $F6AA
    64                          DEFC AUTLIN      = $F6AB
    65                          DEFC AUTINC      = $F6AD
    66                          DEFC SAVTXT      = $F6AF
    67                          DEFC SAVSTK      = $F6B1
    68                          DEFC ERRLIN      = $F6B3
    69                          DEFC DOT         = $F6B5
    70                          DEFC ERRTXT      = $F6B7
    71                          DEFC ONELIN      = $F6B9
    72                          DEFC ONEFLG      = $F6BB
    73                          DEFC TEMP2       = $F6BC
    74                          DEFC OLDLIN      = $F6BE
    75                          DEFC OLDTXT      = $F6C0
    76                          DEFC VARTAB      = $F6C2
    77                          DEFC ARYTAB      = $F6C4
    78                          DEFC STREND      = $F6C6
    79                          DEFC DATPTR      = $F6C8
    80                          DEFC DEFTBL      = $F6CA
    81                          DEFC PRMSTK      = $F6E4
    82                          DEFC PRMLEN      = $F6E6
    83                          DEFC PARM1       = $F6E8
    84                          DEFC PRMPRV      = $F74C
    85                          DEFC PRMLN2      = $F74E
    86                          DEFC PARM2       = $F750
    87                          DEFC PRMFLG      = $F7B4
    88                          DEFC ARYTA2      = $F7B5
    89                          DEFC NOFUNS      = $F7B7
    90                          DEFC TEMP9       = $F7B8
    91                          DEFC FUNACT      = $F7BA
    92                          DEFC SWPTMP      = $F7BC
    93                          DEFC TRCFLG      = $F7C4
    94                          DEFC FBUFFR      = $F7C5
    95                          DEFC DECTMP      = $F7F0
    96                          DEFC DECTM2      = $F7F2
    97                          DEFC DECCNT      = $F7F4
    98                          DEFC DAC         = $F7F6
    99                          DEFC HOLD8       = $F806
   100                          DEFC ARG         = $F847
   101                          DEFC RNDX        = $F857
   102                          DEFC MAXFIL      = $F85F
   103                          DEFC FILTAB      = $F860
   104                          DEFC NULBUF      = $F862
   105                          DEFC PTRFIL      = $F864
   106                          DEFC FILNAM      = $F866
   107                          DEFC FILNM2      = $F871
   108                          DEFC NLONLY      = $F87C
   109                          DEFC SAVEND      = $F87D
   110                          DEFC FNKSTR      = $F87F
   111                          DEFC CGPNT       = $F91F
   112                          DEFC NAMBAS      = $F922
   113                          DEFC CGPBAS      = $F924
   114                          DEFC PATBAS      = $F926
   115                          DEFC ATRBAS      = $F928
   116                          DEFC CLOC        = $F92A
   117                          DEFC CMASK       = $F92C
   118                          DEFC MINDEL      = $F92D
   119                          DEFC MAXDEL      = $F92F
   120                          DEFC ASPECT      = $F931
   121                          DEFC CENCNT      = $F933
   122                          DEFC CLINEF      = $F935
   123                          DEFC CNPNTS      = $F936
   124                          DEFC CPLOTF      = $F938
   125                          DEFC CPCNT       = $F939
   126                          DEFC CPCNT8      = $F93B
   127                          DEFC CRCSUM      = $F93D
   128                          DEFC CSTCNT      = $F93F
   129                          DEFC CSCLXY      = $F941
   130                          DEFC CSAVEA      = $F942
   131                          DEFC CSAVEM      = $F944
   132                          DEFC CXOFF       = $F945
   133                          DEFC CYOFF       = $F947
   134                          DEFC LOHMSK      = $F949
   135                          DEFC LOHDIR      = $F94A
   136                          DEFC LOHADR      = $F94B
   137                          DEFC LOHCNT      = $F94D
   138                          DEFC SKPCNT      = $F94F
   139                          DEFC MOVCNT      = $F951
   140                          DEFC PDIREC      = $F953
   141                          DEFC LFPROG      = $F954
   142                          DEFC RTPROG      = $F955
   143                          DEFC MCLTAB      = $F956
   144                          DEFC MCLFLG      = $F958
   145                          DEFC QUETAB      = $F959
   146                          DEFC QUEBAK      = $F971
   147                          DEFC VOICAQ      = $F975
   148                          DEFC PRSCNT      = $FB35
   149                          DEFC SAVSP       = $FB36
   150                          DEFC VOICEN      = $FB38
   151                          DEFC SAVVOL      = $FB39
   152                          DEFC MCLLEN      = $FB3B
   153                          DEFC MCLPTR      = $FB3C
   154                          DEFC QUEUEN      = $FB3E
   155                          DEFC MUSICF      = $FB3F
   156                          DEFC PLYCNT      = $FB40
   157                          DEFC VCBA        = $FB41
   158                          DEFC VCBB        = $FB66
   159                          DEFC VCBC        = $FB8B
   160                          DEFC ENSTOP      = $FBB0
   161                          DEFC BASROM      = $FBB1
   162                          DEFC LINTTB      = $FBB2
   163                          DEFC FSTPOS      = $FBCA
   164                          DEFC CURSAV      = $FBCC
   165                          DEFC FNKSWI      = $FBCD
   166                          DEFC FNKFLG      = $FBCE
   167                          DEFC ONGSBF      = $FBD8
   168                          DEFC CLIKFL      = $FBD9
   169                          DEFC OLDKEY      = $FBDA
   170                          DEFC NEWKEY      = $FBE5
   171                          DEFC KEYBUF      = $FBF0
   172                          DEFC LINWRK      = $FC18
   173                          DEFC PATWRK      = $FC40
   174                          DEFC BOTTOM      = $FC48
   175                          DEFC HIMEM       = $FC4A
   176                          DEFC TRPTBL      = $FC4C
   177                          DEFC INTFLG      = $FC9B
   178                          DEFC PADY        = $FC9C
   179                          DEFC PADX        = $FC9D
   180                          DEFC JIFFY       = $FC9E
   181                          DEFC INTVAL      = $FCA0
   182                          DEFC INTCNT      = $FCA2
   183                          DEFC LOWLIM      = $FCA4
   184                          DEFC WINWID      = $FCA5
   185                          DEFC GRPHED      = $FCA6
   186                          DEFC ESCCNT      = $FCA7
   187                          DEFC INSFLG      = $FCA8
   188                          DEFC CSRSR       = $FCA9
   189                          DEFC CSTYLE      = $FCAA
   190                          DEFC CAPST       = $FCAB
   191                          DEFC KANAST      = $FCAC
   192                          DEFC KANAMD      = $FCAD
   193                          DEFC FLBMEM      = $FCAE
   194                          DEFC SCRMOD      = $FCAF
   195                          DEFC OLDSCR      = $FCB0
   196                          DEFC CASPRV      = $FCB1
   197                          DEFC BRDATR      = $FCB2
   198                          DEFC GXPOS       = $FCB3
   199                          DEFC GYPOS       = $FCB5
   200                          DEFC GRPACX      = $FCB7
   201                          DEFC GRPACY      = $FCB9
   202                          DEFC DRWFLG      = $FCBB
   203                          DEFC DRWSCL      = $FCBC
   204                          DEFC DRWANG      = $FCBD
   205                          DEFC RUNBNF      = $FCBE
   206                          DEFC SAVENT      = $FCBF
   207                          DEFC EXPTBL      = $FCC1
   208                          DEFC SLTTBL      = $FCC5
   209                          DEFC SLTATR      = $FCC9
   210                          DEFC SLTWRK      = $FD09
   211                          DEFC PROCNM      = $FD89
   212                          DEFC DEVICE      = $FD99
   213                          DEFC H_KEYI      = $FD9A
   214                          DEFC H_TIMI      = $FD9F
   215                          DEFC H_CHPU      = $FDA4
   216                          DEFC H_DSPC      = $FDA9
   217                          DEFC H_ERAC      = $FDAE
   218                          DEFC H_DSPF      = $FDB3
   219                          DEFC H_ERAF      = $FDB8
   220                          DEFC H_TOTE      = $FDBD
   221                          DEFC H_CHGE      = $FDC2
   222                          DEFC H_INIP      = $FDC7
   223                          DEFC H_KEYC      = $FDCC
   224                          DEFC H_KEYA      = $FDD1
   225                          DEFC H_NMI       = $FDD6
   226                          DEFC H_PINL      = $FDDB
   227                          DEFC H_QINL      = $FDE0
   228                          DEFC H_INLI      = $FDE5
   229                          DEFC H_ONGO      = $FDEA
   230                          DEFC H_DSKO      = $FDEF
   231                          DEFC H_SETS      = $FDF4
   232                          DEFC H_NAME      = $FDF9
   233                          DEFC H_KILL      = $FDFE
   234                          DEFC H_IPL       = $FE03
   235                          DEFC H_COPY      = $FE08
   236                          DEFC H_CMD       = $FE0D
   237                          DEFC H_DSKF      = $FE12
   238                          DEFC H_DSKI      = $FE17
   239                          DEFC H_ATTR      = $FE1C
   240                          DEFC H_LSET      = $FE21
   241                          DEFC H_RSET      = $FE26
   242                          DEFC H_FIEL      = $FE2B
   243                          DEFC H_MKI       = $FE30
   244                          DEFC H_MKS       = $FE35
   245                          DEFC H_MKD       = $FE3A
   246                          DEFC H_CVI       = $FE3F
   247                          DEFC H_CVS       = $FE44
   248                          DEFC H_CVD       = $FE49
   249                          DEFC H_GETP      = $FE4E
   250                          DEFC H_SETF      = $FE53
   251                          DEFC H_NOFO      = $FE58
   252                          DEFC H_NULO      = $FE5D
   253                          DEFC H_NTFL      = $FE62
   254                          DEFC H_MERG      = $FE67
   255                          DEFC H_SAVE      = $FE6C
   256                          DEFC H_BINS      = $FE71
   257                          DEFC H_BINL      = $FE76
   258                          DEFC H_FILE      = $FE7B
   259                          DEFC H_DGET      = $FE80
   260                          DEFC H_FILO      = $FE85
   261                          DEFC H_INDS      = $FE8A
   262                          DEFC H_RSLF      = $FE8F
   263                          DEFC H_SAVD      = $FE94
   264                          DEFC H_LOC       = $FE99
   265                          DEFC H_LOF       = $FE9E
   266                          DEFC H_EOF       = $FEA3
   267                          DEFC H_FPOS      = $FEA8
   268                          DEFC H_BAKU      = $FEAD
   269                          DEFC H_PARD      = $FEB2
   270                          DEFC H_NODE      = $FEB7
   271                          DEFC H_POSD      = $FEBC
   272                          DEFC H_GEND      = $FEC6
   273                          DEFC H_RUNC      = $FECB
   274                          DEFC H_CLEA      = $FED0
   275                          DEFC H_LOPD      = $FED5
   276                          DEFC H_STKE      = $FEDA
   277                          DEFC H_ISFL      = $FEDF
   278                          DEFC H_OUTD      = $FEE4
   279                          DEFC H_CRDO      = $FEE9
   280                          DEFC H_DSKC      = $FEEE
   281                          DEFC H_DOGR      = $FEF3
   282                          DEFC H_PRGE      = $FEF8
   283                          DEFC H_ERRP      = $FEFD
   284                          DEFC H_ERRF      = $FF02
   285                          DEFC H_READ      = $FF07
   286                          DEFC H_MAIN      = $FF0C
   287                          DEFC H_DIRD      = $FF11
   288                          DEFC H_FINI      = $FF16
   289                          DEFC H_FINE      = $FF1B
   290                          DEFC H_CRUN      = $FF20
   291                          DEFC H_CRUS      = $FF25
   292                          DEFC H_ISRE      = $FF2A
   293                          DEFC H_NTFN      = $FF2F
   294                          DEFC H_NOTR      = $FF34
   295                          DEFC H_SNGF      = $FF39
   296                          DEFC H_NEWS      = $FF3E
   297                          DEFC H_GONE      = $FF43
   298                          DEFC H_CHRG      = $FF48
   299                          DEFC H_RETU      = $FF4D
   300                          DEFC H_PRTF      = $FF52
   301                          DEFC H_COMP      = $FF57
   302                          DEFC H_FINP      = $FF5C
   303                          DEFC H_TRMN      = $FF61
   304                          DEFC H_FRME      = $FF66
   305                          DEFC H_NTPL      = $FF6B
   306                          DEFC H_EVAL      = $FF70
   307                          DEFC H_OKNO      = $FF75
   308                          DEFC H_FING      = $FF7A
   309                          DEFC H_ISMI      = $FF7F
   310                          DEFC H_WIDT      = $FF84
   311                          DEFC H_LIST      = $FF89
   312                          DEFC H_BUFL      = $FF8E
   313                          DEFC H_FRQI      = $FF93
   314                          DEFC H_SCNE      = $FF98
   315                          DEFC H_FRET      = $FF9D
   316                          DEFC H_PTRG      = $FFA2
   317                          DEFC H_PHYD      = $FFA7
   318                          DEFC H_FORM      = $FFAC
   319                          DEFC H_ERRO      = $FFB1
   320                          DEFC H_LPTO      = $FFB6
   321                          DEFC H_LPTS      = $FFBB
   322                          DEFC H_SCRE      = $FFC0
   323                          DEFC H_PLAY      = $FFC5
   324                          DEFC EXTBIO      = $FFCA
   325                          DEFC D_FFFF      = $FFFF
   326                          
basic2.asm:
    16                                  INCLUDE "msx.def"
msx.def:
     1                          ; MSX version
     2                                  DEFC    MSXVER  = 0
     3                          
     4                          ;       OPTM    Optimized code
     5                          ;               0 = Use orginal code
     6                          ;               1 = Use optimized code
     7                          
     8                                  DEFC    OPTM    = 0
     9                          
    10                          ;       NDEVFIX
    11                          ;               0 = Use null device bug
    12                          ;               1 = Use null device bugfix
    13                          
    14                                  DEFC    NDEVFIX = 1
    15                          
    16                          ;       SLOTFIX
    17                          ;               0 = Use slot bug
    18                          ;               1 = Use slot bugfix
    19                          
    20                                  DEFC    SLOTFIX = 0
    21                          
    22                          ;       CNTRY   Country
    23                          ;               0 = Japan
    24                          ;               1 = USA
    25                          ;               2 = International
    26                          ;               3 = UK
    27                          ;               4 = France
    28                          ;               5 = Germany
    29                          ;               6 = Italy
    30                          ;               7 = Spain
    31                          ;               8 = Arabic
    32                          ;               9 = Korea
    33                          ;               10 = Russia
    34                          
    35                          ; Uncomment this to define the language
    36                          ;        DEFC    CNTRY   = 1
    37                          
    38                          
    39                          ;       symbols used to procedure alternate code
    40                          
    41                          ;       INTHZ   interrupt frequency
    42                          ;       CHRGEN  character generator
    43                          ;               0 = japanese
    44                          ;               1 = international
    45                          ;               2 = USSR ??
    46                          ;       DATFMT  date format
    47                          ;               0 = Y-M-D
    48                          ;               1 = M-D-Y
    49                          ;               2 = D-M-Y
    50                          ;       KEYTYP  keyboard layout
    51                          ;               0 = Japanese
    52                          ;               1 = International (QWERTY/other)
    53                          ;               2 = French (AZERTY)
    54                          ;               3 = English
    55                          ;               4 = German (DIN)
    56                          ;               5 = USSR
    57                          ;               6 = Spanish
    58                          ;               7 = Swedish ??
    59                          ;       BASVER  0 = Japanese
    60                          ;               1 = International
    61                          
    62                          
    63                          ; Japanese MSX settings
    64                                  IF      CNTRY = 0
    65                          
    66                                  DEFC    INTHZ   = 60
    67                                  DEFC    CHRGEN  = 0
    68                                  DEFC    DATFMT  = 0
    69                                  DEFC    KEYTYP  = 0
    70                                  DEFC    BASVER  = 0
    71                          
    72                                  ENDIF
    73                          
    74                          ; USA MSX settings
    75                                  IF      CNTRY = 1
    76                          
    77                                  DEFC    INTHZ   = 60
    78                                  DEFC    CHRGEN  = 1
    79                                  DEFC    DATFMT  = 1
    80                                  DEFC    KEYTYP  = 1
    81                                  DEFC    BASVER  = 1
    82                          
    83                                  ENDIF
    84                          
    85                          ; International MSX settings
    86                                  IF      CNTRY = 2
    87                          
    88                                  DEFC    INTHZ   = 50
    89                                  DEFC    CHRGEN  = 1
    90                                  DEFC    DATFMT  = 1
    91                                  DEFC    KEYTYP  = 1
    92                                  DEFC    BASVER  = 1
    93                          
    94                                  ENDIF
    95                          
    96                          ; UK MSX settings
    97                                  IF      CNTRY = 3
    98                          
    99                                  DEFC    INTHZ   = 50
   100                                  DEFC    CHRGEN  = 1
   101                                  DEFC    DATFMT  = 2
   102                                  DEFC    KEYTYP  = 3
   103                                  DEFC    BASVER  = 1
   104                          
   105                                  ENDIF
   106                          
   107                          ; French MSX settings
   108                                  IF      CNTRY = 4
   109                          
   110                                  DEFC    INTHZ   = 50
   111                                  DEFC    CHRGEN  = 1
   112                                  DEFC    DATFMT  = 2
   113                                  DEFC    KEYTYP  = 2
   114                                  DEFC    BASVER  = 1
   115                          
   116                                  ENDIF
   117                          
   118                          ; German MSX settings
   119                                  IF      CNTRY = 5
   120                          
   121                                  DEFC    INTHZ   = 50
   122                                  DEFC    CHRGEN  = 1
   123                                  DEFC    DATFMT  = 2
   124                                  DEFC    KEYTYP  = 4
   125                                  DEFC    BASVER  = 1
   126                          
   127                                  ENDIF
   128                          
   129                          ; Italian MSX settings
   130                          ; Dateformat is not sure
   131                                  IF      CNTRY = 6
   132                          
   133                                  DEFC    INTHZ   = 50
   134                                  DEFC    CHRGEN  = 1
   135                                  DEFC    DATFMT  = 2
   136                                  DEFC    KEYTYP  = 1
   137                                  DEFC    BASVER  = 1
   138                          
   139                                  ENDIF
   140                          
   141                          ; Spanish MSX settings
   142                                  IF      CNTRY = 7
   143                          
   144                                  DEFC    INTHZ   = 50
   145                                  DEFC    CHRGEN  = 1
   146                                  DEFC    DATFMT  = 1
   147                                  DEFC    KEYTYP  = 6
   148                                  DEFC    BASVER  = 1
   149                          
   150                                  ENDIF
   151                          
   152                          ; Arabic MSX settings
   153                          ; Unknown
   154                                  IF      CNTRY = 8
   155                          
   156                                  DEFC    INTHZ   = 60
   157                                  DEFC    CHRGEN  = 0
   158                                  DEFC    DATFMT  = 0
   159                                  DEFC    KEYTYP  = 0
   160                                  DEFC    BASVER  = 0
   161                          
   162                                  ENDIF
   163                          
   164                          ; Korean MSX settings
   165                                  IF      CNTRY = 9
   166                          
   167                                  DEFC    INTHZ   = 60
   168                                  DEFC    CHRGEN  = 0
   169                                  DEFC    DATFMT  = 0
   170                                  DEFC    KEYTYP  = 0
   171                                  DEFC    BASVER  = 0
   172                          
   173                                  ENDIF
   174                          
   175                          ; Russian MSX settings
   176                                  IF      CNTRY = 10
   177                          
   178                                  DEFC    INTHZ   = 60
   179                                  DEFC    CHRGEN  = 2
   180                                  DEFC    DATFMT  = 1
   181                                  DEFC    KEYTYP  = 5
   182                                  DEFC    BASVER  = 1
   183                          
   184                                  ENDIF
   185                          
   186                                  IF      BASVER = 0
   187                                  DEFC    CHRCUR  = $5C            ; yen sign
   188                                  DEFC    CHRFLN  = '&'
   189                                  DEFC    CHRVLN  = '@'
   190                                  ENDIF
   191                          
   192                                  IF      (BASVER = 1) && (CNTRY <> 3)
   193                                  DEFC    CHRCUR  = '$'
   194                                  DEFC    CHRFLN  = '\\'
   195                                  DEFC    CHRVLN  = '&'
   196                                  ENDIF
   197                          
   198                                  IF      (BASVER = 1) && (CNTRY = 3)
   199                                  DEFC    CHRCUR  = $AC            ; pound sign
   200                                  DEFC    CHRFLN  = '\\'
   201                                  DEFC    CHRVLN  = '&'
   202                                  ENDIF
   203                          
   204                          
basic2.asm:
    17                          
    18                          ; Define some RST vectors
    19                                  DEFC    SYNCHR = $08
    20                                  DEFC    CHRGTR = $10
    21                                  DEFC    OUTDO = $18
    22                                  DEFC    DCOMPR = $20
    23                                  DEFC    GETYPR = $28
    24                          
    25                          ; Declare public symbols exported by this module
    26                                  PUBLIC  ASPCT1
    27                                  PUBLIC  ASPCT2
    28                                  PUBLIC  ATRBYT
    29                                  PUBLIC  BAKCLR
    30                                  PUBLIC  BDRCLR
    31                                  PUBLIC  CLIKSW
    32                                  PUBLIC  CLMLST
    33                                  PUBLIC  CLPRIM
    34                                  PUBLIC  CLPRM1
    35                                  PUBLIC  CNSDFG
    36                                  PUBLIC  CRTCNT
    37                                  PUBLIC  CS1200
    38                                  PUBLIC  CS2400
    39                                  PUBLIC  CSRX
    40                                  PUBLIC  CSRY
    41                                  PUBLIC  ENDPRG
    42                                  PUBLIC  FORCLR
    43                                  PUBLIC  FRCNEW
    44                                  PUBLIC  GETPNT
    45                                  PUBLIC  GRPATR
    46                                  PUBLIC  GRPCGP
    47                                  PUBLIC  GRPCOL
    48                                  PUBLIC  GRPNAM
    49                                  PUBLIC  GRPPAT
    50                                  PUBLIC  LINL32
    51                                  PUBLIC  LINL40
    52                                  PUBLIC  LINLEN
    53                                  PUBLIC  MAXUPD
    54                                  PUBLIC  MINUPD
    55                                  PUBLIC  MLTATR
    56                                  PUBLIC  MLTCGP
    57                                  PUBLIC  MLTCOL
    58                                  PUBLIC  MLTNAM
    59                                  PUBLIC  MLTPAT
    60                                  PUBLIC  PUTPNT
    61                                  PUBLIC  QUEUES
    62                                  PUBLIC  RDPRIM
    63                                  PUBLIC  REPCNT
    64                                  PUBLIC  RG0SAV
    65                                  PUBLIC  RG1SAV
    66                                  PUBLIC  RG2SAV
    67                                  PUBLIC  RG3SAV
    68                                  PUBLIC  RG4SAV
    69                                  PUBLIC  RG5SAV
    70                                  PUBLIC  RG6SAV
    71                                  PUBLIC  RG7SAV
    72                                  PUBLIC  SCNCNT
    73                                  PUBLIC  STATFL
    74                                  PUBLIC  T32ATR
    75                                  PUBLIC  T32CGP
    76                                  PUBLIC  T32COL
    77                                  PUBLIC  T32NAM
    78                                  PUBLIC  T32PAT
    79                                  PUBLIC  TRGFLG
    80                                  PUBLIC  TXTATR
    81                                  PUBLIC  TXTCGP
    82                                  PUBLIC  TXTCOL
    83                                  PUBLIC  TXTNAM
    84                                  PUBLIC  TXTPAT
    85                                  PUBLIC  USRTAB
    86                                  PUBLIC  WRPRIM
    87                          
    88                          ; These are other symbols used from other modules, but they should be internal.
    89                          ; These are used from `bios.asm`
    90                                  PUBLIC  C4666
    91                                  PUBLIC  C558C
    92                                  PUBLIC  C5597
    93                                  PUBLIC  C63E6
    94                                  PUBLIC  C6C48
    95                                  PUBLIC  C7C76
    96                                  PUBLIC  J409B
    97                                  PUBLIC  J73B2
    98                          ; These are used from `basic1.asm`
    99                                  PUBLIC  C475A
   100                                  PUBLIC  C4EB8
   101                                  PUBLIC  C4F47
   102                                  PUBLIC  C5439
   103                                  PUBLIC  C6678
   104                                  PUBLIC  I3FD2
   105                                  PUBLIC  I6677
   106                                  PUBLIC  J4058
   107                                  PUBLIC  J4067
   108                                  PUBLIC  J406D
   109                                  PUBLIC  J601D
   110                                  PUBLIC  J66A7
   111                          
   112                          ; Declare some external symbols defined in MSX-BIOS.
   113                                  EXTERN  BEEP
   114                                  EXTERN  CALATR
   115                                  EXTERN  CALLF
   116                                  EXTERN  CALPAT
   117                                  EXTERN  CALSLT
   118                                  EXTERN  CGTABL
   119                                  EXTERN  CHGCLR
   120                                  EXTERN  CHGET
   121                                  EXTERN  CHGMOD
   122                                  EXTERN  CHKRAM
   123                                  EXTERN  CHPUT
   124                                  EXTERN  CHSNS
   125                                  EXTERN  CKCNTC
   126                                  EXTERN  CLRSPR
   127                                  EXTERN  CLS
   128                                  EXTERN  CNVCHR
   129                                  EXTERN  D0034
   130                                  EXTERN  DISSCR
   131                                  EXTERN  DOWNC
   132                                  EXTERN  DSPFNK
   133                                  EXTERN  ENASCR
   134                                  EXTERN  ENASLT
   135                                  EXTERN  ERAFNK
   136                                  EXTERN  FETCHC
   137                                  EXTERN  FILVRM
   138                                  EXTERN  FNKSB
   139                                  EXTERN  GETVC2
   140                                  EXTERN  GETVCP
   141                                  EXTERN  GICINI
   142                                  EXTERN  GRPPRT
   143                                  EXTERN  GSPSIZ
   144                                  EXTERN  GTASPC
   145                                  EXTERN  GTPAD
   146                                  EXTERN  GTPDL
   147                                  EXTERN  GTSTCK
   148                                  EXTERN  GTTRIG
   149                                  EXTERN  IDBYT0
   150                                  EXTERN  IDBYT1
   151                                  EXTERN  IDBYT2
   152                                  EXTERN  INIFNK
   153                                  EXTERN  INIT32
   154                                  EXTERN  INITIO
   155                                  EXTERN  INITXT
   156                                  EXTERN  INLIN
   157                                  EXTERN  ISCNTC
   158                                  EXTERN  ISFLIO
   159                                  EXTERN  KEYINT
   160                                  EXTERN  LDIRMV
   161                                  EXTERN  LDIRVM
   162                                  EXTERN  LEFTC
   163                                  EXTERN  LFTQ
   164                                  EXTERN  LPTOUT
   165                                  EXTERN  MAPXYC
   166                                  EXTERN  NMIHND
   167                                  EXTERN  NSETCX
   168                                  EXTERN  OUTDLP
   169                                  EXTERN  PINLIN
   170                                  EXTERN  PNTINI
   171                                  EXTERN  POSIT
   172                                  EXTERN  PUTQ
   173                                  EXTERN  QINLIN
   174                                  EXTERN  RDSLT
   175                                  EXTERN  RDVRM
   176                                  EXTERN  READC
   177                                  EXTERN  SCALXY
   178                                  EXTERN  SCANL
   179                                  EXTERN  SCANR
   180                                  EXTERN  SETATR
   181                                  EXTERN  SETC
   182                                  EXTERN  SETGRP
   183                                  EXTERN  SETMLT
   184                                  EXTERN  SETRD
   185                                  EXTERN  SETTXT
   186                                  EXTERN  SETWRT
   187                                  EXTERN  STMOTR
   188                                  EXTERN  STOREC
   189                                  EXTERN  STRTMS
   190                                  EXTERN  TAPIN
   191                                  EXTERN  TAPIOF
   192                                  EXTERN  TAPION
   193                                  EXTERN  TAPOOF
   194                                  EXTERN  TAPOON
   195                                  EXTERN  TAPOUT
   196                                  EXTERN  TDOWNC
   197                                  EXTERN  TOTEXT
   198                                  EXTERN  TUPC
   199                                  EXTERN  WRSLT
   200                                  EXTERN  WRTPSG
   201                                  EXTERN  WRTVDP
   202                                  EXTERN  WRTVRM
   203                          
   204                          
   205                          ; Declare some external symbols defined in `basic1.asm`.
   206                                  EXTERN  C268C
   207                                  EXTERN  C2697
   208                                  EXTERN  C269A
   209                                  EXTERN  C27E6
   210                                  EXTERN  C289F
   211                                  EXTERN  C2993
   212                                  EXTERN  C29AC
   213                                  EXTERN  C29FB
   214                                  EXTERN  C2A14
   215                                  EXTERN  C2A72
   216                                  EXTERN  C2AFF
   217                                  EXTERN  C2B4A
   218                                  EXTERN  C2BDF
   219                                  EXTERN  C2C24
   220                                  EXTERN  C2E71
   221                                  EXTERN  C2E82
   222                                  EXTERN  C2E86
   223                                  EXTERN  C2E97
   224                                  EXTERN  C2E9A
   225                                  EXTERN  C2EA1
   226                                  EXTERN  C2EAB
   227                                  EXTERN  C2EB1
   228                                  EXTERN  C2EBE
   229                                  EXTERN  C2EC1
   230                                  EXTERN  C2ECC
   231                                  EXTERN  C2ED6
   232                                  EXTERN  C2EDF
   233                                  EXTERN  C2EE1
   234                                  EXTERN  C2EE8
   235                                  EXTERN  C2EEF
   236                                  EXTERN  C2EF3
   237                                  EXTERN  C2EF7
   238                                  EXTERN  C2F08
   239                                  EXTERN  C2F0D
   240                                  EXTERN  C2F10
   241                                  EXTERN  C2F21
   242                                  EXTERN  C2F4D
   243                                  EXTERN  C2F5C
   244                                  EXTERN  C2F83
   245                                  EXTERN  C2F8A
   246                                  EXTERN  C2F99
   247                                  EXTERN  C2FB2
   248                                  EXTERN  C2FCB
   249                                  EXTERN  C303A
   250                                  EXTERN  C3058
   251                                  EXTERN  C30BE
   252                                  EXTERN  C30CF
   253                                  EXTERN  C314A
   254                                  EXTERN  C3167
   255                                  EXTERN  C3172
   256                                  EXTERN  C3193
   257                                  EXTERN  C31E6
   258                                  EXTERN  C3236
   259                                  EXTERN  C323A
   260                                  EXTERN  C324E
   261                                  EXTERN  C3257
   262                                  EXTERN  C325C
   263                                  EXTERN  C3267
   264                                  EXTERN  C3299
   265                                  EXTERN  C340A
   266                                  EXTERN  C3412
   267                                  EXTERN  C3425
   268                                  EXTERN  C3426
   269                                  EXTERN  C371A
   270                                  EXTERN  C371E
   271                                  EXTERN  C3722
   272                                  EXTERN  C37C8
   273                                  EXTERN  C37D7
   274                                  EXTERN  C383F
   275                                  EXTERN  I2D1B
   276                                  EXTERN  J2E79
   277                                  EXTERN  J3265
   278                                  EXTERN  J3297
   279                          
   280                          ;       ORG     $392E
   281                          
   282                          ; BASIC tokens
   283                          ;
   284                          ; 00                    line endmarker
   285                          ; 01-0A                 unknown
   286                          ; 0B LLHH               octal number
   287                          ; 0C LLHH               hexadecimal number
   288                          ; 0D LLHH               linepointer
   289                          ; 0E LLHH               linenumber
   290                          ; 0F LL                 integer 11-255
   291                          ; 10                    internal token
   292                          ; 11                    integer 0
   293                          ; 12                    integer 1
   294                          ; 13                    integer 2
   295                          ; 14                    integer 3
   296                          ; 15                    integer 4
   297                          ; 16                    integer 5
   298                          ; 17                    integer 6
   299                          ; 18                    integer 7
   300                          ; 19                    integer 8
   301                          ; 1A                    integer 9
   302                          ; 1B                    integer 10
   303                          ; 1C LLHH               integer
   304                          ; 1D EEDDDDDD           single real
   305                          ; 1E                    internal token
   306                          ; 1F EEDDDDDDDDDDDDDD   double real
   307                          ; 20-7F                 ASCII chars
   308                          ; 80                    unknown token
   309                          ; 81-D8                 statement tokens
   310                          ; D9-ED                 other tokens
   311                          ; EE                    >
   312                          ; EF                    =
   313                          ; F0                    <
   314                          ; F1                    +
   315                          ; F2                    -
   316                          ; F3                    *
   317                          ; F4                    /
   318                          ; F5                    ^
   319                          ; F6                    AND
   320                          ; F7                    OR
   321                          ; F8                    XOR
   322                          ; F9                    EQV
   323                          ; FA                    IMP
   324                          ; FB                    MOD
   325                          ; FC                    \
   326                          ; FD                    unknown token, other microsoft basic versions use this to extend token range
   327                          ; FE                    unknown token, other microsoft basic versions use this to extend token range
   328                          ; FF TT                 function token
   329                          
   330                          
   331                          
   332                          ;       Table   addresses of BASIC statement token service routines
   333                          ;       Remark  start with token $81, ends with token $D8
   334                          
   335  0000  bc2a              I392E:  DEFW    C63EA                   ; END
   336  0002  f60b                      DEFW    C4524                   ; FOR
   337  0004  f92b                      DEFW    C6527                   ; NEXT
   338  0006  2d0f                      DEFW    C485B                   ; DATA, skip to end of statement
   339  0008  3e12                      DEFW    C4B6C                   ; INPUT
   340  000a  7125                      DEFW    C5E9F                   ; DIM
   341  000c  7112                      DEFW    C4B9F                   ; READ
   342  000e  520f                      DEFW    C4880                   ; LET
   343  0010  ba0e                      DEFW    C47E8                   ; GOTO
   344  0012  700e                      DEFW    C479E                   ; RUN
   345  0014  b710                      DEFW    C49E5                   ; IF
   346  0016  9b2a                      DEFW    C63C9                   ; RESTORE
   347  0018  840e                      DEFW    C47B2                   ; GOSUB
   348  001a  f30e                      DEFW    C4821                   ; RETURN
   349  001c  2f0f                      DEFW    C485D                   ; REM, skip to end of BASIC line
   350  001e  b52a                      DEFW    C63E3                   ; STOP
   351  0020  f610                      DEFW    C4A24                   ; PRINT
   352  0022  812b                      DEFW    C64AF                   ; CLEAR
   353  0024  0019                      DEFW    C522E                   ; LIST
   354  0026  5829                      DEFW    C6286                   ; NEW
   355  0028  b60f                      DEFW    C48E4                   ; ON
   356  002a  ee06                      DEFW    C401C                   ; WAIT
   357  002c  ef16                      DEFW    C501D                   ; DEF
   358  002e  f51a                      DEFW    C5423                   ; POKE
   359  0030  f62a                      DEFW    C6424                   ; CONT
   360  0032  8936                      DEFW    C6FB7                   ; CSAVE
   361  0034  1137                      DEFW    C703F                   ; CLOAD
   362  0036  e806                      DEFW    C4016                   ; OUT
   363  0038  ef10                      DEFW    C4A1D                   ; LPRINT
   364  003a  fb18                      DEFW    C5229                   ; LLIST
   365  003c  0000                      DEFW    CLS                     ; CLS
   366  003e  9b18                      DEFW    C51C9                   ; WIDTH
   367  0040  2f0f                      DEFW    C485D                   ; ELSE, skip to end of BASIC line
   368  0042  0a2b                      DEFW    C6438                   ; TRON
   369  0044  0b2b                      DEFW    C6439                   ; TROFF
   370  0046  102b                      DEFW    C643E                   ; SWAP
   371  0048  492b                      DEFW    C6477                   ; ERASE
   372  004a  7c10                      DEFW    C49AA                   ; ERROR
   373  004c  2f10                      DEFW    C495D                   ; RESUME
   374  004e  b41a                      DEFW    C53E2                   ; DELETE
   375  0050  8710                      DEFW    C49B5                   ; AUTO
   376  0052  3a1b                      DEFW    C5468                   ; RENUM
   377  0054  ea0d                      DEFW    C4718                   ; DEFSTR
   378  0056  ed0d                      DEFW    C471B                   ; DEFINT
   379  0058  f00d                      DEFW    C471E                   ; DEFSNG
   380  005a  f30d                      DEFW    C4721                   ; DEFDBL
   381  005c  e011                      DEFW    C4B0E                   ; LINE
   382  005e  8931                      DEFW    C6AB7                   ; OPEN
   383  0060  2443                      DEFW    C7C52                   ; FIELD
   384  0062  2d3e                      DEFW    C775B                   ; GET
   385  0064  2a3e                      DEFW    C7758                   ; PUT
   386  0066  e632                      DEFW    C6C14                   ; CLOSE
   387  0068  2f32                      DEFW    C6B5D                   ; LOAD
   388  006a  3032                      DEFW    C6B5E                   ; MERGE
   389  006c  0133                      DEFW    C6C2F                   ; FILES
   390  006e  1a43                      DEFW    C7C48                   ; LSET
   391  0070  1f43                      DEFW    C7C4D                   ; RSET
   392  0072  7532                      DEFW    C6BA3                   ; SAVE
   393  0074  fc32                      DEFW    C6C2A                   ; LFILES
   394  0076  e321                      DEFW    C5B11                   ; CIRCLE
   395  0078  5240                      DEFW    C7980                   ; COLOR
   396  007a  4024                      DEFW    C5D6E                   ; DRAW
   397  007c  9720                      DEFW    C59C5                   ; PAINT
   398  007e  0000                      DEFW    BEEP                    ; BEEP
   399  0080  b73a                      DEFW    C73E5                   ; PLAY
   400  0082  bc1e                      DEFW    C57EA                   ; PSET
   401  0084  b71e                      DEFW    C57E5                   ; PRESET
   402  0086  9c3a                      DEFW    C73CA                   ; SOUND
   403  0088  9e40                      DEFW    C79CC                   ; SCREEN
   404  008a  b442                      DEFW    C7BE2                   ; VPOKE
   405  008c  1a41                      DEFW    C7A48                   ; SPRITE
   406  008e  0942                      DEFW    C7B37                   ; VDP
   407  0090  2c42                      DEFW    C7B5A                   ; BASE
   408  0092  7a1c                      DEFW    C55A8                   ; CALL
   409  0094  e33f                      DEFW    C7911                   ; TIME
   410  0096  3e3f                      DEFW    C786C                   ; KEY
   411  0098  1d45                      DEFW    C7E4B                   ; MAX
   412  009a  893a                      DEFW    C73B7                   ; MOTOR
   413  009c  9835                      DEFW    C6EC6                   ; BLOAD
   414  009e  6435                      DEFW    C6E92                   ; BSAVE
   415  00a0  e842                      DEFW    C7C16                   ; DSKO$
   416  00a2  ed42                      DEFW    C7C1B                   ; SET
   417  00a4  f242                      DEFW    C7C20                   ; NAME
   418  00a6  f742                      DEFW    C7C25                   ; KILL
   419  00a8  fc42                      DEFW    C7C2A                   ; IPL
   420  00aa  0143                      DEFW    C7C2F                   ; COPY
   421  00ac  0643                      DEFW    C7C34                   ; CMD
   422  00ae  383e                      DEFW    C7766                   ; LOCATE
   423                          
   424                          ;       Table   addresses of BASIC function token service routines
   425                          ;       Remark
   426                          
   427  00b0  332f              I39DE:  DEFW    C6861                   ; LEFT$
   428  00b2  632f                      DEFW    C6891                   ; RIGHT$
   429  00b4  6c2f                      DEFW    C689A                   ; MID$
   430  00b6  0000                      DEFW    C2E97                   ; SGN
   431  00b8  0000                      DEFW    C30CF                   ; INT
   432  00ba  0000                      DEFW    C2E82                   ; ABS
   433  00bc  0000                      DEFW    C2AFF                   ; SQR
   434  00be  0000                      DEFW    C2BDF                   ; RND
   435  00c0  0000                      DEFW    C29AC                   ; SIN
   436  00c2  0000                      DEFW    C2A72                   ; LOG
   437  00c4  0000                      DEFW    C2B4A                   ; EXP
   438  00c6  0000                      DEFW    C2993                   ; COS
   439  00c8  0000                      DEFW    C29FB                   ; TAN
   440  00ca  0000                      DEFW    C2A14                   ; ATN
   441  00cc  c430                      DEFW    C69F2                   ; FRE
   442  00ce  d306                      DEFW    C4001                   ; INP
   443  00d0  9e16                      DEFW    C4FCC                   ; POS
   444  00d2  d12e                      DEFW    C67FF                   ; LEN
   445  00d4  d62c                      DEFW    C6604                   ; STR$
   446  00d6  8d2f                      DEFW    C68BB                   ; VAL
   447  00d8  dd2e                      DEFW    C680B                   ; ASC
   448  00da  ed2e                      DEFW    C681B                   ; CHR$
   449  00dc  ee1a                      DEFW    C541C                   ; PEEK
   450  00de  c742                      DEFW    C7BF5                   ; VPEEK
   451  00e0  1a2f                      DEFW    C6848                   ; SPACE$
   452  00e2  c72c                      DEFW    C65F5                   ; OCT$
   453  00e4  cc2c                      DEFW    C65FA                   ; HEX$
   454  00e6  9916                      DEFW    C4FC7                   ; LPOS
   455  00e8  d12c                      DEFW    C65FF                   ; BIN$
   456  00ea  0000                      DEFW    C2F8A                   ; CINT
   457  00ec  0000                      DEFW    C2FB2                   ; CSNG
   458  00ee  0000                      DEFW    C303A                   ; CDBL
   459  00f0  0000                      DEFW    C30BE                   ; FIX
   460  00f2  1240                      DEFW    C7940                   ; STICK
   461  00f4  1e40                      DEFW    C794C                   ; TRIG
   462  00f6  2c40                      DEFW    C795A                   ; PDL
   463  00f8  3b40                      DEFW    C7969                   ; PAD
   464  00fa  0b43                      DEFW    C7C39                   ; DSKF
   465  00fc  0b34                      DEFW    C6D39                   ; FPOS
   466  00fe  3843                      DEFW    C7C66                   ; CVI
   467  0100  3d43                      DEFW    C7C6B                   ; CVS
   468  0102  4243                      DEFW    C7C70                   ; CVD
   469  0104  f733                      DEFW    C6D25                   ; EOF
   470  0106  d533                      DEFW    C6D03                   ; LOC
   471  0108  e633                      DEFW    C6D14                   ; LOF
   472  010a  2943                      DEFW    C7C57                   ; MKI$
   473  010c  2e43                      DEFW    C7C5C                   ; MKS$
   474  010e  3343                      DEFW    C7C61                   ; MKD$
   475                          
   476                          ;       Table   pointers to the start of keywords of a given letter
   477                          ;       Remark  start with the pointer for all 'A' keywords and ends with 'Z' keywords
   478                          
   479  0110  4401              I3A3E:  DEFW    T3A72           ; A
   480  0112  5a01                      DEFW    T3A88           ; B
   481  0114  7101                      DEFW    T3A9F           ; C
   482  0116  c501                      DEFW    T3AF3           ; D
   483  0118  0002                      DEFW    T3B2E           ; E
   484  011a  2102                      DEFW    T3B4F           ; F
   485  011c  3b02                      DEFW    T3B69           ; G
   486  011e  4d02                      DEFW    T3B7B           ; H
   487  0120  5202                      DEFW    T3B80           ; I
   488  0122  7102                      DEFW    T3B9F           ; J
   489  0124  7202                      DEFW    T3BA0           ; K
   490  0126  7a02                      DEFW    T3BA8           ; L
   491  0128  ba02                      DEFW    T3BE8           ; M
   492  012a  db02                      DEFW    T3C09           ; N
   493  012c  ea02                      DEFW    T3C18           ; O
   494  012e  fd02                      DEFW    T3C2B           ; P
   495  0130  2f03                      DEFW    T3C5D           ; Q
   496  0132  3003                      DEFW    T3C5E           ; R
   497  0134  6003                      DEFW    T3C8E           ; S
   498  0136  ad03                      DEFW    T3CDB           ; T
   499  0138  c803                      DEFW    T3CF6           ; U
   500  013a  d103                      DEFW    T3CFF           ; V
   501  013c  e803                      DEFW    T3D16           ; W
   502  013e  f203                      DEFW    T3D20           ; X
   503  0140  f603                      DEFW    T3D24           ; Y
   504  0142  f703                      DEFW    T3D25           ; Z
   505                          
   506                          ; Keywords starting with 'A'
   507  0144  5554cfa9          T3A72:  DEFM    "UT", 'O'|$80, $A9               ; AUTO
   508  0148  4ec4f6                    DEFM    "N", 'D'|$80, $F6                ; AND
   509  014b  42d306                    DEFM    "B", 'S'|$80, $06                ; ABS
   510  014e  54ce0e                    DEFM    "T", 'N'|$80, $0E                ; ATN
   511  0151  53c315                    DEFM    "S", 'C'|$80, $15                ; ASC
   512  0154  545452a4e9                DEFM    "TTR", '$'|$80, $E9              ; ATTR$
   513  0159  00                        DEFB    0
   514                          
   515                          ; Keywords starting with 'B'
   516  015a  4153c5c9          T3A88:  DEFM    "AS", 'E'|$80, $C9               ; BASE
   517  015e  534156c5d0                DEFM    "SAV", 'E'|$80, $D0              ; BSAVE
   518  0163  4c4f41c4cf                DEFM    "LOA", 'D'|$80, $CF              ; BLOAD
   519  0168  4545d0c0                  DEFM    "EE", 'P'|$80, $C0               ; BEEP
   520  016c  494ea41d                  DEFM    "IN", '$'|$80, $1D               ; BIN$
   521  0170  00                        DEFB    0
   522                          
   523                          ; Keywords starting with 'C'
   524  0171  414cccca          T3A9F:  DEFM    "AL", 'L'|$80, $CA               ; CALL
   525  0175  4c4f53c5b4                DEFM    "LOS", 'E'|$80, $B4              ; CLOSE
   526  017a  4f50d9d6                  DEFM    "OP", 'Y'|$80, $D6               ; COPY
   527  017e  4f4ed499                  DEFM    "ON", 'T'|$80, $99               ; CONT
   528  0182  4c4541d292                DEFM    "LEA", 'R'|$80, $92              ; CLEAR
   529  0187  4c4f41c49b                DEFM    "LOA", 'D'|$80, $9B              ; CLOAD
   530  018c  534156c59a                DEFM    "SAV", 'E'|$80, $9A              ; CSAVE
   531  0191  53524c49cee8              DEFM    "SRLI", 'N'|$80, $E8             ; CSRLIN
   532  0197  494ed41e                  DEFM    "IN", 'T'|$80, $1E               ; CINT
   533  019b  534ec71f                  DEFM    "SN", 'G'|$80, $1F               ; CSNG
   534  019f  4442cc20                  DEFM    "DB", 'L'|$80, $20               ; CDBL
   535  01a3  56c928                    DEFM    "V", 'I'|$80, $28                ; CVI
   536  01a6  56d329                    DEFM    "V", 'S'|$80, $29                ; CVS
   537  01a9  56c42a                    DEFM    "V", 'D'|$80, $2A                ; CVD
   538  01ac  4fd30c                    DEFM    "O", 'S'|$80, $0C                ; COS
   539  01af  4852a416                  DEFM    "HR", '$'|$80, $16               ; CHR$
   540  01b3  4952434cc5bc              DEFM    "IRCL", 'E'|$80, $BC             ; CIRCLE
   541  01b9  4f4c4fd2bd                DEFM    "OLO", 'R'|$80, $BD              ; COLOR
   542  01be  4cd39f                    DEFM    "L", 'S'|$80, $9F                ; CLS
   543  01c1  4dc4d7                    DEFM    "M", 'D'|$80, $D7                ; CMD
   544  01c4  00                        DEFB    0
   545                          
   546                          ; Keywords starting with 'D'
   547  01c5  454c4554c5a8      T3AF3:  DEFM    "ELET", 'E'|$80, $A8             ; DELETE
   548  01cb  4154c184                  DEFM    "AT", 'A'|$80, $84               ; DATA
   549  01cf  49cd86                    DEFM    "I", 'M'|$80, $86                ; DIM
   550  01d2  45465354d2ab              DEFM    "EFST", 'R'|$80, $AB             ; DEFSTR
   551  01d8  4546494ed4ac              DEFM    "EFIN", 'T'|$80, $AC             ; DEFINT
   552  01de  4546534ec7ad              DEFM    "EFSN", 'G'|$80, $AD             ; DEFSNG
   553  01e4  45464442ccae              DEFM    "EFDB", 'L'|$80, $AE             ; DEFDBL
   554  01ea  534b4fa4d1                DEFM    "SKO", '$'|$80, $D1              ; DSKO$
   555  01ef  45c697                    DEFM    "E", 'F'|$80, $97                ; DEF
   556  01f2  534b49a4ea                DEFM    "SKI", '$'|$80, $EA              ; DSKI$
   557  01f7  534bc626                  DEFM    "SK", 'F'|$80, $26               ; DSKF
   558  01fb  5241d7be                  DEFM    "RA", 'W'|$80, $BE               ; DRAW
   559  01ff  00                        DEFB    0
   560                          
   561                          ; Keywords starting with 'E'
   562  0200  4c53c5a1          T3B2E:  DEFM    "LS", 'E'|$80, $A1               ; ELSE
   563  0204  4ec481                    DEFM    "N", 'D'|$80, $81                ; END
   564  0207  524153c5a5                DEFM    "RAS", 'E'|$80, $A5              ; ERASE
   565  020c  52524fd2a6                DEFM    "RRO", 'R'|$80, $A6              ; ERROR
   566  0211  52cce1                    DEFM    "R", 'L'|$80, $E1                ; ERL
   567  0214  52d2e2                    DEFM    "R", 'R'|$80, $E2                ; ERR
   568  0217  58d00b                    DEFM    "X", 'P'|$80, $0B                ; EXP
   569  021a  4fc62b                    DEFM    "O", 'F'|$80, $2B                ; EOF
   570  021d  51d6f9                    DEFM    "Q", 'V'|$80, $F9                ; EQV
   571  0220  00                        DEFB    0
   572                          
   573                          ; Keywords starting with 'F'
   574  0221  4fd282            T3B4F:  DEFM    "O", 'R'|$80, $82                ; FOR
   575  0224  49454cc4b1                DEFM    "IEL", 'D'|$80, $B1              ; FIELD
   576  0229  494c45d3b7                DEFM    "ILE", 'S'|$80, $B7              ; FILES
   577  022e  cede                      DEFM    "", 'N'|$80, $DE                 ; FN
   578  0230  52c50f                    DEFM    "R", 'E'|$80, $0F                ; FRE
   579  0233  49d821                    DEFM    "I", 'X'|$80, $21                ; FIX
   580  0236  504fd327                  DEFM    "PO", 'S'|$80, $27               ; FPOS
   581  023a  00                        DEFB    0
   582                          
   583                          ; Keywords starting with 'G'
   584  023b  4f54cf89          T3B69:  DEFM    "OT", 'O'|$80, $89               ; GOTO
   585  023f  4f2054cf89                DEFM    "O T", 'O'|$80, $89              ; GO TO
   586  0244  4f5355c28d                DEFM    "OSU", 'B'|$80, $8D              ; GOSUB
   587  0249  45d4b2                    DEFM    "E", 'T'|$80, $B2                ; GET
   588  024c  00                        DEFB    0
   589                          
   590                          ; Keywords starting with 'H'
   591  024d  4558a41b          T3B7B:  DEFM    "EX", '$'|$80, $1B               ; HEX$
   592  0251  00                        DEFB    0
   593                          
   594                          ; Keywords starting with 'I'
   595  0252  4e5055d485        T3B80:  DEFM    "NPU", 'T'|$80, $85              ; INPUT
   596  0257  c68b                      DEFM    "", 'F'|$80, $8B                 ; IF
   597  0259  4e5354d2e5                DEFM    "NST", 'R'|$80, $E5              ; INSTR
   598  025e  4ed405                    DEFM    "N", 'T'|$80, $05                ; INT
   599  0261  4ed010                    DEFM    "N", 'P'|$80, $10                ; INP
   600  0264  4dd0fa                    DEFM    "M", 'P'|$80, $FA                ; IMP
   601  0267  4e4b4559a4ec              DEFM    "NKEY", '$'|$80, $EC             ; INKEY$
   602  026d  50ccd5                    DEFM    "P", 'L'|$80, $D5                ; IPL
   603  0270  00                        DEFB    0
   604                          
   605                          ; Keywords starting with 'J'
   606  0271  00                T3B9F:  DEFB    0
   607                          
   608                          ; Keywords starting with 'K'
   609  0272  494cccd4          T3BA0:  DEFM    "IL", 'L'|$80, $D4               ; KILL
   610  0276  45d9cc                    DEFM    "E", 'Y'|$80, $CC                ; KEY
   611  0279  00                        DEFB    0
   612                          
   613                          ; Keywords starting with 'L'
   614  027a  5052494ed49d      T3BA8:  DEFM    "PRIN", 'T'|$80, $9D             ; LPRINT
   615  0280  4c4953d49e                DEFM    "LIS", 'T'|$80, $9E              ; LLIST
   616  0285  504fd31c                  DEFM    "PO", 'S'|$80, $1C               ; LPOS
   617  0289  45d488                    DEFM    "E", 'T'|$80, $88                ; LET
   618  028c  4f434154c5d8              DEFM    "OCAT", 'E'|$80, $D8             ; LOCATE
   619  0292  494ec5af                  DEFM    "IN", 'E'|$80, $AF               ; LINE
   620  0296  4f41c4b5                  DEFM    "OA", 'D'|$80, $B5               ; LOAD
   621  029a  5345d4b8                  DEFM    "SE", 'T'|$80, $B8               ; LSET
   622  029e  4953d493                  DEFM    "IS", 'T'|$80, $93               ; LIST
   623  02a2  46494c45d3bb              DEFM    "FILE", 'S'|$80, $BB             ; LFILES
   624  02a8  4fc70a                    DEFM    "O", 'G'|$80, $0A                ; LOG
   625  02ab  4fc32c                    DEFM    "O", 'C'|$80, $2C                ; LOC
   626  02ae  45ce12                    DEFM    "E", 'N'|$80, $12                ; LEN
   627  02b1  454654a401                DEFM    "EFT", '$'|$80, $01              ; LEFT$
   628  02b6  4fc62d                    DEFM    "O", 'F'|$80, $2D                ; LOF
   629  02b9  00                        DEFB    0
   630                          
   631                          ; Keywords starting with 'M'
   632  02ba  4f544fd2ce        T3BE8:  DEFM    "OTO", 'R'|$80, $CE              ; MOTOR
   633  02bf  455247c5b6                DEFM    "ERG", 'E'|$80, $B6              ; MERGE
   634  02c4  4fc4fb                    DEFM    "O", 'D'|$80, $FB                ; MOD
   635  02c7  4b49a42e                  DEFM    "KI", '$'|$80, $2E               ; MKI$
   636  02cb  4b53a42f                  DEFM    "KS", '$'|$80, $2F               ; MKS$
   637  02cf  4b44a430                  DEFM    "KD", '$'|$80, $30               ; MKD$
   638  02d3  4944a403                  DEFM    "ID", '$'|$80, $03               ; MID$
   639  02d7  41d8cd                    DEFM    "A", 'X'|$80, $CD                ; MAX
   640  02da  00                        DEFB    0
   641                          
   642                          ; Keywords starting with 'N'
   643  02db  4558d483          T3C09:  DEFM    "EX", 'T'|$80, $83               ; NEXT
   644  02df  414dc5d3                  DEFM    "AM", 'E'|$80, $D3               ; NAME
   645  02e3  45d794                    DEFM    "E", 'W'|$80, $94                ; NEW
   646  02e6  4fd4e0                    DEFM    "O", 'T'|$80, $E0                ; NOT
   647  02e9  00                        DEFB    0
   648                          
   649                          ; Keywords starting with 'O'
   650  02ea  5045ceb0          T3C18:  DEFM    "PE", 'N'|$80, $B0               ; OPEN
   651  02ee  55d49c                    DEFM    "U", 'T'|$80, $9C                ; OUT
   652  02f1  ce95                      DEFM    "", 'N'|$80, $95                 ; ON
   653  02f3  d2f7                      DEFM    "", 'R'|$80, $F7                 ; OR
   654  02f5  4354a41a                  DEFM    "CT", '$'|$80, $1A               ; OCT$
   655  02f9  46c6eb                    DEFM    "F", 'F'|$80, $EB                ; OFF
   656  02fc  00                        DEFB    0
   657                          
   658                          ; Keywords starting with 'P'
   659  02fd  52494ed491        T3C2B:  DEFM    "RIN", 'T'|$80, $91              ; PRINT
   660  0302  55d4b3                    DEFM    "U", 'T'|$80, $B3                ; PUT
   661  0305  4f4bc598                  DEFM    "OK", 'E'|$80, $98               ; POKE
   662  0309  4fd311                    DEFM    "O", 'S'|$80, $11                ; POS
   663  030c  4545cb17                  DEFM    "EE", 'K'|$80, $17               ; PEEK
   664  0310  5345d4c2                  DEFM    "SE", 'T'|$80, $C2               ; PSET
   665  0314  52455345d4c3              DEFM    "RESE", 'T'|$80, $C3             ; PRESET
   666  031a  4f494ed4ed                DEFM    "OIN", 'T'|$80, $ED              ; POINT
   667  031f  41494ed4bf                DEFM    "AIN", 'T'|$80, $BF              ; PAINT
   668  0324  44cc24                    DEFM    "D", 'L'|$80, $24                ; PDL
   669  0327  41c425                    DEFM    "A", 'D'|$80, $25                ; PAD
   670  032a  4c41d9c1                  DEFM    "LA", 'Y'|$80, $C1               ; PLAY
   671  032e  00                        DEFB    0
   672                          
   673                          ; Keywords starting with 'Q'
   674  032f  00                T3C5D:  DEFB    0
   675                          
   676                          ; Keywords starting with 'R'
   677  0330  45545552ce8e      T3C5E:  DEFM    "ETUR", 'N'|$80, $8E             ; RETURN
   678  0336  4541c487                  DEFM    "EA", 'D'|$80, $87               ; READ
   679  033a  55ce8a                    DEFM    "U", 'N'|$80, $8A                ; RUN
   680  033d  4553544f52c58c            DEFM    "ESTOR", 'E'|$80, $8C            ; RESTORE
   681  0344  45cd8f                    DEFM    "E", 'M'|$80, $8F                ; REM
   682  0347  4553554dc5a7              DEFM    "ESUM", 'E'|$80, $A7             ; RESUME
   683  034d  5345d4b9                  DEFM    "SE", 'T'|$80, $B9               ; RSET
   684  0351  49474854a402              DEFM    "IGHT", '$'|$80, $02             ; RIGHT$
   685  0357  4ec408                    DEFM    "N", 'D'|$80, $08                ; RND
   686  035a  454e55cdaa                DEFM    "ENU", 'M'|$80, $AA              ; RENUM
   687  035f  00                        DEFB    0
   688                          
   689                          ; Keywords starting with 'S'
   690  0360  43524545cec5      T3C8E:  DEFM    "CREE", 'N'|$80, $C5             ; SCREEN
   691  0366  50524954c5c7              DEFM    "PRIT", 'E'|$80, $C7             ; SPRITE
   692  036c  544fd090                  DEFM    "TO", 'P'|$80, $90               ; STOP
   693  0370  5741d0a4                  DEFM    "WA", 'P'|$80, $A4               ; SWAP
   694  0374  45d4d2                    DEFM    "E", 'T'|$80, $D2                ; SET
   695  0377  4156c5ba                  DEFM    "AV", 'E'|$80, $BA               ; SAVE
   696  037b  5043a8df                  DEFM    "PC", '('|$80, $DF               ; SPC(
   697  037f  5445d0dc                  DEFM    "TE", 'P'|$80, $DC               ; STEP
   698  0383  47ce04                    DEFM    "G", 'N'|$80, $04                ; SGN
   699  0386  51d207                    DEFM    "Q", 'R'|$80, $07                ; SQR
   700  0389  49ce09                    DEFM    "I", 'N'|$80, $09                ; SIN
   701  038c  5452a413                  DEFM    "TR", '$'|$80, $13               ; STR$
   702  0390  5452494e47a4e3            DEFM    "TRING", '$'|$80, $E3            ; STRING$
   703  0397  50414345a419              DEFM    "PACE", '$'|$80, $19             ; SPACE$
   704  039d  4f554ec4c4                DEFM    "OUN", 'D'|$80, $C4              ; SOUND
   705  03a2  544943cb22                DEFM    "TIC", 'K'|$80, $22              ; STICK
   706  03a7  545249c723                DEFM    "TRI", 'G'|$80, $23              ; STRIG
   707  03ac  00                        DEFB    0
   708                          
   709                          ; Keywords starting with 'T'
   710  03ad  4845ceda          T3CDB:  DEFM    "HE", 'N'|$80, $DA               ; THEN
   711  03b1  524fcea2                  DEFM    "RO", 'N'|$80, $A2               ; TRON
   712  03b5  524f46c6a3                DEFM    "ROF", 'F'|$80, $A3              ; TROFF
   713  03ba  4142a8db                  DEFM    "AB", '('|$80, $DB               ; TAB(
   714  03be  cfd9                      DEFM    "", 'O'|$80, $D9                 ; TO
   715  03c0  494dc5cb                  DEFM    "IM", 'E'|$80, $CB               ; TIME
   716  03c4  41ce0d                    DEFM    "A", 'N'|$80, $0D                ; TAN
   717  03c7  00                        DEFB    0
   718                          
   719                          ; Keywords starting with 'U'
   720  03c8  53494ec7e4        T3CF6:  DEFM    "SIN", 'G'|$80, $E4              ; USING
   721  03cd  53d2dd                    DEFM    "S", 'R'|$80, $DD                ; USR
   722  03d0  00                        DEFB    0
   723                          
   724                          ; Keywords starting with 'V'
   725  03d1  41cc14            T3CFF:  DEFM    "A", 'L'|$80, $14                ; VAL
   726  03d4  41525054d2e7              DEFM    "ARPT", 'R'|$80, $E7             ; VARPTR
   727  03da  44d0c8                    DEFM    "D", 'P'|$80, $C8                ; VDP
   728  03dd  504f4bc5c6                DEFM    "POK", 'E'|$80, $C6              ; VPOKE
   729  03e2  504545cb18                DEFM    "PEE", 'K'|$80, $18              ; VPEEK
   730  03e7  00                        DEFB    0
   731                          
   732                          ; Keywords starting with 'W'
   733  03e8  494454c8a0        T3D16:  DEFM    "IDT", 'H'|$80, $A0              ; WIDTH
   734  03ed  4149d496                  DEFM    "AI", 'T'|$80, $96               ; WAIT
   735  03f1  00                        DEFB    0
   736                          
   737                          ; Keywords starting with 'X'
   738  03f2  4fd2f8            T3D20:  DEFM    "O", 'R'|$80, $F8                ; XOR
   739  03f5  00                        DEFB    0
   740                          
   741                          ; Keywords starting with 'Y'
   742  03f6  00                T3D24:  DEFB    0
   743                          
   744                          ; Keywords starting with 'Z'
   745  03f7  00                T3D25:  DEFB    0
   746                          
   747  03f8  abf1              I3D26:  DEFB    '+'|$80,$F1
   748  03fa  adf2                      DEFB    '-'|$80,$F2
   749  03fc  aaf3                      DEFB    '*'|$80,$F3
   750  03fe  aff4                      DEFB    '/'|$80,$F4
   751  0400  def5                      DEFB    '^'|$80,$F5
   752  0402  dcfc                      DEFB    '\\'|$80,$FC
   753  0404  a7e6                      DEFB    '\''|$80,$E6
   754  0406  beee                      DEFB    '>'|$80,$EE
   755  0408  bdef                      DEFB    '='|$80,$EF
   756  040a  bcf0                      DEFB    '<'|$80,$F0
   757  040c  00                        DEFB    0
   758                          
   759  040d  79                I3D3B:  DEFB    $79                    ; +
   760  040e  79                        DEFB    $79                    ; -
   761  040f  7c                        DEFB    $7C                    ; *
   762  0410  7c                        DEFB    $7C                    ; /
   763  0411  7f                        DEFB    $7F                    ; ^
   764  0412  50                        DEFB    $50                    ; AND
   765  0413  46                        DEFB    $46                    ; OR
   766  0414  3c                        DEFB    $3C                    ; XOR
   767  0415  32                        DEFB    $32                    ; EQV
   768  0416  28                        DEFB    $28                    ; IMP
   769  0417  7a                        DEFB    $7A                    ; MOD
   770  0418  7b                        DEFB    $7B                    ; \
   771                          
   772  0419  0000              I3D47:  DEFW    C303A                   ; convert DAC to double real
   773  041b  0000                      DEFW    0
   774  041d  0000                      DEFW    C2F8A                   ; convert DAC to integer
   775  041f  0000                      DEFW    C3058                   ; check if string (error if not)
   776  0421  0000                      DEFW    C2FB2                   ; convert DAC to single real
   777                          
   778  0423  0000              I3D51:  DEFW    C269A                   ; double real addition DECADD
   779  0425  0000                      DEFW    C268C                   ; double real subtract DECSUB
   780  0427  0000                      DEFW    C27E6                   ; double real multiply DECMUL
   781  0429  0000                      DEFW    C289F                   ; double real divide DECDIV
   782  042b  0000                      DEFW    C37D7                   ; double real to the power
   783  042d  0000                      DEFW    C2F83                   ; double real compare
   784                          
   785  042f  0000              I3D5D:  DEFW    C324E                   ; single real addition
   786  0431  0000                      DEFW    C3257                   ; single real subtract
   787  0433  0000                      DEFW    C325C                   ; single real muliply
   788  0435  0000                      DEFW    C3267                   ; single real divide
   789  0437  0000                      DEFW    C37C8                   ; single real to the power
   790  0439  0000                      DEFW    C2F21                   ; single real compare (FCOMP)
   791                          
   792  043b  0000              I3D69:  DEFW    C3172                   ; integer addition
   793  043d  0000                      DEFW    C3167                   ; integer subtract
   794  043f  0000                      DEFW    C3193                   ; integer multiply
   795  0441  8a14                      DEFW    C4DB8                   ; integer divide
   796  0443  0000                      DEFW    C383F                   ; integer to the power
   797  0445  0000                      DEFW    C2F4D                   ; integer compare
   798                          
   799  0447  00                I3D75:  DEFB    0
   800  0448  4e45585420776974          DEFB    "NEXT without FOR",0
              686f757420464f52  
              00                
   801  0459  53796e7461782065          DEFB    "Syntax error",0
              72726f7200        
   802  0466  52455455524e2077          DEFB    "RETURN without GOSUB",0
              6974686f75742047  
              4f53554200        
   803  047b  4f7574206f662044          DEFB    "Out of DATA",0
              41544100          
   804  0487  496c6c6567616c20          DEFB    "Illegal function call",0
              66756e6374696f6e  
              2063616c6c00      
   805  049d  4f766572666c6f77          DEFB    "Overflow",0
              00                
   806  04a6  4f7574206f66206d          DEFB    "Out of memory",0
              656d6f727900      
   807  04b4  556e646566696e65          DEFB    "Undefined line number",0
              64206c696e65206e  
              756d62657200      
   808  04ca  5375627363726970          DEFB    "Subscript out of range",0
              74206f7574206f66  
              2072616e676500    
   809  04e1  526564696d656e73          DEFB    "Redimensioned array",0
              696f6e6564206172  
              72617900          
   810  04f5  4469766973696f6e          DEFB    "Division by zero",0
              206279207a65726f  
              00                
   811  0506  496c6c6567616c20          DEFB    "Illegal direct",0
              64697265637400    
   812  0515  54797065206d6973          DEFB    "Type mismatch",0
              6d6174636800      
   813  0523  4f7574206f662073          DEFB    "Out of string space",0
              7472696e67207370  
              61636500          
   814  0537  537472696e672074          DEFB    "String too long",0
              6f6f206c6f6e6700  
   815  0547  537472696e672066          DEFB    "String formula too complex",0
              6f726d756c612074  
              6f6f20636f6d706c  
              657800            
   816  0562  43616e277420434f          DEFB    "Can't CONTINUE",0
              4e54494e554500    
   817  0571  556e646566696e65          DEFB    "Undefined user function",0
              6420757365722066  
              756e6374696f6e00  
   818  0589  4465766963652049          DEFB    "Device I/O error",0
              2f4f206572726f72  
              00                
   819  059a  5665726966792065          DEFB    "Verify error",0
              72726f7200        
   820  05a7  4e6f20524553554d          DEFB    "No RESUME",0
              4500              
   821  05b1  524553554d452077          DEFB    "RESUME without error",0
              6974686f75742065  
              72726f7200        
   822  05c6  556e7072696e7461          DEFB    "Unprintable error",0
              626c65206572726f  
              7200              
   823  05d8  4d697373696e6720          DEFB    "Missing operand",0
              6f706572616e6400  
   824  05e8  4c696e6520627566          DEFB    "Line buffer overflow",0
              666572206f766572  
              666c6f7700        
   825  05fd  4649454c44206f76          DEFB    "FIELD overflow",0
              6572666c6f7700    
   826  060c  496e7465726e616c          DEFB    "Internal error",0
              206572726f7200    
   827  061b  4261642066696c65          DEFB    "Bad file number",0
              206e756d62657200  
   828  062b  46696c65206e6f74          DEFB    "File not found",0
              20666f756e6400    
   829  063a  46696c6520616c72          DEFB    "File already open",0
              65616479206f7065  
              6e00              
   830  064c  496e707574207061          DEFB    "Input past end",0
              737420656e6400    
   831  065b  4261642066696c65          DEFB    "Bad file name",0
              206e616d6500      
   832  0669  4469726563742073          DEFB    "Direct statement in file",0
              746174656d656e74  
              20696e2066696c65  
              00                
   833  0682  53657175656e7469          DEFB    "Sequential I/O only",0
              616c20492f4f206f  
              6e6c7900          
   834  0696  46696c65206e6f74          DEFB    "File not OPEN",0
              204f50454e00      
   835                          
   836  06a4  20696e20          I3FD2:  DEFB    " in "
   837                          
   838  06a8  00                I3FD6:  DEFB    0
   839                          
   840  06a9  4f6b0d0a00        I3FD7:  DEFB    "Ok",13,10,0
   841                          
   842  06ae  427265616b00      I3FDC:  DEFB    "Break",0
   843                          
   844                          ;       Subroutine      search FOR block on stack (skip 2 words)
   845                          ;       Inputs          DE = address loop variable (0 if any FOR block)
   846                          ;       Outputs         Zx set if found, Zx reset if other block found first
   847                          
   848  06b4  210400            C3FE2:  LD      HL,4                    ; skip this routine return address and main loop return address
   849  06b7  39                        ADD     HL,SP
   850                          
   851                          ;       Subroutine      search FOR block
   852                          ;       Inputs          ________________________
   853                          ;       Outputs         ________________________
   854                          
   855  06b8  7e                C3FE6:  LD      A,(HL)
   856  06b9  23                        INC     HL
   857  06ba  fe82                      CP      $82                     ; FOR block ?
   858  06bc  c0                        RET     NZ                      ; nope, quit
   859  06bd  4e                        LD      C,(HL)
   860  06be  23                        INC     HL
   861  06bf  46                        LD      B,(HL)                  ; address loop variable
   862  06c0  23                        INC     HL
   863  06c1  e5                        PUSH    HL
   864  06c2  60                        LD      H,B
   865  06c3  69                        LD      L,C
   866  06c4  7a                        LD      A,D
   867  06c5  b3                        OR      E                       ; variable specified ?
   868  06c6  eb                        EX      DE,HL
   869  06c7  2802                      JR      Z,J3FF9                 ; nope, found
   870  06c9  eb                        EX      DE,HL
   871  06ca  e7                        RST     DCOMPR                  ; same variable ?
   872  06cb  011600            J3FF9:  LD      BC,25-3
   873  06ce  e1                        POP     HL
   874  06cf  c8                        RET     Z                       ; yep, quit
   875  06d0  09                        ADD     HL,BC
   876  06d1  18e5                      JR      C3FE6                   ; next block
   877                          
   878                          ;       Subroutine      INP function
   879                          ;       Inputs          ________________________
   880                          ;       Outputs         ________________________
   881                          
   882  06d3  cd0b1b            C4001:  CALL    C5439                   ; convert address to integer
   883  06d6  44                        LD      B,H
   884  06d7  4d                        LD      C,L
   885  06d8  ed78                      IN      A,(C)
   886  06da  c3a116                    JP      C4FCF                   ; byte to DAC
   887                          
   888                          ;       Subroutine      evaluate address operand and byte operand seperated by a ','
   889                          ;       Inputs          ________________________
   890                          ;       Outputs         ________________________
   891                          
   892  06dd  cd011b            C400B:  CALL    C542F                   ; evaluate address operand
   893  06e0  d5                        PUSH    DE
   894  06e1  cf                        RST     SYNCHR
   895  06e2  2c                        DEFB    ','
   896  06e3  cdee18                    CALL    C521C                   ; evaluate byte operand
   897  06e6  c1                        POP     BC
   898  06e7  c9                        RET
   899                          
   900                          ;       Subroutine      OUT statement
   901                          ;       Inputs          ________________________
   902                          ;       Outputs         ________________________
   903                          
   904  06e8  cddd06            C4016:  CALL    C400B                   ; evaluate address operand and byte operand seperated by a ','
   905  06eb  ed79                      OUT     (C),A
   906  06ed  c9                        RET
   907                          
   908                          ;       Subroutine      WAIT statement
   909                          ;       Inputs          ________________________
   910                          ;       Outputs         ________________________
   911                          
   912  06ee  cddd06            C401C:  CALL    C400B                   ; evaluate address operand and byte operand seperated by a ','
   913  06f1  c5                        PUSH    BC
   914  06f2  f5                        PUSH    AF
   915  06f3  1e00                      LD      E,0                     ; assume no XOR parameter
   916  06f5  2b                        DEC     HL
   917  06f6  d7                        RST     CHRGTR                  ; end of statement ?
   918  06f7  2805                      JR      Z,J402C                 ; yep, start wait
   919  06f9  cf                        RST     SYNCHR
   920  06fa  2c                        DEFB    ','
   921  06fb  cdee18                    CALL    C521C                   ; evaluate byte operand
   922  06fe  f1                J402C:  POP     AF
   923  06ff  57                        LD      D,A                     ; AND parameter
   924  0700  c1                        POP     BC                      ; i/o address
   925  0701  cd0000            J402F:  CALL    CKCNTC
   926  0704  ed78                      IN      A,(C)
   927  0706  ab                        XOR     E
   928  0707  a2                        AND     D
   929  0708  28f7                      JR      Z,J402F
   930  070a  c9                        RET
   931                          
   932                          ;       Subroutine      at end of BASIC program
   933                          ;       Inputs          ________________________
   934                          ;       Outputs         ________________________
   935                          
   936  070b  cdf8fe            J4039:  CALL    H_PRGE                  ; hook program ends
   937  070e  2a1cf4                    LD      HL,(CURLIN)
   938  0711  7c                        LD      A,H
   939  0712  a5                        AND     L
   940  0713  3c                        INC     A                       ; interpreter in direct mode ?
   941  0714  2808                      JR      Z,J404C                 ; yep, skip error handling stuff
   942  0716  3abbf6                    LD      A,(ONEFLG)
   943  0719  b7                        OR      A                       ; in ERROR handling routine ?
   944  071a  1e15                      LD      E,21
   945  071c  2023                      JR      NZ,J406F                ; yep, no resume error
   946  071e  c3d32a            J404C:  JP      J6401                   ; END without closing i/o channels, clearing
   947                          
   948  0721  2aa3f6            J404F:  LD      HL,(DATLIN)
   949  0724  221cf4                    LD      (CURLIN),HL
   950  0727  1e02              J4055:  LD      E,2
   951  0729  01                        DEFB    $01
   952  072a  1e0b              J4058:  LD      E,11
   953  072c  01                        DEFB    $01
   954  072d  1e01              J405B:  LD      E,1
   955  072f  01                        DEFB    $01
   956  0730  1e0a              J405E:  LD      E,10
   957  0732  01                        DEFB    $01
   958  0733  1e12              J4061:  LD      E,18
   959  0735  01                        DEFB    $01
   960  0736  1e16              J4064:  LD      E,22
   961  0738  01                        DEFB    $01
   962  0739  1e06              J4067:  LD      E,6
   963  073b  01                        DEFB    $01
   964  073c  1e18              J406A:  LD      E,24
   965  073e  01                        DEFB    $01
   966  073f  1e0d              J406D:  LD      E,13
   967                          
   968                          ;       Subroutine      BASIC error
   969                          ;       Inputs          E = errornumber
   970                          ;       Outputs         ________________________
   971                          
   972  0741  cdb1ff            J406F:  CALL    H_ERRO                  ; hook start of the BASIC error routine
   973  0744  af                        XOR     A
   974  0745  327cf8                    LD      (NLONLY),A              ; not loading basic program, close i/o channels when requested
   975  0748  2a19f4                    LD      HL,(VLZADR)
   976  074b  7c                        LD      A,H
   977  074c  b5                        OR      L
   978  074d  280a                      JR      Z,J4087
   979  074f  3a1bf4                    LD      A,(VLZDAT)
   980  0752  77                        LD      (HL),A
   981  0753  210000                    LD      HL,0
   982  0756  2219f4                    LD      (VLZADR),HL
   983  0759  fb                J4087:  EI
   984  075a  2a1cf4                    LD      HL,(CURLIN)
   985  075d  22b3f6                    LD      (ERRLIN),HL             ; linenumber at error
   986  0760  7c                        LD      A,H
   987  0761  a5                        AND     L
   988  0762  3c                        INC     A                       ; error occured in direct mode ?
   989  0763  2803                      JR      Z,J4096
   990  0765  22b5f6                    LD      (DOT),HL                ; nope, set DOT
   991  0768  017607            J4096:  LD      BC,I40A4
   992  076b  1803                      JR      J409E
   993                          
   994                          ;       Subroutine      warm start MSX BASIC
   995                          ;       Inputs          -
   996                          ;       Outputs         -
   997                          
   998  076d  01f007            J409B:  LD      BC,J411E                ; ok and mainloop (+POP)
   999  0770  2ab1f6            J409E:  LD      HL,(SAVSTK)
  1000  0773  c3c229                    JP      J62F0                   ; reinitialize stack
  1001                          
  1002  0776  c1                I40A4:  POP     BC
  1003  0777  7b                        LD      A,E
  1004  0778  4b                        LD      C,E
  1005  0779  3214f4                    LD      (ERRFLG),A              ; save errorcode
  1006  077c  2aaff6                    LD      HL,(SAVTXT)
  1007  077f  22b7f6                    LD      (ERRTXT),HL             ; BASICpointer at error
  1008  0782  eb                        EX      DE,HL
  1009  0783  2ab3f6                    LD      HL,(ERRLIN)
  1010  0786  7c                        LD      A,H
  1011  0787  a5                        AND     L
  1012  0788  3c                        INC     A                       ; error occured in direct mode ?
  1013  0789  2807                      JR      Z,J40C0
  1014  078b  22bef6                    LD      (OLDLIN),HL
  1015  078e  eb                        EX      DE,HL
  1016  078f  22c0f6                    LD      (OLDTXT),HL             ; nope, save linenumber and BASICpointer for continue
  1017  0792  2ab9f6            J40C0:  LD      HL,(ONELIN)
  1018  0795  7c                        LD      A,H
  1019  0796  b5                        OR      L                       ; ERROR handler defined ?
  1020  0797  eb                        EX      DE,HL
  1021  0798  21bbf6                    LD      HL,ONEFLG
  1022  079b  2808                      JR      Z,J40D3                 ; nope, abort
  1023  079d  a6                        AND     (HL)                    ; in ERROR handler ?
  1024  079e  2005                      JR      NZ,J40D3                ; yep, abort
  1025  07a0  35                        DEC     (HL)                    ; flag in ERROR handler
  1026  07a1  eb                        EX      DE,HL
  1027  07a2  c3f20c                    JP      J4620                   ; execute statement (execute ERROR handler)
  1028                          
  1029  07a5  af                J40D3:  XOR     A
  1030  07a6  77                        LD      (HL),A                  ; not in ERROR handler
  1031  07a7  59                        LD      E,C                     ; errorcode
  1032  07a8  cdf539                    CALL    C7323                   ; fresh line to interpreter output
  1033  07ab  214704                    LD      HL,I3D75
  1034  07ae  cdfdfe                    CALL    H_ERRP                  ; hook error pointer
  1035  07b1  7b                        LD      A,E
  1036  07b2  fe3c                      CP      60                      ; errorcode 60-255 ?
  1037  07b4  3008                      JR      NC,J40EC                ; yep, use unprintable error string
  1038  07b6  fe32                      CP      50                      ; errorcode 50-59 ?
  1039  07b8  3006                      JR      NC,J40EE                ; adjust and search errorstring
  1040  07ba  fe1a                      CP      26                      ; errorcode 1-25 ?
  1041  07bc  3805                      JR      C,J40F1                 ; yep, search errorstring
  1042  07be  3e2f              J40EC:  LD      A,47                    ; unprintable error
  1043  07c0  d618              J40EE:  SUB     24
  1044  07c2  5f                        LD      E,A
  1045  07c3  cd2f0f            J40F1:  CALL    C485D                   ; skip to end of BASIC line (to search end of errorstring)
  1046  07c6  23                        INC     HL
  1047  07c7  1d                        DEC     E
  1048  07c8  20f9                      JR      NZ,J40F1                ; next errorstring
  1049  07ca  e5                        PUSH    HL
  1050  07cb  2ab3f6                    LD      HL,(ERRLIN)
  1051  07ce  e3                        EX      (SP),HL                 ; save linenumber error
  1052                          
  1053  07cf  cd02ff            J40FD:  CALL    H_ERRF
  1054  07d2  e5                        PUSH    HL
  1055  07d3  cd0000                    CALL    TOTEXT                  ; force to text screenmode
  1056  07d6  e1                        POP     HL
  1057  07d7  7e                        LD      A,(HL)
  1058  07d8  fe3f                      CP      '?'                     ; errorstring start with a '?'
  1059  07da  2006                      JR      NZ,J4110                ; nope, print errormessage
  1060  07dc  e1                        POP     HL                      ; error linenumber
  1061  07dd  214704                    LD      HL,I3D75
  1062  07e0  18dc                      JR      J40EC                   ; use unprintable error
  1063                          
  1064  07e2  3e07              J4110:  LD      A,7
  1065  07e4  df                        RST     OUTDO                   ; beep to interpreter output
  1066  07e5  cd4a2d                    CALL    C6678                   ; message to interpreter output
  1067  07e8  e1                        POP     HL                      ; error linenumber
  1068  07e9  7c                        LD      A,H
  1069  07ea  a5                        AND     L
  1070  07eb  3c                        INC     A                       ; error occured in direct mode ?
  1071  07ec  c40000                    CALL    NZ,C340A                ; nope, "in" number to interpreter output
  1072  07ef  3e                        DEFB    $3E                    ; skip next instruction
  1073                          
  1074                          ;       Subroutine      ok and mainloop (+POP)
  1075                          ;       Inputs          ________________________
  1076                          ;       Outputs         ________________________
  1077                          
  1078  07f0  c1                J411E:  POP     BC
  1079                          
  1080                          ;       Subroutine      ok and mainloop
  1081                          ;       Inputs          ________________________
  1082                          ;       Outputs         ________________________
  1083                          
  1084  07f1  cd0000            J411F:  CALL    TOTEXT                  ; force text screenmode
  1085  07f4  cdd639                    CALL    C7304                   ; end printeroutput
  1086  07f7  cd4d34                    CALL    C6D7B                   ; close i/o channel 0 and load HL from (TEMP)
  1087  07fa  cd07ff                    CALL    H_READ                  ; hook prompt ready
  1088  07fd  cdf539                    CALL    C7323                   ; fresh line to interpreter output
  1089  0800  21a906                    LD      HL,I3FD7                ; "Ok" message
  1090  0803  cd4a2d                    CALL    C6678                   ; message to interpreter output
  1091                          
  1092                          ;       Subroutine      mainloop
  1093                          ;       Inputs          ________________________
  1094                          ;       Outputs         ________________________
  1095                          
  1096  0806  cd0cff            J4134:  CALL    H_MAIN                  ; hook start mainloop
  1097  0809  21ffff                    LD      HL,$FFFF
  1098  080c  221cf4                    LD      (CURLIN),HL             ; interpreter in direct mode
  1099  080f  210ff4                    LD      HL,ENDPRG
  1100  0812  22aff6                    LD      (SAVTXT),HL
  1101  0815  3aaaf6                    LD      A,(AUTFLG)
  1102  0818  b7                        OR      A                       ; in auto linenumber mode ?
  1103  0819  2816                      JR      Z,J415F                 ; nope, skip auto linenumber
  1104  081b  2aabf6                    LD      HL,(AUTLIN)             ; current auto linenumber
  1105  081e  e5                        PUSH    HL
  1106  081f  cd0000                    CALL    C3412                   ; number to interpreter output
  1107  0822  d1                        POP     DE
  1108  0823  d5                        PUSH    DE
  1109  0824  cd6709                    CALL    C4295                   ; search linenumber
  1110  0827  3e2a                      LD      A,'*'
  1111  0829  3802                      JR      C,J415B                 ; found, existing line indicator
  1112  082b  3e20                      LD      A,' '                   ; not found, new line indicator
  1113  082d  df                J415B:  RST     OUTDO                   ; lineindicator to interpreter output
  1114  082e  32aaf6                    LD      (AUTFLG),A              ; save line exist status
  1115  0831  cd0000            J415F:  CALL    ISFLIO                  ; interpreter input/output device = file ?
  1116  0834  200c                      JR      NZ,J4170                ; yep,
  1117  0836  cd0000                    CALL    PINLIN                  ; get line from keyboard
  1118  0839  300a                      JR      NC,J4173                ; not aborted, continue
  1119  083b  af                        XOR     A
  1120  083c  32aaf6                    LD      (AUTFLG),A              ; quit auto linenumber mode
  1121  083f  c30608                    JP      J4134                   ; mainloop
  1122                          
  1123  0842  cd463a            J4170:  CALL    C7374                   ; get line from interpreter input file
  1124  0845  d7                J4173:  RST     CHRGTR                  ; get next BASIC character
  1125  0846  3c                        INC     A
  1126  0847  3d                        DEC     A                       ; empty line ?
  1127  0848  28bc                      JR      Z,J4134                 ; yep, restart mainloop
  1128  084a  f5                        PUSH    AF
  1129  084b  cd3b0e                    CALL    C4769                   ; collect linenumber
  1130  084e  3006                      JR      NC,J4184                ; linenumber ok,
  1131  0850  cd0000                    CALL    ISFLIO                  ; interpreter input/output device = file ?
  1132  0853  ca2707                    JP      Z,J4055                 ; nope, syntax error
  1133  0856  cde60b            J4184:  CALL    C4514                   ; skip space chars
  1134  0859  3aaaf6                    LD      A,(AUTFLG)
  1135  085c  b7                        OR      A                       ; in auto linenumber mode ?
  1136  085d  2808                      JR      Z,J4195                 ; nope, skip check
  1137  085f  fe2a                      CP      '*'                     ; existing linenumber ?
  1138  0861  2004                      JR      NZ,J4195                ; nope,
  1139  0863  be                        CP      (HL)                    ; yep, is this the '*' char ?
  1140  0864  2001                      JR      NZ,J4195
  1141  0866  23                        INC     HL                      ; yep, skip it
  1142  0867  7a                J4195:  LD      A,D
  1143  0868  b3                        OR      E
  1144  0869  2806                      JR      Z,J419F
  1145  086b  7e                        LD      A,(HL)
  1146  086c  fe20                      CP      ' '
  1147  086e  2001                      JR      NZ,J419F
  1148  0870  23                        INC     HL
  1149  0871  d5                J419F:  PUSH    DE
  1150  0872  cd8409                    CALL    C42B2                   ; encode BASIC line
  1151  0875  d1                        POP     DE
  1152  0876  f1                        POP     AF
  1153  0877  22aff6                    LD      (SAVTXT),HL
  1154  087a  cd11ff                    CALL    H_DIRD
  1155  087d  3807                      JR      C,J41B4
  1156  087f  af                        XOR     A
  1157  0880  32aaf6                    LD      (AUTFLG),A              ; quit auto linenumber mode
  1158  0883  c31a34                    JP      J6D48                   ; handle direct statement
  1159                          
  1160  0886  d5                J41B4:  PUSH    DE
  1161  0887  c5                        PUSH    BC
  1162  0888  d7                        RST     CHRGTR                  ; get next BASIC character
  1163  0889  b7                        OR      A
  1164  088a  f5                        PUSH    AF                      ; Zx set if empty line
  1165  088b  3aaaf6                    LD      A,(AUTFLG)
  1166  088e  a7                        AND     A                       ; in auto linenumber mode ?
  1167  088f  2803                      JR      Z,J41C2                 ; nope,
  1168  0891  f1                        POP     AF
  1169  0892  37                        SCF                             ; auto linenumber mode
  1170  0893  f5                        PUSH    AF
  1171  0894  ed53b5f6          J41C2:  LD      (DOT),DE
  1172  0898  2aadf6                    LD      HL,(AUTINC)
  1173  089b  19                        ADD     HL,DE                   ; new linenumber for auto linenumber mode
  1174  089c  380b                      JR      C,J41D7                 ; >65535, end auto line number mode
  1175  089e  d5                        PUSH    DE
  1176  089f  11faff                    LD      DE,65530
  1177  08a2  e7                        RST     DCOMPR
  1178  08a3  d1                        POP     DE                      ; new linenumber < 65530 ?
  1179  08a4  22abf6                    LD      (AUTLIN),HL             ; new auto linenumber
  1180  08a7  3804                      JR      C,J41DB                 ; yep, contine
  1181  08a9  af                J41D7:  XOR     A
  1182  08aa  32aaf6                    LD      (AUTFLG),A              ; quit auto linenumber mode
  1183  08ad  cd6709            J41DB:  CALL    C4295                   ; search linenumber
  1184  08b0  380d                      JR      C,C41ED                 ; found,
  1185  08b2  f1                        POP     AF
  1186  08b3  f5                        PUSH    AF
  1187  08b4  2006                      JR      NZ,J41EA                ; not found + non empty line,
  1188  08b6  d2ee0e                    JP      NC,J481C                ; not found + no auto + empty line, undefined line number error
  1189                                                                  ; not found + auto + empty, do nothing
  1190  08b9  c5                J41E7:  PUSH    BC
  1191  08ba  184d                      JR      J4237
  1192                          
  1193  08bc  b7                J41EA:  OR      A                       ; flag line addition
  1194  08bd  1807                      JR      J41F4
  1195                          
  1196  08bf  f1                C41ED:  POP     AF
  1197  08c0  f5                        PUSH    AF
  1198  08c1  2002                      JR      NZ,J41F3                ; found + non empty line, flag line removeable
  1199  08c3  38f4                      JR      C,J41E7                 ; found + auto + empty line, do nothing
  1200                                                                  ; found + no auto + empty line, flag line removeable
  1201  08c5  37                J41F3:  SCF
  1202  08c6  c5                J41F4:  PUSH    BC
  1203  08c7  f5                        PUSH    AF
  1204  08c8  e5                        PUSH    HL
  1205  08c9  cdbc1b                    CALL    C54EA                   ; convert to linepointers to linenumbers if needed
  1206  08cc  e1                        POP     HL
  1207  08cd  f1                        POP     AF
  1208  08ce  c1                        POP     BC
  1209  08cf  c5                        PUSH    BC
  1210  08d0  dcd71a                    CALL    C,C5405                 ; flag remove, remove line
  1211  08d3  d1                        POP     DE
  1212  08d4  f1                        POP     AF                      ; empty line ?
  1213  08d5  d5                        PUSH    DE
  1214  08d6  2831                      JR      Z,J4237                 ; yep, skip line adding
  1215  08d8  d1                        POP     DE
  1216  08d9  210000                    LD      HL,0
  1217  08dc  22b9f6                    LD      (ONELIN),HL             ; disable ERROR handler
  1218  08df  2ac2f6                    LD      HL,(VARTAB)
  1219  08e2  e3                        EX      (SP),HL
  1220  08e3  c1                        POP     BC
  1221  08e4  e5                        PUSH    HL
  1222  08e5  09                        ADD     HL,BC
  1223  08e6  e5                        PUSH    HL
  1224  08e7  cd2229                    CALL    C6250                   ; check for enough stackspace and move data
  1225  08ea  e1                        POP     HL
  1226  08eb  22c2f6                    LD      (VARTAB),HL
  1227  08ee  eb                        EX      DE,HL
  1228  08ef  74                        LD      (HL),H
  1229  08f0  c1                        POP     BC
  1230  08f1  d1                        POP     DE
  1231  08f2  e5                        PUSH    HL
  1232  08f3  23                        INC     HL
  1233  08f4  23                        INC     HL
  1234  08f5  73                        LD      (HL),E
  1235  08f6  23                        INC     HL
  1236  08f7  72                        LD      (HL),D
  1237  08f8  23                        INC     HL
  1238  08f9  111ff4                    LD      DE,KBUF
  1239  08fc  0b                        DEC     BC
  1240  08fd  0b                        DEC     BC
  1241  08fe  0b                        DEC     BC
  1242  08ff  0b                        DEC     BC
  1243  0900  1a                J422E:  LD      A,(DE)
  1244  0901  77                        LD      (HL),A
  1245  0902  23                        INC     HL
  1246  0903  13                        INC     DE
  1247  0904  0b                        DEC     BC
  1248  0905  79                        LD      A,C
  1249  0906  b0                        OR      B
  1250  0907  20f7                      JR      NZ,J422E
  1251  0909  cd16ff            J4237:  CALL    H_FINI
  1252  090c  d1                        POP     DE
  1253  090d  cd2909                    CALL    C4257                   ; setup BASIC linelinks from this point
  1254  0910  2a64f8                    LD      HL,(PTRFIL)
  1255  0913  22bcf6                    LD      (TEMP2),HL              ; save interpreter input/output device
  1256  0916  cd6c29                    CALL    C629A                   ; initialize interpreter, basic pointer at start of program
  1257  0919  cd1bff                    CALL    H_FINE
  1258  091c  2abcf6                    LD      HL,(TEMP2)
  1259  091f  2264f8                    LD      (PTRFIL),HL             ; restore interpreter input/output device
  1260  0922  c30608                    JP      J4134                   ; main loop
  1261                          
  1262                          ;       Subroutine      setup BASIC linelinks
  1263                          ;       Inputs          ________________________
  1264                          ;       Outputs         ________________________
  1265                          
  1266  0925  2a76f6            C4253:  LD      HL,(TXTTAB)
  1267  0928  eb                        EX      DE,HL
  1268                          
  1269                          ;       Subroutine      setup BASIC linelinks from this point
  1270                          ;       Inputs          ________________________
  1271                          ;       Outputs         ________________________
  1272                          
  1273  0929  62                C4257:  LD      H,D
  1274  092a  6b                        LD      L,E
  1275  092b  7e                        LD      A,(HL)
  1276  092c  23                        INC     HL
  1277  092d  b6                        OR      (HL)                    ; end of program ?
  1278  092e  c8                        RET     Z                       ; yep, quit
  1279  092f  23                        INC     HL
  1280  0930  23                        INC     HL                      ; skip over linenuber
  1281  0931  23                J425F:  INC     HL
  1282  0932  7e                        LD      A,(HL)
  1283  0933  b7                J4261:  OR      A                       ; end of BASIC line ?
  1284  0934  280e                      JR      Z,J4272                 ; yep, fill linelink
  1285  0936  fe20                      CP      $20                     ; character or non numeric token ?
  1286  0938  30f7                      JR      NC,J425F                ; yep, next
  1287  093a  fe0b                      CP      $B                     ; multi byte numeric token ?
  1288  093c  38f3                      JR      C,J425F                 ; nope, next
  1289  093e  cd3c0d                    CALL    C466A                   ; get BASIC character (numeric token)
  1290  0941  d7                        RST     CHRGTR                  ; get next BASIC character (get value)
  1291  0942  18ef                      JR      J4261
  1292                          
  1293  0944  23                J4272:  INC     HL
  1294  0945  eb                        EX      DE,HL
  1295  0946  73                        LD      (HL),E
  1296  0947  23                        INC     HL
  1297  0948  72                        LD      (HL),D
  1298  0949  18de                      JR      C4257                   ; next line
  1299                          
  1300                          ;       Subroutine      evaluate linenumber (range) and search start linenumber
  1301                          ;       Inputs          ________________________
  1302                          ;       Outputs         ________________________
  1303                          
  1304  094b  110000            C4279:  LD      DE,0                    ; default start linenumber = 0
  1305  094e  d5                        PUSH    DE
  1306  094f  2809                      JR      Z,J4288                 ; end of statement, skip start
  1307  0951  d1                        POP     DE
  1308  0952  cd310e                    CALL    C475F                   ; collect linenumber (with DOT supported)
  1309  0955  d5                        PUSH    DE                      ; save start linenumber
  1310  0956  280b                      JR      Z,J4291                 ; end of statement,
  1311  0958  cf                        RST     SYNCHR
  1312  0959  f2                        DEFB    $F2                    ; check for -
  1313  095a  11faff            J4288:  LD      DE,65530                ; default end linenumber = 65530
  1314  095d  c4310e                    CALL    NZ,C475F                ; not end of statement, collect linenumber (with DOT supported)
  1315  0960  c22707                    JP      NZ,J4055                ; not end of statement, syntax error
  1316  0963  eb                J4291:  EX      DE,HL
  1317  0964  d1                        POP     DE                      ; start linenumber
  1318                          
  1319                          ;       Subroutine      stack HL and search linenumber
  1320                          ;       Inputs          ________________________
  1321                          ;       Outputs         ________________________
  1322                          
  1323  0965  e3                C4293:  EX      (SP),HL
  1324  0966  e5                        PUSH    HL                      ; save end linenumber on stack
  1325                          
  1326                          ;       Subroutine      search linenumber
  1327                          ;       Inputs          DE = linenumber to search
  1328                          ;       Outputs         ________________________
  1329                          
  1330  0967  2a76f6            C4295:  LD      HL,(TXTTAB)             ; start of BASIC program
  1331                          
  1332                          ;       Subroutine      __________________________
  1333                          ;       Inputs          ________________________
  1334                          ;       Outputs         ________________________
  1335                          
  1336  096a  44                C4298:  LD      B,H
  1337  096b  4d                        LD      C,L                     ; save start of line
  1338  096c  7e                        LD      A,(HL)
  1339  096d  23                        INC     HL
  1340  096e  b6                        OR      (HL)                    ; endpointer ?
  1341  096f  2b                        DEC     HL
  1342  0970  c8                        RET     Z                       ; yep, quit
  1343  0971  23                        INC     HL
  1344  0972  23                        INC     HL
  1345  0973  7e                        LD      A,(HL)
  1346  0974  23                        INC     HL
  1347  0975  66                        LD      H,(HL)
  1348  0976  6f                        LD      L,A                     ; linenumber
  1349  0977  e7                        RST     DCOMPR                  ; compare with the one we search
  1350  0978  60                        LD      H,B
  1351  0979  69                        LD      L,C
  1352  097a  7e                        LD      A,(HL)
  1353  097b  23                        INC     HL
  1354  097c  66                        LD      H,(HL)
  1355  097d  6f                        LD      L,A                     ; start of next line
  1356  097e  3f                        CCF
  1357  097f  c8                        RET     Z                       ; exactly the
  1358  0980  3f                        CCF
  1359  0981  d0                        RET     NC
  1360  0982  18e6                      JR      C4298
  1361                          
  1362                          ;       Subroutine      encode BASIC line
  1363                          ;       Inputs          ________________________
  1364                          ;       Outputs         ________________________
  1365                          
  1366  0984  af                C42B2:  XOR     A
  1367  0985  3265f6                    LD      (DONUM),A               ; normal behavior numeric constant
  1368  0988  3264f6                    LD      (DORES),A               ; not in DATA statement
  1369  098b  cd20ff                    CALL    H_CRUN
  1370  098e  013b01                    LD      BC,315
  1371  0991  111ff4                    LD      DE,KBUF
  1372  0994  7e                J42C2:  LD      A,(HL)
  1373  0995  b7                        OR      A                       ; end of line ?
  1374  0996  2013                      JR      NZ,J42D9                ; nope,
  1375  0998  214001            J42C6:  LD      HL,320
  1376  099b  7d                        LD      A,L
  1377  099c  91                        SUB     C
  1378  099d  4f                        LD      C,A
  1379  099e  7c                        LD      A,H
  1380  099f  98                        SBC     A,B
  1381  09a0  47                        LD      B,A
  1382  09a1  211ef4                    LD      HL,KBFMIN               ; statement seperator, before KBUF
  1383  09a4  af                        XOR     A
  1384  09a5  12                        LD      (DE),A                  ; end of BASIC line
  1385  09a6  13                        INC     DE
  1386  09a7  12                        LD      (DE),A
  1387  09a8  13                        INC     DE
  1388  09a9  12                        LD      (DE),A                  ; pointer, end of BASIC program
  1389  09aa  c9                        RET
  1390                          
  1391  09ab  fe22              J42D9:  CP      '"'                     ; start of string ?
  1392  09ad  cae809                    JP      Z,J4316                 ; yep, put " in KBUF and all chars that follow until " or end of line reached
  1393  09b0  fe20                      CP      ' '                     ; space ?
  1394  09b2  2807                      JR      Z,J42E9                 ; yep, put in KBUF and continue
  1395  09b4  3a64f6                    LD      A,(DORES)
  1396  09b7  b7                        OR      A                       ; in DATA statement ?
  1397  09b8  7e                        LD      A,(HL)
  1398  09b9  283d                      JR      Z,J4326                 ; nope, normal behavior
  1399  09bb  23                J42E9:  INC     HL
  1400  09bc  f5                        PUSH    AF
  1401  09bd  fe01                      CP      $1                     ; MSX graphic char header ?
  1402  09bf  2004                      JR      NZ,J42F3                ; nope, put in KBUF
  1403  09c1  7e                        LD      A,(HL)
  1404  09c2  a7                        AND     A                       ; end of line ?
  1405  09c3  3e01                      LD      A,$1
  1406  09c5  c4b20b            J42F3:  CALL    NZ,C44E0                ; nope, put in KBUF
  1407  09c8  f1                        POP     AF
  1408  09c9  d63a                      SUB     ':'                     ; statement seperator ?
  1409  09cb  2806                      JR      Z,J4301                 ; yep, not in DATA statement and normal numeric behavior
  1410  09cd  fe4a                      CP      $84-':'                 ; DATA token ?
  1411  09cf  2008                      JR      NZ,J4307                ; nope, skip
  1412  09d1  3e01                      LD      A,1                     ; yep, set DATA statement flag, numeric to linenumber
  1413  09d3  3264f6            J4301:  LD      (DORES),A               ; in DATA statement
  1414  09d6  3265f6                    LD      (DONUM),A               ; numeric behavior
  1415  09d9  d655              J4307:  SUB     $8F-':'                 ; REM token ?
  1416  09db  20b7                      JR      NZ,J42C2                ; nope,
  1417  09dd  f5                        PUSH    AF                      ; no special end char
  1418  09de  7e                J430C:  LD      A,(HL)
  1419  09df  b7                        OR      A                       ; end of line ?
  1420  09e0  e3                        EX      (SP),HL
  1421  09e1  7c                        LD      A,H
  1422  09e2  e1                        POP     HL
  1423  09e3  28b3                      JR      Z,J42C6                 ; yep, stop encoding
  1424  09e5  be                        CP      (HL)
  1425  09e6  28d3                      JR      Z,J42E9                 ; yep, put in KBUF and continue
  1426  09e8  f5                J4316:  PUSH    AF
  1427  09e9  7e                        LD      A,(HL)
  1428  09ea  23                J4318:  INC     HL
  1429  09eb  fe01                      CP      $1                     ; MSX graphic char header ?
  1430  09ed  2004                      JR      NZ,J4321                ; nope, put in KBUF
  1431  09ef  7e                        LD      A,(HL)
  1432  09f0  a7                        AND     A                       ; end of line ?
  1433  09f1  3e01                      LD      A,$1
  1434  09f3  c4b20b            J4321:  CALL    NZ,C44E0                ; nope, put in KBUF
  1435  09f6  18e6                      JR      J430C
  1436                          
  1437  09f8  23                J4326:  INC     HL
  1438  09f9  b7                        OR      A                       ; $80-$FF ?
  1439  09fa  fa9409                    JP      M,J42C2                 ; yep, skip
  1440  09fd  fe01                      CP      $1                     ; MSX graphic char header ?
  1441  09ff  2007                      JR      NZ,J4336                ; nope,
  1442  0a01  7e                        LD      A,(HL)
  1443  0a02  a7                        AND     A                       ; end of line ?
  1444  0a03  2893                      JR      Z,J42C6                 ; yep, stop encoding
  1445  0a05  23                        INC     HL
  1446  0a06  188c                      JR      J42C2                   ; skip MSX graphic char
  1447                          
  1448  0a08  2b                J4336:  DEC     HL
  1449  0a09  fe3f                      CP      '?'                     ; short for PRINT ?
  1450  0a0b  3e91                      LD      A,$91                   ; PRINT token
  1451  0a0d  d5                        PUSH    DE
  1452  0a0e  c5                        PUSH    BC
  1453  0a0f  ca750a                    JP      Z,J43A3                 ; yep,
  1454  0a12  7e                        LD      A,(HL)
  1455  0a13  fe5f                      CP      '_'                     ; short for CALL ?
  1456  0a15  ca750a                    JP      Z,J43A3                 ; yep,
  1457  0a18  11f803                    LD      DE,I3D26                ; ??, useless instruction
  1458  0a1b  cd7b15                    CALL    C4EA9                   ; get char uppercase
  1459  0a1e  cd7a2b                    CALL    C64A8                   ; is upcase letter character ?
  1460  0a21  daef0a                    JP      C,J441D                 ; nope, not a keyword
  1461  0a24  e5                        PUSH    HL
  1462  0a25  cd25ff                    CALL    H_CRUS
  1463  0a28  211001                    LD      HL,I3A3E
  1464  0a2b  d641                      SUB     'A'
  1465  0a2d  87                        ADD     A,A
  1466  0a2e  4f                        LD      C,A
  1467  0a2f  0600                      LD      B,0
  1468  0a31  09                        ADD     HL,BC
  1469  0a32  5e                        LD      E,(HL)
  1470  0a33  23                        INC     HL
  1471  0a34  56                        LD      D,(HL)
  1472  0a35  e1                        POP     HL                      ; get pointer the keywords which start with the given letter
  1473  0a36  23                        INC     HL
  1474  0a37  e5                J4365:  PUSH    HL
  1475  0a38  cd7b15            J4366:  CALL    C4EA9                   ; get char uppercase
  1476  0a3b  4f                        LD      C,A
  1477  0a3c  1a                        LD      A,(DE)
  1478  0a3d  e67f                      AND     $7F                     ; end of the keyword list ?
  1479  0a3f  cabd0b                    JP      Z,J44EB                 ; yep, no keyword
  1480  0a42  23                        INC     HL
  1481  0a43  b9                        CP      C                       ; match ?
  1482  0a44  2024                      JR      NZ,J4398                ; no, next keyword
  1483  0a46  1a                        LD      A,(DE)
  1484  0a47  13                        INC     DE
  1485  0a48  b7                        OR      A                       ; end of keyword ?
  1486  0a49  f2380a                    JP      P,J4366                 ; nope, next char
  1487  0a4c  f1                        POP     AF                      ; remove pointer from stack
  1488  0a4d  1a                        LD      A,(DE)                  ; token
  1489  0a4e  cd2aff                    CALL    H_ISRE
  1490  0a51  b7                        OR      A                       ; function token ?
  1491  0a52  fa740a                    JP      M,J43A2                 ; nope,
  1492  0a55  c1                        POP     BC
  1493  0a56  d1                        POP     DE                      ; KBUF vars
  1494  0a57  f680                      OR      $80                     ; set b7
  1495  0a59  f5                        PUSH    AF
  1496  0a5a  3eff                      LD      A,$FF                  ; function token header
  1497  0a5c  cdb20b                    CALL    C44E0                   ; put in KBUF
  1498  0a5f  af                        XOR     A
  1499  0a60  3265f6                    LD      (DONUM),A               ; back to normal numeric behavior
  1500  0a63  f1                        POP     AF                      ; function token
  1501  0a64  cdb20b                    CALL    C44E0                   ; put in KBUF
  1502  0a67  c39409                    JP      J42C2                   ; next
  1503                          
  1504  0a6a  e1                J4398:  POP     HL
  1505  0a6b  1a                J4399:  LD      A,(DE)
  1506  0a6c  13                        INC     DE
  1507  0a6d  b7                        OR      A                       ; end of keyword ?
  1508  0a6e  f26b0a                    JP      P,J4399                 ; nope, skip next
  1509  0a71  13                        INC     DE
  1510  0a72  18c3                      JR      J4365                   ; try next keyword
  1511                          
  1512  0a74  2b                J43A2:  DEC     HL
  1513  0a75  f5                J43A3:  PUSH    AF
  1514  0a76  cd2fff                    CALL    H_NTFN
  1515  0a79  11870a                    LD      DE,I43B5                ; table tokens with linenumber as operand
  1516  0a7c  4f                        LD      C,A
  1517  0a7d  1a                J43AB:  LD      A,(DE)
  1518  0a7e  b7                        OR      A                       ; end of table ?
  1519  0a7f  2815                      JR      Z,J43C4                 ; yep, not a linenumber token
  1520  0a81  13                        INC     DE
  1521  0a82  b9                        CP      C                       ; match ?
  1522  0a83  20f8                      JR      NZ,J43AB                ; nope, next
  1523  0a85  1811                      JR      J43C6                   ; linenumber token
  1524                          
  1525                          ;       Table   tokens with linenumber as operand
  1526                          
  1527  0a87  8c                I43B5:  DEFB    $8C
  1528  0a88  a9                        DEFB    $A9
  1529  0a89  aa                        DEFB    $AA
  1530  0a8a  a8                        DEFB    $A8
  1531  0a8b  a7                        DEFB    $A7
  1532  0a8c  e1                        DEFB    $E1
  1533  0a8d  a1                        DEFB    $A1
  1534  0a8e  8a                        DEFB    $8A
  1535  0a8f  93                        DEFB    $93
  1536  0a90  9e                        DEFB    $9E
  1537  0a91  89                        DEFB    $89
  1538  0a92  8e                        DEFB    $8E
  1539  0a93  da                        DEFB    $DA
  1540  0a94  8d                        DEFB    $8D
  1541  0a95  00                        DEFB    0
  1542                          
  1543  0a96  af                J43C4:  XOR     A                       ; normal numeric behavior
  1544  0a97  c2                        DEFB    $C2                    ; JP NZ,xxxx (Skip next statement)
  1545  0a98  3e01              J43C6:  LD      A,1                     ; numeric is linenumber
  1546  0a9a  3265f6            J43C8:  LD      (DONUM),A
  1547  0a9d  f1                        POP     AF                      ; char/token
  1548  0a9e  c1                J43CC:  POP     BC
  1549  0a9f  d1                        POP     DE                      ; KBUF vars
  1550  0aa0  fea1                      CP      $A1                    ; ELSE token ?
  1551  0aa2  f5                        PUSH    AF
  1552  0aa3  ccb00b                    CALL    Z,C44DE                 ; yep, put statement seperator in KBUF
  1553  0aa6  f1                        POP     AF
  1554  0aa7  feca                      CP      $CA                    ; CALL token ?
  1555  0aa9  2804                      JR      Z,J43DD                 ; yep, put in KBUF
  1556  0aab  fe5f                      CP      '_'                     ; short for CALL ?
  1557  0aad  2029                      JR      NZ,J4406                ; nope, other
  1558  0aaf  d4b20b            J43DD:  CALL    NC,C44E0                ; yep, put in KBUF
  1559  0ab2  23                J43E0:  INC     HL
  1560  0ab3  cd7b15                    CALL    C4EA9                   ; get char uppercase
  1561  0ab6  a7                        AND     A                       ; end of line ?
  1562  0ab7  ca9809            J43E5:  JP      Z,J42C6                 ; yep, stop encoding
  1563  0aba  fab20a                    JP      M,J43E0                 ; $80-$FF, skip
  1564  0abd  fe01                      CP      $1                     ; MSX graphic char header ?
  1565  0abf  2007                      JR      NZ,J43F6                ; nope,
  1566  0ac1  23                        INC     HL
  1567  0ac2  7e                        LD      A,(HL)
  1568  0ac3  a7                        AND     A                       ; end of line ?
  1569  0ac4  28f1                      JR      Z,J43E5                 ; yep, stop encoding
  1570  0ac6  18ea                      JR      J43E0                   ; next
  1571                          
  1572  0ac8  fe20              J43F6:  CP      ' '                     ; space char ?
  1573  0aca  28e3                      JR      Z,J43DD                 ; yep, put in KBUF and continue
  1574  0acc  fe3a                      CP      ':'                     ; statement seperator ?
  1575  0ace  283c                      JR      Z,J443A                 ; yep, put in KBUF and continue
  1576  0ad0  fe28                      CP      '('                     ; start of a parenthesized operand ?
  1577  0ad2  2838                      JR      Z,J443A                 ; yep, put in KBUF and continue
  1578  0ad4  fe30                      CP      '0'                     ; $30-$7F ?
  1579  0ad6  18d7                      JR      J43DD                   ; yep, put in KBUF and continue else skip and continue
  1580                          
  1581  0ad8  fee6              J4406:  CP      $E6                    ; token for ' ?
  1582  0ada  c2860b                    JP      NZ,J44B4                ; nope, other
  1583  0add  f5                        PUSH    AF
  1584  0ade  cdb00b                    CALL    C44DE                   ; put statement seperator in KBUF
  1585  0ae1  3e8f                      LD      A,$8F                   ; REM token
  1586  0ae3  cdb20b                    CALL    C44E0                   ; put in KBUF
  1587  0ae6  f1                        POP     AF
  1588  0ae7  e5                        PUSH    HL
  1589  0ae8  210000                    LD      HL,0
  1590  0aeb  e3                        EX      (SP),HL                 ; no special end char
  1591  0aec  c3ea09                    JP      J4318                   ; put in REM token KBUF and all chars that follow until end of line is reached
  1592                          
  1593  0aef  7e                J441D:  LD      A,(HL)
  1594  0af0  fe2e                      CP      '.'
  1595  0af2  280a                      JR      Z,J442C
  1596  0af4  fe3a                      CP      '9'+1
  1597  0af6  d2740b                    JP      NC,J44A2                ; not numeric, check for 1 character tokens
  1598  0af9  fe30                      CP      '0'
  1599  0afb  da740b                    JP      C,J44A2                 ; not numeric, check for 1 character tokens
  1600  0afe  3a65f6            J442C:  LD      A,(DONUM)
  1601  0b01  b7                        OR      A
  1602  0b02  7e                        LD      A,(HL)
  1603  0b03  c1                        POP     BC
  1604  0b04  d1                        POP     DE
  1605  0b05  fabb09                    JP      M,J42E9                 ; no numeric conversion, put in KBUF and continue
  1606  0b08  281f                      JR      Z,J4457                 ; normal behavior
  1607  0b0a  fe2e                      CP      '.'
  1608  0b0c  cabb09            J443A:  JP      Z,J42E9                 ; put in KBUF and continue
  1609  0b0f  3e0e                      LD      A,$E                   ; linenumber token
  1610  0b11  cdb20b                    CALL    C44E0                   ; put in KBUF
  1611  0b14  d5                        PUSH    DE
  1612  0b15  cd3b0e                    CALL    C4769                   ; collect linenumber
  1613  0b18  cde60b                    CALL    C4514                   ; skip space chars
  1614  0b1b  e3                J4449:  EX      (SP),HL
  1615  0b1c  eb                        EX      DE,HL
  1616  0b1d  7d                J444B:  LD      A,L
  1617  0b1e  cdb20b                    CALL    C44E0                   ; put in KBUF
  1618  0b21  7c                        LD      A,H
  1619  0b22  e1                J4450:  POP     HL
  1620  0b23  cdb20b                    CALL    C44E0                   ; put in KBUF
  1621  0b26  c39409                    JP      J42C2                   ; next
  1622                          
  1623  0b29  d5                J4457:  PUSH    DE
  1624  0b2a  c5                        PUSH    BC
  1625  0b2b  7e                        LD      A,(HL)
  1626  0b2c  cd0000                    CALL    C3299                   ; convert text to number
  1627  0b2f  cde60b                    CALL    C4514                   ; skip space chars
  1628  0b32  c1                        POP     BC
  1629  0b33  d1                        POP     DE
  1630  0b34  e5                        PUSH    HL
  1631  0b35  3a63f6                    LD      A,(VALTYP)
  1632  0b38  fe02                      CP      2                       ; integer number ?
  1633  0b3a  2015                      JR      NZ,J447F                ; nope, put constant in KBUF
  1634  0b3c  2af8f7                    LD      HL,(DAC+2)
  1635  0b3f  7c                        LD      A,H
  1636  0b40  b7                        OR      A                       ; number 0-255 ?
  1637  0b41  3e02                      LD      A,2
  1638  0b43  200c                      JR      NZ,J447F                ; nope, put integer in KBUF
  1639  0b45  7d                        LD      A,L
  1640  0b46  65                        LD      H,L                     ; number
  1641  0b47  2e0f                      LD      L,$F                   ; token for numeric byte constant
  1642  0b49  fe0a                      CP      10                      ; number 0-9 ?
  1643  0b4b  30d0                      JR      NC,J444B                ; nope, put word in KBUF and continue
  1644  0b4d  c611                      ADD     A,$11                   ; tokens for numeric constant 0-9
  1645  0b4f  18d1                      JR      J4450                   ; put byte in KBUF and continue
  1646                          
  1647  0b51  f5                J447F:  PUSH    AF
  1648  0b52  0f                        RRCA
  1649  0b53  c61b                      ADD     A,$1B                   ; $1C for integer, $1D for single real, $1F for double real
  1650  0b55  cdb20b                    CALL    C44E0                   ; put in KBUF
  1651  0b58  21f6f7                    LD      HL,DAC
  1652  0b5b  3a63f6                    LD      A,(VALTYP)
  1653  0b5e  fe02                      CP      2
  1654  0b60  2003                      JR      NZ,J4493
  1655  0b62  21f8f7                    LD      HL,DAC+2
  1656  0b65  f1                J4493:  POP     AF
  1657  0b66  f5                J4494:  PUSH    AF
  1658  0b67  7e                        LD      A,(HL)
  1659  0b68  cdb20b                    CALL    C44E0                   ; put in KBUF
  1660  0b6b  f1                        POP     AF
  1661  0b6c  23                        INC     HL
  1662  0b6d  3d                        DEC     A
  1663  0b6e  20f6                      JR      NZ,J4494
  1664  0b70  e1                        POP     HL
  1665  0b71  c39409                    JP      J42C2                   ; next
  1666                          
  1667  0b74  11f703            J44A2:  LD      DE,I3D26-1              ; special 1 character tokens
  1668  0b77  13                J44A5:  INC     DE
  1669  0b78  1a                        LD      A,(DE)
  1670  0b79  e67f                      AND     $7F                     ; end of table ?
  1671  0b7b  cacc0b                    JP      Z,J44FA                 ; yep, others
  1672  0b7e  13                        INC     DE
  1673  0b7f  be                        CP      (HL)                    ; match ?
  1674  0b80  1a                        LD      A,(DE)
  1675  0b81  20f4                      JR      NZ,J44A5                ; nope, next
  1676  0b83  c3db0b                    JP      J4509                   ; yep,
  1677                          
  1678  0b86  fe26              J44B4:  CP      '&'                     ; header for other radix ?
  1679  0b88  c2bb09                    JP      NZ,J42E9                ; nope, put in KBUF and continue
  1680  0b8b  e5                        PUSH    HL
  1681  0b8c  d7                        RST     CHRGTR                  ; get next BASIC character (a bit strange but works)
  1682  0b8d  e1                        POP     HL
  1683  0b8e  cd7c15                    CALL    C4EAA                   ; upcase char
  1684  0b91  fe48                      CP      'H'                     ; hexadecimal ?
  1685  0b93  280d                      JR      Z,J44D0                 ; yep, put hexadecimal constant in KBUF
  1686  0b95  fe4f                      CP      'O'                     ; octal ?
  1687  0b97  2805                      JR      Z,J44CC                 ; yep, put octal constant in KBUF
  1688  0b99  3e26                      LD      A,'&'
  1689  0b9b  c3bb09                    JP      J42E9                   ; put '&' in KBUF and continue
  1690                          
  1691  0b9e  3e0b              J44CC:  LD      A,$B                   ; token for octal constant
  1692  0ba0  1802                      JR      J44D2
  1693                          
  1694  0ba2  3e0c              J44D0:  LD      A,$C                   ; token for hexadecimal constant
  1695  0ba4  cdb20b            J44D2:  CALL    C44E0                   ; put in KBUF
  1696  0ba7  d5                        PUSH    DE
  1697  0ba8  c5                        PUSH    BC
  1698  0ba9  cd8a15                    CALL    C4EB8                   ; convert text with radix indication to number
  1699  0bac  c1                        POP     BC
  1700  0bad  c31b0b                    JP      J4449                   ; put word on stack in KBUF
  1701                          
  1702                          ;       Subroutine      put statement seperator in KBUF
  1703                          ;       Inputs          ________________________
  1704                          ;       Outputs         ________________________
  1705                          
  1706  0bb0  3e3a              C44DE:  LD      A,':'
  1707                          
  1708                          ;       Subroutine      put in KBUF
  1709                          ;       Inputs          A = data
  1710                          ;       Outputs         ________________________
  1711                          
  1712  0bb2  12                C44E0:  LD      (DE),A
  1713  0bb3  13                        INC     DE
  1714  0bb4  0b                        DEC     BC
  1715  0bb5  79                        LD      A,C
  1716  0bb6  b0                        OR      B
  1717  0bb7  c0                        RET     NZ
  1718  0bb8  1e19                      LD      E,25
  1719  0bba  c34107                    JP      J406F                   ; line buffer overflow error
  1720                          
  1721  0bbd  cd34ff            J44EB:  CALL    H_NOTR
  1722  0bc0  e1                        POP     HL
  1723  0bc1  2b                        DEC     HL
  1724  0bc2  3d                        DEC     A
  1725  0bc3  3265f6                    LD      (DONUM),A               ; numeric not converted
  1726  0bc6  cd7b15                    CALL    C4EA9                   ; get char uppercase
  1727  0bc9  c39e0a                    JP      J43CC
  1728                          
  1729  0bcc  7e                J44FA:  LD      A,(HL)
  1730  0bcd  fe20                      CP      $20                     ; $20-$7F ?
  1731  0bcf  300a                      JR      NC,J4509                ; yep,
  1732  0bd1  fe09                      CP      $9                     ; TAB ?
  1733  0bd3  2806                      JR      Z,J4509                 ; yep,
  1734  0bd5  fe0a                      CP      $A                     ; LF ?
  1735  0bd7  2802                      JR      Z,J4509                 ; yep,
  1736  0bd9  3e20                      LD      A,' '                   ; others are replaced by a space
  1737  0bdb  f5                J4509:  PUSH    AF
  1738  0bdc  3a65f6                    LD      A,(DONUM)
  1739  0bdf  3c                        INC     A                       ; numeric not converted ?
  1740  0be0  2801                      JR      Z,J4511                 ; yep, back to normal numeric behavior
  1741  0be2  3d                        DEC     A                       ; numeric is not converted
  1742  0be3  c39a0a            J4511:  JP      J43C8
  1743                          
  1744                          
  1745                          ;       Subroutine      skip space chars
  1746                          ;       Inputs          ________________________
  1747                          ;       Outputs         ________________________
  1748                          
  1749  0be6  2b                C4514:  DEC     HL
  1750  0be7  7e                        LD      A,(HL)
  1751  0be8  fe20                      CP      ' '
  1752  0bea  28fa                      JR      Z,C4514
  1753  0bec  fe09                      CP      $9
  1754  0bee  28f6                      JR      Z,C4514
  1755  0bf0  fe0a                      CP      $A
  1756  0bf2  28f2                      JR      Z,C4514
  1757  0bf4  23                        INC     HL
  1758  0bf5  c9                        RET
  1759                          
  1760                          ;       Subroutine      FOR statement
  1761                          ;       Inputs          ________________________
  1762                          ;       Outputs         ________________________
  1763                          
  1764  0bf6  3e64              C4524:  LD      A,$64
  1765  0bf8  32a5f6                    LD      (SUBFLG),A              ; variable search flag = loopvariable
  1766  0bfb  cd520f                    CALL    C4880                   ; LET statement (initialize loopvariable)
  1767  0bfe  c1                        POP     BC
  1768  0bff  e5                        PUSH    HL
  1769  0c00  cd2d0f                    CALL    C485B                   ; skip to end of statement
  1770  0c03  22a1f6                    LD      (ENDFOR),HL
  1771  0c06  210200                    LD      HL,2
  1772  0c09  39                        ADD     HL,SP                   ; skip 1st word
  1773  0c0a  cdb806            J4538:  CALL    C3FE6                   ; search FOR block on stack
  1774  0c0d  2017                      JR      NZ,J4554                ; not found, continue
  1775  0c0f  09                        ADD     HL,BC                   ; to next block
  1776  0c10  d5                        PUSH    DE
  1777  0c11  2b                        DEC     HL
  1778  0c12  56                        LD      D,(HL)
  1779  0c13  2b                        DEC     HL
  1780  0c14  5e                        LD      E,(HL)                  ; ENDFOR address
  1781  0c15  23                        INC     HL
  1782  0c16  23                        INC     HL
  1783  0c17  e5                        PUSH    HL
  1784  0c18  2aa1f6                    LD      HL,(ENDFOR)
  1785  0c1b  e7                        RST     DCOMPR                  ; same as this ENDFOR ?
  1786  0c1c  e1                        POP     HL
  1787  0c1d  d1                        POP     DE
  1788  0c1e  20ea                      JR      NZ,J4538                ; nope, search next FOR block
  1789  0c20  d1                        POP     DE                      ; restore BASIC pointer
  1790  0c21  f9                        LD      SP,HL                   ; remove FOR blocks from stack
  1791  0c22  22b1f6                    LD      (SAVSTK),HL
  1792  0c25  0e                        DEFB    $0E                    ; skip next instruction
  1793  0c26  d1                J4554:  POP     DE
  1794  0c27  eb                        EX      DE,HL
  1795  0c28  0e0c                      LD      C,12
  1796  0c2a  cd3029                    CALL    C625E                   ; check if enough stackspace for 12 words
  1797  0c2d  e5                        PUSH    HL
  1798  0c2e  2aa1f6                    LD      HL,(ENDFOR)
  1799  0c31  e3                        EX      (SP),HL
  1800  0c32  e5                        PUSH    HL
  1801  0c33  2a1cf4                    LD      HL,(CURLIN)
  1802  0c36  e3                        EX      (SP),HL
  1803  0c37  cf                        RST     SYNCHR
  1804  0c38  d9                        DEFB    $D9                    ; check for TO
  1805  0c39  ef                        RST     GETYPR                  ; get DAC type
  1806  0c3a  ca3f07                    JP      Z,J406D                 ; string, type mismatch error
  1807  0c3d  f5                        PUSH    AF
  1808  0c3e  cd3613                    CALL    C4C64                   ; evaluate expression
  1809  0c41  f1                        POP     AF
  1810  0c42  e5                        PUSH    HL
  1811  0c43  3018                      JR      NC,J458B                ; loopvariable double real,
  1812  0c45  f2940c                    JP      P,J45C2                 ; loopvariable single real,
  1813  0c48  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  1814  0c4b  e3                        EX      (SP),HL
  1815  0c4c  110100                    LD      DE,1                    ; default STEP value is 1
  1816  0c4f  7e                        LD      A,(HL)
  1817  0c50  fedc                      CP      $DC                    ; STEP token ?
  1818  0c52  cce018                    CALL    Z,C520E                 ; yep, skip STEP token and evaluate integer operand
  1819  0c55  d5                        PUSH    DE
  1820  0c56  e5                        PUSH    HL
  1821  0c57  eb                        EX      DE,HL
  1822  0c58  cd0000                    CALL    C2EAB                   ; get sign of integer
  1823  0c5b  185d                      JR      J45E8                   ; push step value on stack and continue
  1824                          
  1825  0c5d  cd0000            J458B:  CALL    C303A                   ; convert DAC to double real
  1826  0c60  d1                        POP     DE
  1827  0c61  21f8ff                    LD      HL,-8
  1828  0c64  39                        ADD     HL,SP
  1829  0c65  f9                        LD      SP,HL
  1830  0c66  d5                        PUSH    DE
  1831  0c67  cd0000                    CALL    C2F10                   ; HL = DAC
  1832  0c6a  e1                        POP     HL
  1833  0c6b  7e                        LD      A,(HL)
  1834  0c6c  fedc                      CP      $DC                    ; STEP token ?
  1835  0c6e  110000                    LD      DE,I2D1B                ; 1.0 double real
  1836  0c71  3e01                      LD      A,1                     ; sign is positive
  1837  0c73  200f                      JR      NZ,J45B2                ; nope, use 1.0 as STEP value
  1838  0c75  d7                        RST     CHRGTR                  ; get next BASIC character
  1839  0c76  cd3613                    CALL    C4C64                   ; evaluate expression
  1840  0c79  e5                        PUSH    HL
  1841  0c7a  cd0000                    CALL    C303A                   ; convert DAC to double real
  1842  0c7d  cd0000                    CALL    C2E71                   ; get sign DAC
  1843  0c80  11f6f7                    LD      DE,DAC
  1844  0c83  e1                        POP     HL
  1845  0c84  44                J45B2:  LD      B,H
  1846  0c85  4d                        LD      C,L
  1847  0c86  21f8ff                    LD      HL,-8
  1848  0c89  39                        ADD     HL,SP
  1849  0c8a  f9                        LD      SP,HL
  1850  0c8b  f5                        PUSH    AF
  1851  0c8c  c5                        PUSH    BC
  1852  0c8d  cd0000                    CALL    C2EF3                   ; HL = DE (valtyp)
  1853  0c90  e1                        POP     HL
  1854  0c91  f1                        POP     AF
  1855  0c92  182d                      JR      J45EF                   ; continue
  1856                          
  1857  0c94  cd0000            J45C2:  CALL    C2FB2                   ; convert DAC to single real
  1858  0c97  cd0000                    CALL    C2ECC                   ; DEBC = DAC (single)
  1859  0c9a  e1                        POP     HL
  1860  0c9b  c5                        PUSH    BC
  1861  0c9c  d5                        PUSH    DE
  1862  0c9d  014110                    LD      BC,$1041
  1863  0ca0  110000                    LD      DE,$0000                ; 1.0 single real
  1864  0ca3  cd39ff                    CALL    H_SNGF
  1865  0ca6  7e                        LD      A,(HL)
  1866  0ca7  fedc                      CP      $DC                    ; STEP token ?
  1867  0ca9  3e01                      LD      A,1                     ; sign is positive
  1868  0cab  200e                      JR      NZ,J45E9                ; nope, push step value on stack and continue
  1869  0cad  cd3713                    CALL    C4C65                   ; skip character and evaluate expression
  1870  0cb0  e5                        PUSH    HL
  1871  0cb1  cd0000                    CALL    C2FB2                   ; convert DAC to single real
  1872  0cb4  cd0000                    CALL    C2ECC                   ; DEBC = DAC (single real)
  1873  0cb7  cd0000                    CALL    C2E71                   ; get sign DAC
  1874  0cba  e1                J45E8:  POP     HL
  1875  0cbb  d5                J45E9:  PUSH    DE
  1876  0cbc  c5                        PUSH    BC
  1877  0cbd  c5                        PUSH    BC
  1878  0cbe  c5                        PUSH    BC
  1879  0cbf  c5                        PUSH    BC
  1880  0cc0  c5                        PUSH    BC
  1881  0cc1  b7                J45EF:  OR      A
  1882  0cc2  2002                      JR      NZ,J45F4
  1883  0cc4  3e02                      LD      A,2
  1884  0cc6  4f                J45F4:  LD      C,A
  1885  0cc7  ef                        RST     GETYPR                  ; get DAC type
  1886  0cc8  47                        LD      B,A                     ;
  1887  0cc9  c5                        PUSH    BC
  1888  0cca  e5                        PUSH    HL
  1889  0ccb  2aa7f6                    LD      HL,(TEMP)
  1890  0cce  e3                        EX      (SP),HL
  1891  0ccf  0682              J45FD:  LD      B,$82
  1892  0cd1  c5                        PUSH    BC
  1893  0cd2  33                        INC     SP
  1894                          
  1895                          ;       Subroutine      execute new statement
  1896                          ;       Inputs          ________________________
  1897                          ;       Outputs         ________________________
  1898                          
  1899  0cd3  cd3eff            C4601:  CALL    H_NEWS
  1900  0cd6  ed73b1f6                  LD      (SAVSTK),SP
  1901  0cda  cd0000                    CALL    ISCNTC                  ; check CTRL-STOP
  1902  0cdd  3ad8fb                    LD      A,(ONGSBF)
  1903  0ce0  b7                        OR      A                       ; trap occured ?
  1904  0ce1  c45b2a                    CALL    NZ,C6389                ; yep, handle trap
  1905  0ce4  fb                J4612:  EI
  1906  0ce5  22aff6                    LD      (SAVTXT),HL
  1907  0ce8  7e                        LD      A,(HL)
  1908  0ce9  fe3a                      CP      ':'
  1909  0ceb  2825                      JR      Z,J4640                 ; statement seperator, skip new line stuff
  1910  0ced  b7                        OR      A
  1911  0cee  c22707                    JP      NZ,J4055                ; spurious text after statement, syntax error
  1912  0cf1  23                        INC     HL
  1913  0cf2  7e                J4620:  LD      A,(HL)
  1914  0cf3  23                        INC     HL
  1915  0cf4  b6                        OR      (HL)                    ; end of basictext ?
  1916  0cf5  ca0b07                    JP      Z,J4039                 ; yep, at end of BASIC program
  1917  0cf8  23                        INC     HL
  1918  0cf9  5e                        LD      E,(HL)
  1919  0cfa  23                        INC     HL
  1920  0cfb  56                        LD      D,(HL)                  ; linenumber
  1921  0cfc  eb                        EX      DE,HL
  1922  0cfd  221cf4                    LD      (CURLIN),HL             ; update current linenumber
  1923  0d00  3ac4f7                    LD      A,(TRCFLG)
  1924  0d03  b7                        OR      A                       ; trace mode ?
  1925  0d04  280b                      JR      Z,J463F                 ; skip trace
  1926  0d06  d5                        PUSH    DE
  1927  0d07  3e5b                      LD      A,'['
  1928  0d09  df                        RST     OUTDO                   ; '[' to interpreter output
  1929  0d0a  cd0000                    CALL    C3412                   ; number to interpreter output
  1930  0d0d  3e5d                      LD      A,']'
  1931  0d0f  df                        RST     OUTDO                   ; ']' to interpreter output
  1932  0d10  d1                        POP     DE
  1933  0d11  eb                J463F:  EX      DE,HL
  1934  0d12  d7                J4640:  RST     CHRGTR                  ; get next BASIC character
  1935  0d13  11d30c                    LD      DE,C4601
  1936  0d16  d5                        PUSH    DE
  1937  0d17  c8                        RET     Z                       ; end of BASIC line, execute new statement
  1938  0d18  cd43ff            J4646:  CALL    H_GONE
  1939  0d1b  fe5f                      CP      '_'                     ; CALL ?
  1940  0d1d  ca791c                    JP      Z,J55A7                 ; yep, execute CALL statement
  1941  0d20  d681                      SUB     $81                     ; statement token ? ($81-$D8)
  1942  0d22  da520f                    JP      C,C4880                 ; nope, LET statement
  1943  0d25  fe58                      CP      $D9-$81               ; valid statement token ?
  1944  0d27  d27f18                    JP      NC,J51AD                ; nope, check if function token allowed as statement
  1945  0d2a  07                        RLCA
  1946  0d2b  4f                        LD      C,A
  1947  0d2c  0600                      LD      B,0
  1948  0d2e  eb                        EX      DE,HL
  1949  0d2f  210000                    LD      HL,I392E
  1950  0d32  09                        ADD     HL,BC
  1951  0d33  4e                        LD      C,(HL)
  1952  0d34  23                        INC     HL
  1953  0d35  46                        LD      B,(HL)
  1954  0d36  c5                        PUSH    BC                      ; execute statement after this
  1955  0d37  eb                        EX      DE,HL
  1956                          
  1957                          ;       Subroutine      CHRGTR (get next BASIC char)
  1958                          ;       Inputs          ________________________
  1959                          ;       Outputs         ________________________
  1960                          
  1961  0d38  cd48ff            C4666:  CALL    H_CHRG
  1962  0d3b  23                        INC     HL
  1963                          
  1964                          ;       Subroutine      get BASIC char
  1965                          ;       Inputs          ________________________
  1966                          ;       Outputs         ________________________
  1967                          
  1968  0d3c  7e                C466A:  LD      A,(HL)
  1969  0d3d  fe3a                      CP      $3A                     ; $3A-$FF, quit with Cx reset. Zx set if statement seperator
  1970  0d3f  d0                        RET     NC
  1971  0d40  fe20                      CP      ' '                     ; SPACE ?
  1972  0d42  28f4                      JR      Z,C4666                 ; yep, skip
  1973  0d44  306c                      JR      NC,J46E0                ; $21-$39,
  1974  0d46  b7                        OR      A                       ; end of BASIC line ?
  1975  0d47  c8                        RET     Z                       ; yep, quit with Cx reset, Zx set
  1976  0d48  fe0b                      CP      $B                     ; $1-$A ?
  1977  0d4a  3861                      JR      C,J46DB
  1978  0d4c  fe1e                      CP      $1E                     ; $1E token ?
  1979  0d4e  2005                      JR      NZ,J4683                ; nope,
  1980  0d50  3a68f6                    LD      A,(CONSAV)
  1981  0d53  b7                        OR      A                       ; yep, orginal numeric token
  1982  0d54  c9                        RET
  1983                          
  1984  0d55  fe10              J4683:  CP      $10                     ; $10 token ?
  1985  0d57  2834                      JR      Z,J46BB                 ; yep, return to orginal BASIC pointer
  1986  0d59  f5                        PUSH    AF                      ; save numeric token
  1987  0d5a  23                        INC     HL
  1988  0d5b  3268f6                    LD      (CONSAV),A              ; save token
  1989  0d5e  d61c                      SUB     $1C                     ; $1C, $1D or $1F token ?
  1990  0d60  3030                      JR      NC,J46C0                ; yep, numeric constant
  1991  0d62  d6f5                      SUB     $11-$1C                 ; $11-$1B token ?
  1992  0d64  3006                      JR      NC,J469A                ; yep, numeric constant 0-10
  1993  0d66  fefe                      CP      $FE                    ; $F token ?
  1994  0d68  2016                      JR      NZ,J46AE                ; nope, token $B,$C,$D or $E, numeric word constant
  1995  0d6a  7e                        LD      A,(HL)                  ; yep, get byte constant
  1996  0d6b  23                        INC     HL
  1997  0d6c  2266f6            J469A:  LD      (CONTXT),HL             ; where BASIC pointer continues
  1998  0d6f  2600                      LD      H,0                     ; clear highbyte
  1999  0d71  6f                J469F:  LD      L,A
  2000  0d72  226af6                    LD      (CONLO),HL              ; save constant
  2001  0d75  3e02                      LD      A,2
  2002  0d77  3269f6                    LD      (CONTYP),A              ; integer type
  2003  0d7a  21b80d                    LD      HL,I46E6                ; special internal token sequence
  2004  0d7d  f1                        POP     AF                      ; restore numeric token
  2005  0d7e  b7                        OR      A                       ; Cx reset, Zx reset
  2006  0d7f  c9                        RET
  2007                          
  2008  0d80  7e                J46AE:  LD      A,(HL)                  ; get lowbyte constant
  2009  0d81  23                        INC     HL
  2010  0d82  23                        INC     HL
  2011  0d83  2266f6                    LD      (CONTXT),HL             ; where BASIC pointer continues
  2012  0d86  2b                        DEC     HL
  2013  0d87  66                        LD      H,(HL)                  ; get highbyte constant
  2014  0d88  18e7                      JR      J469F                   ; save constant
  2015                          
  2016  0d8a  cdba0d            J46B8:  CALL    C46E8                   ; get numeric constant (in DAC)
  2017  0d8d  2a66f6            J46BB:  LD      HL,(CONTXT)             ; restore BASIC pointer
  2018  0d90  18aa                      JR      C466A                   ; get BASIC character
  2019                          
  2020  0d92  3c                J46C0:  INC     A                       ; 1,2 or 4
  2021  0d93  07                        RLCA                            ; 2,4 or 8
  2022  0d94  3269f6                    LD      (CONTYP),A              ; type
  2023  0d97  d5                        PUSH    DE
  2024  0d98  c5                        PUSH    BC
  2025  0d99  116af6                    LD      DE,CONLO
  2026  0d9c  eb                        EX      DE,HL
  2027  0d9d  47                        LD      B,A
  2028  0d9e  cd0000                    CALL    C2EF7
  2029  0da1  eb                        EX      DE,HL
  2030  0da2  c1                        POP     BC
  2031  0da3  d1                        POP     DE                      ; copy to CONLO
  2032  0da4  2266f6                    LD      (CONTXT),HL             ; where BASIC pointer continues
  2033  0da7  f1                        POP     AF
  2034  0da8  21b80d                    LD      HL,I46E6                ; special internal token sequence
  2035  0dab  b7                        OR      A                       ; Cx reset, Zx reset
  2036  0dac  c9                        RET
  2037                          
  2038  0dad  fe09              J46DB:  CP      $9                     ; $9 or $A ?
  2039  0daf  d2380d                    JP      NC,C4666                ; yep, skip
  2040  0db2  fe30              J46E0:  CP      '0'
  2041  0db4  3f                        CCF                             ; Cx set if digit
  2042  0db5  3c                        INC     A
  2043  0db6  3d                        DEC     A                       ; Zx reset
  2044  0db7  c9                        RET
  2045                          
  2046  0db8  1e                I46E6:  DEFB    $1E                    ; internal token for returning the orginal numeric token
  2047  0db9  10                        DEFB    $10                    ; resume BASIC pointer
  2048                          
  2049                          ;       Subroutine      get numeric constant (in DAC)
  2050                          ;       Inputs          ________________________
  2051                          ;       Outputs         ________________________
  2052                          
  2053  0dba  3a68f6            C46E8:  LD      A,(CONSAV)
  2054  0dbd  fe0f                      CP      $F                     ; numeric tokens $F,$11-$1B,$1A,$1B,$1C,$1D,$1F ?
  2055  0dbf  3013                      JR      NC,J4702                ; yep,
  2056  0dc1  fe0d                      CP      $D                     ; numeric tokens $B,$C ?
  2057  0dc3  380f                      JR      C,J4702                 ; yep,
  2058  0dc5  2a6af6                    LD      HL,(CONLO)              ; linenumber/linepointer
  2059  0dc8  2007                      JR      NZ,J46FF                ; numeric token $E, linenumber
  2060  0dca  23                        INC     HL
  2061  0dcb  23                        INC     HL
  2062  0dcc  23                        INC     HL
  2063  0dcd  5e                        LD      E,(HL)
  2064  0dce  23                        INC     HL
  2065  0dcf  56                        LD      D,(HL)
  2066  0dd0  eb                        EX      DE,HL                   ; linenumber
  2067  0dd1  c30000            J46FF:  JP      C3236                   ; convert unsigned integer to single real
  2068                          
  2069  0dd4  3a69f6            J4702:  LD      A,(CONTYP)
  2070  0dd7  3263f6                    LD      (VALTYP),A
  2071  0dda  fe02                      CP      2
  2072  0ddc  2006                      JR      NZ,J4712
  2073  0dde  2a6af6                    LD      HL,(CONLO)
  2074  0de1  22f8f7                    LD      (DAC+2),HL
  2075  0de4  216af6            J4712:  LD      HL,CONLO
  2076  0de7  c30000                    JP      C2F08                   ; DAC = CONLO
  2077                          
  2078                          ;       Subroutine      DEFSTR statement
  2079                          ;       Inputs          ________________________
  2080                          ;       Outputs         ________________________
  2081                          
  2082  0dea  1e03              C4718:  LD      E,3                     ; string
  2083  0dec  01                        DEFB    $1
  2084                          
  2085                          ;       Subroutine      DEFINT statement
  2086                          ;       Inputs          ________________________
  2087                          ;       Outputs         ________________________
  2088                          
  2089  0ded  1e02              C471B:  LD      E,2                     ; integer
  2090  0def  01                        DEFB    $1
  2091                          
  2092                          ;       Subroutine      DEFSNG statement
  2093                          ;       Inputs          ________________________
  2094                          ;       Outputs         ________________________
  2095                          
  2096  0df0  1e04              C471E:  LD      E,4                     ; single real
  2097  0df2  01                        DEFB    $1
  2098                          
  2099                          ;       Subroutine      DEFDBL statement
  2100                          ;       Inputs          ________________________
  2101                          ;       Outputs         ________________________
  2102                          
  2103  0df3  1e08              C4721:  LD      E,8                     ; double real
  2104  0df5  cd792b            J4723:  CALL    C64A7                   ; is current BASIC character a upcase letter ?
  2105  0df8  012707                    LD      BC,J4055
  2106  0dfb  c5                        PUSH    BC
  2107  0dfc  d8                        RET     C                       ; nope, syntax error
  2108  0dfd  d641                      SUB     'A'
  2109  0dff  4f                        LD      C,A
  2110  0e00  47                        LD      B,A
  2111  0e01  d7                        RST     CHRGTR                  ; get next BASIC character (upcase letter)
  2112  0e02  fef2                      CP      $F2                    ; - token ?
  2113  0e04  2009                      JR      NZ,J473D                ; nope,
  2114  0e06  d7                        RST     CHRGTR                  ; get next BASIC character (- token)
  2115  0e07  cd792b                    CALL    C64A7                   ; is current BASIC character a upcase letter ?
  2116  0e0a  d8                        RET     C                       ; nope, syntax error
  2117  0e0b  d641                      SUB     'A'
  2118  0e0d  47                        LD      B,A
  2119  0e0e  d7                        RST     CHRGTR                  ; get next BASIC character (upcase letter)
  2120  0e0f  78                J473D:  LD      A,B
  2121  0e10  91                        SUB     C                       ; postive range ?
  2122  0e11  d8                        RET     C                       ; nope, syntax error
  2123  0e12  3c                        INC     A
  2124  0e13  e3                        EX      (SP),HL                 ; save BASIC pointer (and remove syntax error address)
  2125  0e14  21caf6                    LD      HL,DEFTBL
  2126  0e17  0600                      LD      B,0
  2127  0e19  09                        ADD     HL,BC                   ; to start letter
  2128  0e1a  73                J4748:  LD      (HL),E                  ; default variabele type
  2129  0e1b  23                        INC     HL
  2130  0e1c  3d                        DEC     A
  2131  0e1d  20fb                      JR      NZ,J4748                ; next
  2132  0e1f  e1                        POP     HL                      ; restore BASIC pointer
  2133  0e20  7e                        LD      A,(HL)
  2134  0e21  fe2c                      CP      ','                     ; an other range follows ?
  2135  0e23  c0                        RET     NZ                      ; nope, quit
  2136  0e24  d7                        RST     CHRGTR                  ; get next BASIC character (, char)
  2137  0e25  18ce                      JR      J4723                   ; next range
  2138                          
  2139                          
  2140                          ;       Subroutine      skip basic char, evaluate word operand and check for 0-32767 range
  2141                          ;       Inputs          ________________________
  2142                          ;       Outputs         ________________________
  2143                          
  2144  0e27  d7                C4755:  RST     CHRGTR                  ; get next BASIC character
  2145                          
  2146                          ;       Subroutine      evaluate word operand and check for 0-32767 range
  2147                          ;       Inputs          ________________________
  2148                          ;       Outputs         ________________________
  2149                          
  2150  0e28  cde118            C4756:  CALL    C520F                   ; evaluate integer operand
  2151  0e2b  f0                        RET     P
  2152                          
  2153                          ;       Subroutine      illegal function call
  2154                          ;       Inputs          ________________________
  2155                          ;       Outputs         ________________________
  2156                          
  2157  0e2c  1e05              C475A:  LD      E,5
  2158  0e2e  c34107                    JP      J406F                   ; illegal function call
  2159                          
  2160                          ;       Subroutine      collect linenumber (with DOT supported)
  2161                          ;       Inputs          ________________________
  2162                          ;       Outputs         ________________________
  2163                          
  2164  0e31  7e                C475F:  LD      A,(HL)
  2165  0e32  fe2e                      CP      '.'
  2166  0e34  ed5bb5f6                  LD      DE,(DOT)
  2167  0e38  ca380d                    JP      Z,C4666                 ; get next BASIC character and quit
  2168                          
  2169                          ;       Subroutine      collect linenumber
  2170                          ;       Inputs          ________________________
  2171                          ;       Outputs         ________________________
  2172                          
  2173  0e3b  2b                C4769:  DEC     HL
  2174                          
  2175                          ;       Subroutine      collect linenumber
  2176                          ;       Inputs          ________________________
  2177                          ;       Outputs         ________________________
  2178                          
  2179  0e3c  d7                C476A:  RST     CHRGTR                  ; get next BASIC character
  2180  0e3d  fe0e                      CP      $E                     ; linenumber token ?
  2181  0e3f  2802                      JR      Z,C4771                 ; yep,
  2182  0e41  fe0d                      CP      $D                     ; linepointer token ?
  2183                          
  2184                          ;       Subroutine      get linenumber
  2185                          ;       Inputs          ________________________
  2186                          ;       Outputs         ________________________
  2187                          
  2188  0e43  ed5b6af6          C4771:  LD      DE,(CONLO)
  2189  0e47  ca380d                    JP      Z,C4666                 ; yep, get next BASIC character
  2190  0e4a  af                        XOR     A
  2191  0e4b  3268f6                    LD      (CONSAV),A
  2192  0e4e  110000                    LD      DE,0
  2193  0e51  2b                        DEC     HL
  2194  0e52  d7                J4780:  RST     CHRGTR                  ; get next BASIC character
  2195  0e53  d0                        RET     NC
  2196  0e54  e5                        PUSH    HL
  2197  0e55  f5                        PUSH    AF
  2198  0e56  219819                    LD      HL,6552
  2199  0e59  e7                        RST     DCOMPR
  2200  0e5a  3811                      JR      C,J479B
  2201  0e5c  62                        LD      H,D
  2202  0e5d  6b                        LD      L,E
  2203  0e5e  19                        ADD     HL,DE
  2204  0e5f  29                        ADD     HL,HL
  2205  0e60  19                        ADD     HL,DE
  2206  0e61  29                        ADD     HL,HL
  2207  0e62  f1                        POP     AF
  2208  0e63  d630                      SUB     $30
  2209  0e65  5f                        LD      E,A
  2210  0e66  1600                      LD      D,0
  2211  0e68  19                        ADD     HL,DE
  2212  0e69  eb                        EX      DE,HL
  2213  0e6a  e1                        POP     HL
  2214  0e6b  18e5                      JR      J4780
  2215                          
  2216  0e6d  f1                J479B:  POP     AF
  2217  0e6e  e1                        POP     HL
  2218  0e6f  c9                        RET
  2219                          
  2220                          ;       Subroutine      RUN statement
  2221                          ;       Inputs          ________________________
  2222                          ;       Outputs         ________________________
  2223                          
  2224                          
  2225  0e70  ca6c29            C479E:  JP      Z,C629A                 ; end of statement, initialize interpreter, basic pointer at start of program and quit (which start the program!)
  2226  0e73  fe0e                      CP      $E                     ; linenumber token ?
  2227  0e75  2805                      JR      Z,J47AA                 ; yep, RUN line
  2228  0e77  fe0d                      CP      $D                     ; linepointer token ?
  2229  0e79  c22d32                    JP      NZ,J6B5B                ; nope, RUN file
  2230  0e7c  cd7329            J47AA:  CALL    C62A1                   ; initialize interpreter
  2231  0e7f  01d30c                    LD      BC,C4601
  2232  0e82  1835                      JR      J47E7                   ; execute GOTO statement, after that execute new statement
  2233                          
  2234                          ;       Subroutine      GOSUB statement
  2235                          ;       Inputs          ________________________
  2236                          ;       Outputs         ________________________
  2237                          
  2238  0e84  0e03              C47B2:  LD      C,3
  2239  0e86  cd3029                    CALL    C625E                   ; check if enough stackspace for 3 words
  2240  0e89  cd3b0e                    CALL    C4769                   ; collect linenumber
  2241  0e8c  c1                        POP     BC
  2242  0e8d  e5                        PUSH    HL                      ; save current BASIC pointer
  2243  0e8e  e5                        PUSH    HL
  2244  0e8f  2a1cf4                    LD      HL,(CURLIN)
  2245  0e92  e3                        EX      (SP),HL                 ; save current linenumber
  2246  0e93  010000                    LD      BC,0
  2247  0e96  c5                        PUSH    BC                      ; 0, not a trapentry
  2248  0e97  01d30c                    LD      BC,C4601
  2249  0e9a  3e8d                      LD      A,$8D
  2250  0e9c  f5                        PUSH    AF
  2251  0e9d  33                        INC     SP                      ; GOSUB parameter block
  2252  0e9e  c5                        PUSH    BC                      ; after this, execute new statement
  2253  0e9f  181c                      JR      C47EB                   ; goto linenumber
  2254                          
  2255                          ;       Subroutine      GOSUB traphandler
  2256                          ;       Inputs          ________________________
  2257                          ;       Outputs         ________________________
  2258                          
  2259  0ea1  e5                J47CF:  PUSH    HL                      ; save current BASIC pointer
  2260  0ea2  e5                        PUSH    HL
  2261  0ea3  2a1cf4                    LD      HL,(CURLIN)
  2262  0ea6  e3                        EX      (SP),HL                 ; save current linenumber
  2263  0ea7  c5                        PUSH    BC                      ; save trapentry
  2264  0ea8  3e8d                      LD      A,$8D
  2265  0eaa  f5                        PUSH    AF
  2266  0eab  33                        INC     SP                      ; GOSUB parameter block
  2267  0eac  eb                        EX      DE,HL
  2268  0ead  2b                        DEC     HL
  2269  0eae  22aff6                    LD      (SAVTXT),HL             ; start of traphandler as start for CONT
  2270  0eb1  23                        INC     HL
  2271  0eb2  ed73b1f6                  LD      (SAVSTK),SP             ; current stackpointer
  2272  0eb6  c3f20c                    JP      J4620                   ; start executing traphandler
  2273                          
  2274  0eb9  c5                J47E7:  PUSH    BC
  2275                          
  2276                          ;       Subroutine      GOTO statement
  2277                          ;       Inputs          ________________________
  2278                          ;       Outputs         ________________________
  2279                          
  2280  0eba  cd3b0e            C47E8:  CALL    C4769                   ; collect linenumber
  2281                          
  2282                          ;       Subroutine      goto linenumber
  2283                          ;       Inputs          ________________________
  2284                          ;       Outputs         ________________________
  2285                          
  2286  0ebd  3a68f6            C47EB:  LD      A,(CONSAV)
  2287  0ec0  fe0d                      CP      $D                     ; linepointer token ?
  2288  0ec2  eb                        EX      DE,HL
  2289  0ec3  c8                        RET     Z                       ; yep, quit
  2290  0ec4  fe0e                      CP      $E                     ; linenumber token ?
  2291  0ec6  c22707                    JP      NZ,J4055                ; nope, syntax error
  2292  0ec9  eb                        EX      DE,HL
  2293  0eca  e5                        PUSH    HL
  2294  0ecb  2a66f6                    LD      HL,(CONTXT)
  2295  0ece  e3                        EX      (SP),HL
  2296  0ecf  cd2f0f                    CALL    C485D                   ; skip to end of BASIC line
  2297  0ed2  23                        INC     HL
  2298  0ed3  e5                        PUSH    HL
  2299  0ed4  2a1cf4                    LD      HL,(CURLIN)
  2300  0ed7  e7                        RST     DCOMPR
  2301  0ed8  e1                        POP     HL
  2302  0ed9  dc6a09                    CALL    C,C4298
  2303  0edc  d46709                    CALL    NC,C4295                ; nope, search linenumber
  2304  0edf  300d                      JR      NC,J481C                ; not found, undefined line number error
  2305  0ee1  0b                        DEC     BC
  2306  0ee2  3e0d                      LD      A,$D
  2307  0ee4  32a9f6                    LD      (PTRFLG),A
  2308  0ee7  e1                        POP     HL
  2309  0ee8  cd551c                    CALL    C5583
  2310  0eeb  60                        LD      H,B
  2311  0eec  69                        LD      L,C
  2312  0eed  c9                        RET
  2313                          
  2314  0eee  1e08              J481C:  LD      E,8
  2315  0ef0  c34107                    JP      J406F                   ; undefined line number error
  2316                          
  2317                          ;       Subroutine      RETURN statement
  2318                          ;       Inputs          ________________________
  2319                          ;       Outputs         ________________________
  2320                          
  2321  0ef3  cd4dff            C4821:  CALL    H_RETU                  ; hook start return statement
  2322  0ef6  22a7f6                    LD      (TEMP),HL
  2323  0ef9  16ff                      LD      D,$FF                  ; DE=0FFxxH (impossible loop variable address)
  2324  0efb  cdb406                    CALL    C3FE2                   ; search FOR block on stack (skip 2 words)
  2325  0efe  fe8d                      CP      $8D                     ; search stopped by a GOSUB block ?
  2326  0f00  2801                      JR      Z,J4831                 ; yep,
  2327  0f02  2b                        DEC     HL
  2328  0f03  f9                J4831:  LD      SP,HL
  2329  0f04  22b1f6                    LD      (SAVSTK),HL
  2330  0f07  1e03                      LD      E,3
  2331  0f09  c24107                    JP      NZ,J406F                ; nope, return without gosub error
  2332  0f0c  e1                        POP     HL
  2333  0f0d  7c                        LD      A,H
  2334  0f0e  b5                        OR      L                       ; return from trap handler ?
  2335  0f0f  2806                      JR      Z,J4845                 ; nope,
  2336  0f11  7e                        LD      A,(HL)
  2337  0f12  e601                      AND     $1                     ; trap enabled ?
  2338  0f14  c4102a                    CALL    NZ,C633E                ; yep, unpause trap
  2339  0f17  c1                J4845:  POP     BC
  2340  0f18  21d30c                    LD      HL,C4601
  2341  0f1b  e3                        EX      (SP),HL                 ; after this, execute new statement
  2342  0f1c  eb                        EX      DE,HL
  2343  0f1d  2aa7f6                    LD      HL,(TEMP)
  2344  0f20  2b                        DEC     HL
  2345  0f21  d7                        RST     CHRGTR                  ; get next BASIC character
  2346  0f22  c2ba0e                    JP      NZ,C47E8                ; not end of statement, goto statement
  2347  0f25  60                        LD      H,B
  2348  0f26  69                        LD      L,C
  2349  0f27  221cf4                    LD      (CURLIN),HL
  2350  0f2a  eb                        EX      DE,HL
  2351  0f2b  3e                        DEFB    $3E                    ; skip next instruction and skip to end of statement
  2352                          
  2353                          
  2354                          ;       Subroutine      skip to end of statement
  2355                          ;       Inputs          ________________________
  2356                          ;       Outputs         ________________________
  2357                          
  2358  0f2c  e1                J485A:  POP     HL
  2359                          
  2360                          ;       Subroutine      skip to end of statement (also DATA statement handler)
  2361                          ;       Inputs          ________________________
  2362                          ;       Outputs         ________________________
  2363                          
  2364  0f2d  01                C485B:  DEFB    $01                    ; LD BC,xx$3A, skip to 485E
  2365  0f2e  3a                        DEFB    ':'                     ; end search character outside string = :
  2366                          
  2367                          ;       Subroutine      skip to end of BASIC line (also REM/ELSE statement handler)
  2368                          ;       Inputs          ________________________
  2369                          ;       Outputs         ________________________
  2370                          
  2371  0f2f  0e00              C485D:  LD      C,0                     ; end search character outside string = none
  2372  0f31  0600                      LD      B,0                     ; end search character inside string = none
  2373                          
  2374                          ;       Subroutine      skip to end of BASIC line with extra end characters
  2375                          ;       Inputs          C = end search character outside string, B = end search character inside string
  2376                          ;       Outputs         ________________________
  2377                          
  2378  0f33  79                J4861:  LD      A,C
  2379  0f34  48                        LD      C,B
  2380  0f35  47                        LD      B,A
  2381  0f36  2b                J4864:  DEC     HL
  2382  0f37  d7                J4865:  RST     CHRGTR                  ; get next BASIC character
  2383  0f38  b7                        OR      A                       ; end of BASIC line ?
  2384  0f39  c8                        RET     Z                       ; yep, quit
  2385  0f3a  b8                        CP      B
  2386  0f3b  c8                        RET     Z
  2387  0f3c  23                        INC     HL
  2388  0f3d  fe22                      CP      '"'
  2389  0f3f  28f2                      JR      Z,J4861
  2390  0f41  3c                        INC     A                       ; function token header ?
  2391  0f42  28f3                      JR      Z,J4865                 ; skip function token as well
  2392  0f44  d68c                      SUB     $8B+1                   ; IF token ?
  2393  0f46  20ee                      JR      NZ,J4864                ; nope, next
  2394  0f48  b8                        CP      B                       ; end search character defined ?
  2395  0f49  8a                        ADC     A,D
  2396  0f4a  57                        LD      D,A                     ; yep, increase IF nesting level
  2397  0f4b  18e9                      JR      J4864                   ; next
  2398                          
  2399  0f4d  f1                J487B:  POP     AF
  2400  0f4e  c603                      ADD     A,3
  2401  0f50  1812                      JR      J4892
  2402                          
  2403                          ;       Subroutine      LET statement
  2404                          ;       Inputs          ________________________
  2405                          ;       Outputs         ________________________
  2406                          
  2407  0f52  cd7625            C4880:  CALL    C5EA4                   ; locate variable
  2408  0f55  cf                        RST     SYNCHR
  2409  0f56  ef                        DEFB    $EF                    ; check for =
  2410  0f57  ed53a7f6                  LD      (TEMP),DE               ; save variable address
  2411  0f5b  d5                        PUSH    DE
  2412  0f5c  3a63f6                    LD      A,(VALTYP)
  2413  0f5f  f5                        PUSH    AF                      ; save variable type
  2414  0f60  cd3613                    CALL    C4C64                   ; evaluate expression
  2415  0f63  f1                        POP     AF
  2416  0f64  e3                J4892:  EX      (SP),HL
  2417  0f65  47                J4893:  LD      B,A
  2418  0f66  3a63f6                    LD      A,(VALTYP)
  2419  0f69  b8                        CP      B
  2420  0f6a  78                        LD      A,B                     ; result expression of the same type as variable ?
  2421  0f6b  2806                      JR      Z,J48A1                 ; yep, no need to convert
  2422  0f6d  cd4c18                    CALL    C517A                   ; convert to DAC to new type
  2423  0f70  3a63f6            J489E:  LD      A,(VALTYP)
  2424  0f73  11f6f7            J48A1:  LD      DE,DAC
  2425  0f76  fe02                      CP      2                       ; integer ?
  2426  0f78  2003                      JR      NZ,J48AB
  2427  0f7a  11f8f7                    LD      DE,DAC+2                ; yep, use DAC+2
  2428  0f7d  e5                J48AB:  PUSH    HL
  2429  0f7e  fe03                      CP      3                       ; string ?
  2430  0f80  202e                      JR      NZ,J48DE                ; nope, just copy value in variable
  2431  0f82  2af8f7                    LD      HL,(DAC+2)
  2432  0f85  e5                        PUSH    HL
  2433  0f86  23                        INC     HL
  2434  0f87  5e                        LD      E,(HL)
  2435  0f88  23                        INC     HL
  2436  0f89  56                        LD      D,(HL)                  ; pointer to string
  2437  0f8a  211ef4                    LD      HL,KBUF-1
  2438  0f8d  e7                        RST     DCOMPR
  2439  0f8e  3814                      JR      C,J48D2                 ; string in KBUF, copy in string storage area
  2440  0f90  2ac6f6                    LD      HL,(STREND)
  2441  0f93  e7                        RST     DCOMPR
  2442  0f94  d1                        POP     DE                      ; stringdescriptor
  2443  0f95  3015                      JR      NC,J48DA                ; string in programtext, no need to copy
  2444  0f97  2197f6                    LD      HL,DSCTMP-1
  2445  0f9a  e7                        RST     DCOMPR
  2446  0f9b  3806                      JR      C,J48D1                 ; temporary stringdescriptor, copy string in string storage area
  2447  0f9d  2179f6                    LD      HL,TEMPST-1
  2448  0fa0  e7                        RST     DCOMPR
  2449  0fa1  3809                      JR      C,J48DA                 ; no temporaty result stringdesciptor, no need to copy
  2450  0fa3  3e                J48D1:  DEFB    $3E                    ; skip next instruction
  2451  0fa4  d1                J48D2:  POP     DE                      ;
  2452  0fa5  cdc02e                    CALL    C67EE                   ; free descriptor if temporary and on top of heap
  2453  0fa8  eb                        EX      DE,HL
  2454  0fa9  cde32c                    CALL    C6611                   ; copy string to new temporary string
  2455  0fac  cdc02e            J48DA:  CALL    C67EE                   ; free descriptor if temporary and on top of heap
  2456  0faf  e3                        EX      (SP),HL
  2457  0fb0  cd0000            J48DE:  CALL    C2EF3                   ; HL=DE (valtyp)
  2458  0fb3  d1                        POP     DE
  2459  0fb4  e1                        POP     HL
  2460  0fb5  c9                        RET
  2461                          
  2462                          ;       Subroutine      ON statement
  2463                          ;       Inputs          ________________________
  2464                          ;       Outputs         ________________________
  2465                          
  2466  0fb6  fea6              C48E4:  CP      $A6                    ; ERROR token ?
  2467  0fb8  2025                      JR      NZ,J490D
  2468  0fba  d7                        RST     CHRGTR                  ; get next BASIC character (ERROR token)
  2469  0fbb  cf                        RST     SYNCHR
  2470  0fbc  89                        DEFB    $89                    ; check for GOTO token
  2471  0fbd  cd3b0e                    CALL    C4769                   ; collect linenumber
  2472  0fc0  7a                        LD      A,D
  2473  0fc1  b3                        OR      E                       ; linenumber zero ?
  2474  0fc2  2809                      JR      Z,J48FB                 ; yep, no ERROR handling
  2475  0fc4  cd6509                    CALL    C4293                   ; stack HL and search linenumber
  2476  0fc7  50                        LD      D,B
  2477  0fc8  59                        LD      E,C
  2478  0fc9  e1                        POP     HL                      ; restore BASIC pointer
  2479  0fca  d2ee0e                    JP      NC,J481C                ; linenumber not found, undefined line number error
  2480  0fcd  ed53b9f6          J48FB:  LD      (ONELIN),DE             ; set ERROR handler
  2481  0fd1  d8                        RET     C                       ; not ON ERROR GOTO 0, quit
  2482  0fd2  3abbf6                    LD      A,(ONEFLG)
  2483  0fd5  b7                        OR      A                       ; in ERROR handling routine ?
  2484  0fd6  7b                        LD      A,E                     ; ?? unneeded instruction ??
  2485  0fd7  c8                        RET     Z                       ; nope, quit
  2486  0fd8  3a14f4                    LD      A,(ERRFLG)
  2487  0fdb  5f                        LD      E,A                     ; saved errorcode
  2488  0fdc  c36807                    JP      J4096                   ; BASIC error
  2489                          
  2490                          ;       Subroutine      ON statement (not ON ERROR)
  2491                          ;       Inputs          ________________________
  2492                          ;       Outputs         ________________________
  2493                          
  2494  0fdf  cde23e            J490D:  CALL    C7810
  2495  0fe2  3831                      JR      C,J4943
  2496  0fe4  c5                        PUSH    BC
  2497  0fe5  d7                        RST     CHRGTR                  ; get next BASIC character
  2498  0fe6  cf                        RST     SYNCHR
  2499  0fe7  8d                        DEFB    $8D                    ; check for GOSUB token
  2500  0fe8  af                        XOR     A
  2501  0fe9  c1                J4917:  POP     BC
  2502  0fea  c5                        PUSH    BC
  2503  0feb  b9                        CP      C
  2504  0fec  d22707                    JP      NC,J4055                ; nope, syntax error
  2505  0fef  f5                        PUSH    AF
  2506  0ff0  cd3b0e                    CALL    C4769                   ; collect linenumber
  2507  0ff3  7a                        LD      A,D
  2508  0ff4  b3                        OR      E
  2509  0ff5  2809                      JR      Z,J492E
  2510  0ff7  cd6509                    CALL    C4293                   ; stack HL and search linenumber
  2511  0ffa  50                        LD      D,B
  2512  0ffb  59                        LD      E,C
  2513  0ffc  e1                        POP     HL
  2514  0ffd  d2ee0e                    JP      NC,J481C                ; nope, undefined line number error
  2515  1000  f1                J492E:  POP     AF
  2516  1001  c1                        POP     BC
  2517  1002  f5                        PUSH    AF
  2518  1003  80                        ADD     A,B
  2519  1004  c5                        PUSH    BC
  2520  1005  cd2e3f                    CALL    C785C
  2521  1008  2b                        DEC     HL
  2522  1009  d7                        RST     CHRGTR                  ; get next BASIC character
  2523  100a  c1                        POP     BC
  2524  100b  d1                        POP     DE
  2525  100c  c8                        RET     Z
  2526  100d  c5                        PUSH    BC
  2527  100e  d5                        PUSH    DE
  2528  100f  cf                        RST     SYNCHR
  2529  1010  2c                        DEFB    ','                     ; check for ,
  2530  1011  f1                        POP     AF
  2531  1012  3c                        INC     A
  2532  1013  18d4                      JR      J4917
  2533                          
  2534  1015  cdee18            J4943:  CALL    C521C                   ; evaluate byte operand
  2535  1018  7e                        LD      A,(HL)
  2536  1019  47                        LD      B,A
  2537  101a  fe8d                      CP      $8D                     ; GOSUB token ?
  2538  101c  2803                      JR      Z,J494F
  2539  101e  cf                        RST     SYNCHR
  2540  101f  89                        DEFB    $89                    ; check for GOTO token
  2541  1020  2b                        DEC     HL
  2542  1021  4b                J494F:  LD      C,E
  2543  1022  0d                J4950:  DEC     C
  2544  1023  78                        LD      A,B
  2545  1024  ca180d                    JP      Z,J4646
  2546  1027  cd3c0e                    CALL    C476A                   ; collect linenumber
  2547  102a  fe2c                      CP      ','
  2548  102c  c0                        RET     NZ
  2549  102d  18f3                      JR      J4950
  2550                          
  2551                          ;       Subroutine      RESUME statement
  2552                          ;       Inputs          ________________________
  2553                          ;       Outputs         ________________________
  2554                          
  2555  102f  3abbf6            C495D:  LD      A,(ONEFLG)
  2556  1032  b7                        OR      A                       ; in ERROR handling routine ?
  2557  1033  2009                      JR      NZ,J496C                ; yep,
  2558  1035  32b9f6                    LD      (ONELIN+0),A
  2559  1038  32baf6                    LD      (ONELIN+1),A            ; disable ERROR handler
  2560  103b  c33607                    JP      J4064                   ; resume without error
  2561                          
  2562  103e  3c                J496C:  INC     A
  2563  103f  3214f4                    LD      (ERRFLG),A              ; clear errorcode
  2564  1042  7e                        LD      A,(HL)
  2565  1043  fe83                      CP      $83                     ; NEXT token ?
  2566  1045  2810                      JR      Z,J4985                 ; yep,
  2567  1047  cd3b0e                    CALL    C4769                   ; collect linenumber
  2568  104a  c0                        RET     NZ                      ; not end of statement, quit (which generates syntax error)
  2569  104b  7a                        LD      A,D
  2570  104c  b3                        OR      E                       ; linenumber zero ?
  2571  104d  280c                      JR      Z,J4989                 ; yep, resume at error position
  2572  104f  cdbd0e                    CALL    C47EB                   ; goto linenumber
  2573  1052  af                        XOR     A
  2574  1053  32bbf6                    LD      (ONEFLG),A              ; not in ERROR handling routine anymore
  2575  1056  c9                        RET
  2576                          
  2577  1057  d7                J4985:  RST     CHRGTR                  ; get next BASIC character
  2578  1058  c0                        RET     NZ                      ; not end of statement, quit (which generates syntax error)
  2579  1059  1805                      JR      J498E                   ; flag RESUME 0
  2580                          
  2581  105b  af                J4989:  XOR     A
  2582  105c  32bbf6                    LD      (ONEFLG),A              ; not in ERROR handling routine
  2583  105f  3c                        INC     A                       ; flag RESUME NEXT
  2584  1060  2ab7f6            J498E:  LD      HL,(ERRTXT)
  2585  1063  eb                        EX      DE,HL
  2586  1064  2ab3f6                    LD      HL,(ERRLIN)
  2587  1067  221cf4                    LD      (CURLIN),HL             ; current linenumber = linenumber when error occured
  2588  106a  eb                        EX      DE,HL                   ; BASIC pointer = BASIC pointer when error occured
  2589  106b  c0                        RET     NZ                      ; RESUME NEXT, quit
  2590  106c  7e                        LD      A,(HL)
  2591  106d  b7                        OR      A                       ; at end of BASIC line ?
  2592  106e  2004                      JR      NZ,J49A2                ; nope,
  2593  1070  23                        INC     HL
  2594  1071  23                        INC     HL
  2595  1072  23                        INC     HL
  2596  1073  23                        INC     HL                      ; skip linelink and linenumber
  2597  1074  23                J49A2:  INC     HL
  2598  1075  af                        XOR     A
  2599  1076  32bbf6                    LD      (ONEFLG),A              ; not in ERROR handling routine
  2600  1079  c32d0f                    JP      C485B                   ; skip to end of statement
  2601                          
  2602                          ;       Subroutine      ERROR statement
  2603                          ;       Inputs          ________________________
  2604                          ;       Outputs         ________________________
  2605                          
  2606  107c  cdee18            C49AA:  CALL    C521C                   ; evaluate byte operand
  2607  107f  c0                        RET     NZ                      ; not end of statement, quit (which generates a syntax error)
  2608  1080  b7                        OR      A                       ; errornumber 0 ?
  2609  1081  ca2c0e                    JP      Z,C475A                 ; yep, illegal function call
  2610  1084  c34107                    JP      J406F                   ; BASIC error
  2611                          
  2612                          ;       Subroutine      AUTO statement
  2613                          ;       Inputs          ________________________
  2614                          ;       Outputs         ________________________
  2615                          
  2616  1087  110a00            C49B5:  LD      DE,10
  2617  108a  d5                        PUSH    DE
  2618  108b  2816                      JR      Z,J49D1
  2619  108d  cd310e                    CALL    C475F                   ; collect linenumber (with DOT supported)
  2620  1090  eb                        EX      DE,HL
  2621  1091  e3                        EX      (SP),HL
  2622  1092  2810                      JR      Z,J49D2
  2623  1094  eb                        EX      DE,HL
  2624  1095  cf                        RST     SYNCHR
  2625  1096  2c                        DEFB    ','                     ; check for ,
  2626  1097  ed5badf6                  LD      DE,(AUTINC)
  2627  109b  2806                      JR      Z,J49D1
  2628  109d  cd3b0e                    CALL    C4769                   ; collect linenumber
  2629  10a0  c22707                    JP      NZ,J4055                ; nope, syntax error
  2630  10a3  eb                J49D1:  EX      DE,HL
  2631  10a4  7c                J49D2:  LD      A,H
  2632  10a5  b5                        OR      L
  2633  10a6  ca2c0e                    JP      Z,C475A                 ; illegal function call
  2634  10a9  22adf6                    LD      (AUTINC),HL
  2635  10ac  32aaf6                    LD      (AUTFLG),A              ; in auto linenumber mode
  2636  10af  e1                        POP     HL
  2637  10b0  22abf6                    LD      (AUTLIN),HL
  2638  10b3  c1                        POP     BC
  2639  10b4  c30608                    JP      J4134                   ; mainloop
  2640                          
  2641                          ;       Subroutine      IF statement
  2642                          ;       Inputs          ________________________
  2643                          ;       Outputs         ________________________
  2644                          
  2645  10b7  cd3613            C49E5:  CALL    C4C64                   ; evaluate expression
  2646  10ba  7e                        LD      A,(HL)
  2647  10bb  fe2c                      CP      ','
  2648  10bd  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  2649  10c0  fe89                      CP      $89                     ; GOTO token ?
  2650  10c2  2803                      JR      Z,J49F5                 ; yep,
  2651  10c4  cf                        RST     SYNCHR
  2652  10c5  da                        DEFB    $DA                    ; check for THEN token
  2653  10c6  2b                        DEC     HL
  2654  10c7  e5                J49F5:  PUSH    HL
  2655  10c8  cd0000                    CALL    C2EA1                   ; get sign DAC
  2656  10cb  e1                        POP     HL
  2657  10cc  2810                      JR      Z,J4A0C                 ; DAC is zero, execute ELSE part (if any)
  2658  10ce  d7                J49FC:  RST     CHRGTR                  ; get next BASIC character
  2659  10cf  c8                        RET     Z                       ; end of statement, quit
  2660  10d0  fe0e                      CP      $E                     ; linenumber follows ?
  2661  10d2  caba0e                    JP      Z,C47E8                 ; yep, goto statement
  2662  10d5  fe0d                      CP      $D                     ; linepointer follows ?
  2663  10d7  c2180d                    JP      NZ,J4646                ; nope, execute THEN part
  2664  10da  2a6af6                    LD      HL,(CONLO)
  2665  10dd  c9                        RET
  2666                          
  2667  10de  1601              J4A0C:  LD      D,1                     ; IF nesting level=1
  2668  10e0  cd2d0f            J4A0E:  CALL    C485B                   ; skip to end of statement
  2669  10e3  b7                        OR      A                       ; end of BASIC line ?
  2670  10e4  c8                        RET     Z                       ; yep, quit
  2671  10e5  d7                        RST     CHRGTR                  ; get next BASIC character
  2672  10e6  fea1                      CP      $A1                    ; ELSE token ?
  2673  10e8  20f6                      JR      NZ,J4A0E                ; nope, skip more
  2674  10ea  15                        DEC     D
  2675  10eb  20f3                      JR      NZ,J4A0E
  2676  10ed  18df                      JR      J49FC
  2677                          
  2678                          ;       Subroutine      LPRINT statement
  2679                          ;       Inputs          ________________________
  2680                          ;       Outputs         ________________________
  2681                          
  2682  10ef  3e01              C4A1D:  LD      A,1
  2683  10f1  3216f4                    LD      (PRTFLG),A              ; interpreter output to printer
  2684  10f4  1805                      JR      J4A29
  2685                          
  2686                          ;       Subroutine      PRINT statement
  2687                          ;       Inputs          ________________________
  2688                          ;       Outputs         ________________________
  2689                          
  2690  10f6  0e02              C4A24:  LD      C,2                     ; requested filemode = output
  2691  10f8  cd2934                    CALL    C6D57                   ; redirect interpreter output if i/o channel specified
  2692  10fb  2b                J4A29:  DEC     HL
  2693  10fc  d7                        RST     CHRGTR                  ; get next BASIC character
  2694  10fd  ccfa39                    CALL    Z,C7328                 ; no operands, newline to interpreter output
  2695  1100  cad111            J4A2E:  JP      Z,C4AFF                 ; return interpreter output to screen and quit
  2696  1103  fee4                      CP      $E4
  2697  1105  ca8327                    JP      Z,J60B1                 ; USING token,
  2698  1108  fedb                      CP      $DB
  2699  110a  ca9811                    JP      Z,J4AC6                 ; TAB( token,
  2700  110d  fedf                      CP      $DF
  2701  110f  ca9811                    JP      Z,J4AC6                 ; SPC( token,
  2702  1112  e5                        PUSH    HL
  2703  1113  fe2c                      CP      ','
  2704  1115  284f                      JR      Z,J4A94
  2705  1117  fe3b                      CP      ';'
  2706  1119  cacc11                    JP      Z,J4AFA
  2707  111c  c1                        POP     BC
  2708  111d  cd3613                    CALL    C4C64                   ; evaluate expression
  2709  1120  e5                        PUSH    HL
  2710  1121  ef                        RST     GETYPR                  ; get DAC type
  2711  1122  283b                      JR      Z,J4A8D                 ; string,
  2712  1124  cd0000                    CALL    C3425                   ; convert DAC to text, unformatted
  2713  1127  cd072d                    CALL    C6635                   ; analyse string and create temporary stringdescriptor
  2714  112a  3620                      LD      (HL),$20
  2715  112c  2af8f7                    LD      HL,(DAC+2)
  2716  112f  34                        INC     (HL)
  2717  1130  cd52ff                    CALL    H_PRTF
  2718  1133  cd0000                    CALL    ISFLIO                  ; interpreter input/output device = file ?
  2719  1136  2023                      JR      NZ,J4A89                ; yep,
  2720  1138  2af8f7                    LD      HL,(DAC+2)
  2721  113b  3a16f4                    LD      A,(PRTFLG)
  2722  113e  b7                        OR      A                       ; interpreter output to screen ?
  2723  113f  2808                      JR      Z,J4A77                 ; yep,
  2724  1141  3a15f4                    LD      A,(LPTPOS)
  2725  1144  86                        ADD     A,(HL)
  2726  1145  feff                      CP      255
  2727  1147  180a                      JR      J4A81
  2728                          
  2729  1149  3ab0f3            J4A77:  LD      A,(LINLEN)
  2730  114c  47                        LD      B,A
  2731  114d  3a61f6                    LD      A,(TTYPOS)
  2732  1150  86                        ADD     A,(HL)
  2733  1151  3d                        DEC     A
  2734  1152  b8                        CP      B
  2735  1153  3806              J4A81:  JR      C,J4A89
  2736  1155  cc033a                    CALL    Z,C7331                 ; yep, interpreter output pos = 0
  2737  1158  c4fa39                    CALL    NZ,C7328                ; nope, newline to interpreter output
  2738  115b  cd4d2d            J4A89:  CALL    C667B                   ; free string and string to interpreter output
  2739  115e  b7                        OR      A
  2740  115f  cc4d2d            J4A8D:  CALL    Z,C667B                 ; free string and string to interpreter output
  2741  1162  e1                        POP     HL
  2742  1163  c3fb10                    JP      J4A29
  2743                          
  2744  1166  cd57ff            J4A94:  CALL    H_COMP
  2745  1169  010800                    LD      BC,8
  2746  116c  2a64f8                    LD      HL,(PTRFIL)
  2747  116f  09                        ADD     HL,BC
  2748  1170  cd0000                    CALL    ISFLIO                  ; interpreter input/output device = file ?
  2749  1173  7e                        LD      A,(HL)
  2750  1174  201b                      JR      NZ,J4ABF                ; yep,
  2751  1176  3a16f4                    LD      A,(PRTFLG)
  2752  1179  b7                        OR      A                       ; interpreter output to screen ?
  2753  117a  2807                      JR      Z,J4AB1                 ; yep,
  2754  117c  3a15f4                    LD      A,(LPTPOS)
  2755  117f  feee                      CP      $EE
  2756  1181  1808                      JR      J4AB9
  2757                          
  2758  1183  3ab2f3            J4AB1:  LD      A,(CLMLST)
  2759  1186  47                        LD      B,A
  2760  1187  3a61f6                    LD      A,(TTYPOS)
  2761  118a  b8                        CP      B
  2762  118b  d4fa39            J4AB9:  CALL    NC,C7328                ; newline to interpreter output
  2763  118e  d2cc11                    JP      NC,J4AFA
  2764  1191  d60e              J4ABF:  SUB     $E
  2765  1193  30fc                      JR      NC,J4ABF
  2766  1195  2f                        CPL
  2767  1196  182d                      JR      J4AF3
  2768                          
  2769  1198  f5                J4AC6:  PUSH    AF
  2770  1199  cded18                    CALL    C521B                   ; skip basic char and evaluate byte operand
  2771  119c  cf                        RST     SYNCHR
  2772  119d  29                        DEFB    ')'                     ; check for )
  2773  119e  2b                        DEC     HL
  2774  119f  f1                        POP     AF
  2775  11a0  d6df                      SUB     $DF
  2776  11a2  e5                        PUSH    HL
  2777  11a3  281c                      JR      Z,J4AEF
  2778  11a5  010800                    LD      BC,8
  2779  11a8  2a64f8                    LD      HL,(PTRFIL)
  2780  11ab  09                        ADD     HL,BC
  2781  11ac  cd0000                    CALL    ISFLIO                  ; interpreter input/output device = file ?
  2782  11af  7e                        LD      A,(HL)
  2783  11b0  200f                      JR      NZ,J4AEF                ; yep,
  2784  11b2  3a16f4                    LD      A,(PRTFLG)
  2785  11b5  b7                        OR      A                       ; interpreter output to screen ?
  2786  11b6  cabe11                    JP      Z,J4AEC                 ; yep,
  2787  11b9  3a15f4                    LD      A,(LPTPOS)
  2788  11bc  1803                      JR      J4AEF
  2789                          
  2790  11be  3a61f6            J4AEC:  LD      A,(TTYPOS)
  2791  11c1  2f                J4AEF:  CPL
  2792  11c2  83                        ADD     A,E
  2793  11c3  3007                      JR      NC,J4AFA
  2794  11c5  3c                J4AF3:  INC     A
  2795  11c6  47                        LD      B,A
  2796  11c7  3e20                      LD      A,' '
  2797  11c9  df                J4AF7:  RST     OUTDO                   ; space to interpreter output
  2798  11ca  10fd                      DJNZ    J4AF7
  2799  11cc  e1                J4AFA:  POP     HL
  2800  11cd  d7                        RST     CHRGTR                  ; get next BASIC character
  2801  11ce  c30011                    JP      J4A2E
  2802                          
  2803                          ;       Subroutine      return interpreter output to screen
  2804                          ;       Inputs          ________________________
  2805                          ;       Outputs         ________________________
  2806                          
  2807  11d1  cd5cff            C4AFF:  CALL    H_FINP
  2808  11d4  af                        XOR     A
  2809  11d5  3216f4                    LD      (PRTFLG),A              ; interpreter output to screen
  2810  11d8  e5                        PUSH    HL
  2811  11d9  67                        LD      H,A
  2812  11da  6f                        LD      L,A
  2813  11db  2264f8                    LD      (PTRFIL),HL             ; interpreter input/output device = keyboard/screen
  2814  11de  e1                        POP     HL
  2815  11df  c9                        RET
  2816                          
  2817                          ;       Subroutine      LINE statement
  2818                          ;       Inputs          ________________________
  2819                          ;       Outputs         ________________________
  2820                          
  2821  11e0  fe85              C4B0E:  CP      $85                     ; next character INPUT token ?
  2822  11e2  c2791f                    JP      NZ,J58A7                ; nope, graphics LINE statement
  2823  11e5  cf                        RST     SYNCHR
  2824  11e6  85                        DEFB    $85                    ; check for INPUT token
  2825  11e7  fe23                      CP      '#'                     ; bufferid follows ?
  2826  11e9  ca6134                    JP      Z,J6D8F                 ; yep, LINEINPUT for files
  2827  11ec  cd4d12                    CALL    C4B7B
  2828  11ef  cd7625                    CALL    C5EA4                   ; locate variable
  2829  11f2  cd0000                    CALL    C3058                   ; check if string
  2830  11f5  d5                        PUSH    DE
  2831  11f6  e5                        PUSH    HL
  2832  11f7  cd0000                    CALL    INLIN
  2833  11fa  d1                        POP     DE
  2834  11fb  c1                        POP     BC
  2835  11fc  dad02a                    JP      C,J63FE                 ; aborted,
  2836  11ff  c5                        PUSH    BC
  2837  1200  d5                        PUSH    DE
  2838  1201  0600                      LD      B,0
  2839  1203  cd0a2d                    CALL    C6638                   ; analyze string with specified endmaker (1st char is skipped) and create temporary stringdescriptor
  2840  1206  e1                        POP     HL
  2841  1207  3e03                      LD      A,3
  2842  1209  c3640f                    JP      J4892
  2843                          
  2844  120c  3f5265646f206672  I4B3A:  DEFB    "?Redo from start",13,10,0
              6f6d207374617274  
              0d0a00            
  2845                          
  2846  121f  cd61ff            J4B4D:  CALL    H_TRMN
  2847  1222  3aa6f6                    LD      A,(FLGINP)
  2848  1225  b7                J4B53:  OR      A
  2849  1226  c22107                    JP      NZ,J404F
  2850  1229  c1                        POP     BC
  2851  122a  210c12                    LD      HL,I4B3A
  2852  122d  cd4a2d                    CALL    C6678                   ; message to interpreter output
  2853  1230  2aaff6                    LD      HL,(SAVTXT)
  2854  1233  c9                        RET
  2855                          
  2856  1234  cd2734            J4B62:  CALL    C6D55                   ; redirect interpreter input if i/o channel specified
  2857  1237  e5                        PUSH    HL                      ; save BASIC pointer
  2858  1238  215df5                    LD      HL,BUFMIN
  2859  123b  c36d12                    JP      J4B9B
  2860                          
  2861                          ;       Subroutine      INPUT statement
  2862                          ;       Inputs          ________________________
  2863                          ;       Outputs         ________________________
  2864                          
  2865  123e  fe23              C4B6C:  CP      '#'                     ; bufferid follows ?
  2866  1240  28f2                      JR      Z,J4B62                 ; yep,
  2867  1242  e5                        PUSH    HL
  2868  1243  f5                        PUSH    AF
  2869  1244  cd0000                    CALL    TOTEXT                  ; force text screenmode
  2870  1247  f1                        POP     AF
  2871  1248  e1                        POP     HL
  2872  1249  015d12                    LD      BC,I4B8B
  2873  124c  c5                        PUSH    BC
  2874                          
  2875                          ;       Subroutine      __________________________
  2876                          ;       Inputs          ________________________
  2877                          ;       Outputs         ________________________
  2878                          
  2879  124d  fe22              C4B7B:  CP      '"'                     ; inputprompt specified ?
  2880  124f  3e00                      LD      A,0
  2881  1251  c0                        RET     NZ                      ; nope, start input
  2882  1252  cd082d                    CALL    C6636                   ; analyze string with " as endmarker (1st char is skipped) and create temporary stringdescriptor
  2883  1255  cf                        RST     SYNCHR
  2884  1256  3b                        DEFB    ';'                     ; check for ;
  2885  1257  e5                        PUSH    HL
  2886  1258  cd4d2d                    CALL    C667B                   ; free string and string to interpreter output
  2887  125b  e1                        POP     HL
  2888  125c  c9                        RET
  2889                          
  2890  125d  e5                I4B8B:  PUSH    HL
  2891  125e  cd0000                    CALL    QINLIN
  2892  1261  c1                        POP     BC
  2893  1262  dad02a                    JP      C,J63FE                 ; aborted,
  2894  1265  23                        INC     HL
  2895  1266  7e                        LD      A,(HL)
  2896  1267  b7                        OR      A
  2897  1268  2b                        DEC     HL
  2898  1269  c5                        PUSH    BC
  2899  126a  ca2c0f                    JP      Z,J485A                 ; skip to end of statement
  2900  126d  362c              J4B9B:  LD      (HL),','
  2901  126f  1805                      JR      J4BA4
  2902                          
  2903                          ;       Subroutine      READ statement
  2904                          ;       Inputs          ________________________
  2905                          ;       Outputs         ________________________
  2906                          
  2907                          
  2908  1271  e5                C4B9F:  PUSH    HL
  2909  1272  2ac8f6                    LD      HL,(DATPTR)
  2910  1275  f6                        DEFB    $F6                    ; XOR xx, skip next instruction
  2911  1276  af                J4BA4:  XOR     A
  2912  1277  32a6f6                    LD      (FLGINP),A
  2913  127a  e3                        EX      (SP),HL
  2914  127b  01                        DEFB    $01                    ; LD BC,xxxx, skip next instruction
  2915  127c  cf                J4BAA:  RST     SYNCHR
  2916  127d  2c                        DEFB    ','                     ; check for ,
  2917  127e  cd7625                    CALL    C5EA4                   ; locate variable
  2918  1281  e3                        EX      (SP),HL
  2919  1282  d5                        PUSH    DE
  2920  1283  7e                        LD      A,(HL)
  2921  1284  fe2c                      CP      ','
  2922  1286  281b                      JR      Z,J4BD1
  2923  1288  3aa6f6                    LD      A,(FLGINP)
  2924  128b  b7                J4BB9:  OR      A
  2925  128c  c21213                    JP      NZ,J4C40
  2926  128f  3e3f                      LD      A,'?'
  2927  1291  df                        RST     OUTDO                   ; '?' to interpreter output
  2928  1292  cd0000                    CALL    QINLIN
  2929  1295  d1                        POP     DE
  2930  1296  c1                        POP     BC
  2931  1297  dad02a                    JP      C,J63FE                 ; aborted,
  2932  129a  23                        INC     HL
  2933  129b  7e                        LD      A,(HL)
  2934  129c  2b                        DEC     HL
  2935  129d  b7                        OR      A
  2936  129e  c5                        PUSH    BC
  2937  129f  ca2c0f                    JP      Z,J485A                 ; skip to end of statement
  2938  12a2  d5                        PUSH    DE
  2939  12a3  cd0000            J4BD1:  CALL    ISFLIO                  ; interpreter input/output device = file ?
  2940  12a6  c25534                    JP      NZ,J6D83                ; yep,
  2941  12a9  ef                        RST     GETYPR                  ; get DAC type
  2942  12aa  f5                        PUSH    AF
  2943  12ab  2022                      JR      NZ,J4BFD                ; not a string,
  2944  12ad  d7                        RST     CHRGTR                  ; get next BASIC character
  2945  12ae  57                        LD      D,A
  2946  12af  47                        LD      B,A
  2947  12b0  fe22                      CP      '"'
  2948  12b2  280c                      JR      Z,J4BEE
  2949  12b4  3aa6f6                    LD      A,(FLGINP)
  2950  12b7  b7                        OR      A
  2951  12b8  57                        LD      D,A
  2952  12b9  2802                      JR      Z,J4BEB
  2953  12bb  163a                      LD      D,':'
  2954  12bd  062c              J4BEB:  LD      B,','
  2955  12bf  2b                        DEC     HL
  2956  12c0  cd0b2d            J4BEE:  CALL    C6639                   ; analyse string with specified endmarkers (1st char is skipped) and create temporary stringdescriptor
  2957  12c3  f1                I4BF1:  POP     AF
  2958  12c4  c603                      ADD     A,3
  2959  12c6  eb                        EX      DE,HL
  2960  12c7  21d712                    LD      HL,I4C05
  2961  12ca  e3                        EX      (SP),HL
  2962  12cb  d5                        PUSH    DE
  2963  12cc  c3650f                    JP      J4893
  2964                          
  2965  12cf  d7                J4BFD:  RST     CHRGTR                  ; get next BASIC character
  2966  12d0  01c312                    LD      BC,I4BF1
  2967  12d3  c5                        PUSH    BC
  2968  12d4  c30000                    JP      C3299                   ; convert text to number
  2969                          
  2970  12d7  2b                I4C05:  DEC     HL
  2971  12d8  d7                        RST     CHRGTR                  ; get next BASIC character
  2972  12d9  2805                      JR      Z,J4C0E
  2973  12db  fe2c                      CP      ','
  2974  12dd  c21f12                    JP      NZ,J4B4D
  2975  12e0  e3                J4C0E:  EX      (SP),HL
  2976  12e1  2b                        DEC     HL
  2977  12e2  d7                        RST     CHRGTR                  ; get next BASIC character
  2978  12e3  c27c12                    JP      NZ,J4BAA
  2979  12e6  d1                        POP     DE
  2980  12e7  3aa6f6                    LD      A,(FLGINP)
  2981  12ea  b7                        OR      A
  2982  12eb  eb                        EX      DE,HL
  2983  12ec  c2b02a                    JP      NZ,J63DE                ; set new DATA pointer and quit
  2984  12ef  d5                        PUSH    DE
  2985  12f0  cd0000                    CALL    ISFLIO                  ; interpreter input/output device = file ?
  2986  12f3  2008                      JR      NZ,J4C2B                ; yep, skip extra ignored
  2987  12f5  7e                        LD      A,(HL)
  2988  12f6  b7                        OR      A
  2989                          
  2990                          ;       Subroutine      __________________________
  2991                          ;       Inputs          ________________________
  2992                          ;       Outputs         ________________________
  2993                          
  2994  12f7  210113            C4C25:  LD      HL,I4C2F
  2995  12fa  c44a2d                    CALL    NZ,C6678                ; nope, message to interpreter output
  2996  12fd  e1                J4C2B:  POP     HL
  2997  12fe  c3d111                    JP      C4AFF                   ; return interpreter output to screen
  2998                          
  2999  1301  3f45787472612069  I4C2F:  DEFB    "?Extra ignored",13,10,0
              676e6f7265640d0a  
              00                
  3000                          
  3001  1312  cd2d0f            J4C40:  CALL    C485B
  3002  1315  b7                        OR      A
  3003  1316  2011                      JR      NZ,J4C57
  3004  1318  23                        INC     HL
  3005  1319  7e                        LD      A,(HL)
  3006  131a  23                        INC     HL
  3007  131b  b6                        OR      (HL)
  3008  131c  1e04                      LD      E,4
  3009  131e  ca4107                    JP      Z,J406F                 ; yep, out of data error
  3010  1321  23                        INC     HL
  3011  1322  5e                        LD      E,(HL)
  3012  1323  23                        INC     HL
  3013  1324  56                        LD      D,(HL)
  3014  1325  ed53a3f6                  LD      (DATLIN),DE
  3015  1329  d7                J4C57:  RST     CHRGTR                  ; get next BASIC character
  3016  132a  fe84                      CP      $84
  3017  132c  20e4                      JR      NZ,J4C40
  3018  132e  c3a312                    JP      J4BD1
  3019                          
  3020                          ;       Subroutine      evaluate = expression
  3021                          ;       Inputs          HL = basicpointer
  3022                          ;       Outputs         ________________________
  3023                          
  3024  1331  cf                C4C5F:  RST     SYNCHR
  3025  1332  ef                        DEFB    $EF                    ; check for =
  3026  1333  01                        DEFB    $01                    ; LD BC,xxxx, skip next instruction
  3027                          
  3028                          ;       Subroutine      evaluate ( expression
  3029                          ;       Inputs          HL = basicpointer
  3030                          ;       Outputs         ________________________
  3031                          
  3032                          
  3033  1334  cf                C4C62:  RST     SYNCHR
  3034  1335  28                        DEFB    '('                     ; check for (
  3035                          
  3036                          ;       Subroutine      FRMEVL (Expression Evaluator)
  3037                          ;       Inputs          HL = BASIC pointer
  3038                          ;       Outputs         ________________________
  3039                          
  3040  1336  2b                C4C64:  DEC     HL
  3041                          
  3042                          
  3043                          ;       Subroutine      skip character and evaluate expression
  3044                          ;       Inputs          ________________________
  3045                          ;       Outputs         ________________________
  3046                          
  3047  1337  1600              C4C65:  LD      D,0                     ; current precedence level 0
  3048                          
  3049                          ;       Subroutine      skip character and evaluate expression with precendence level
  3050                          ;       Inputs          ________________________
  3051                          ;       Outputs         ________________________
  3052                          
  3053  1339  d5                C4C67:  PUSH    DE
  3054  133a  0e01                      LD      C,1
  3055  133c  cd3029                    CALL    C625E                   ; check if enough stackspace for 1 word
  3056  133f  cd66ff                    CALL    H_FRME
  3057  1342  cd9914                    CALL    C4DC7                   ; evaluate factor
  3058  1345  22bcf6            I4C73:  LD      (TEMP2),HL
  3059  1348  2abcf6            J4C76:  LD      HL,(TEMP2)
  3060  134b  c1                        POP     BC
  3061  134c  7e                        LD      A,(HL)
  3062  134d  229df6                    LD      (TEMP3),HL
  3063  1350  feee                      CP      $EE                    ; token $EE or above ?
  3064  1352  d8                        RET     C                       ; nope, quit (expression ends)
  3065  1353  fef1                      CP      $F1                    ; math operator ?
  3066  1355  385f                      JR      C,J4CE4                 ; nope, relational operators ($EE-$F0)
  3067  1357  d6f1                      SUB     $F1
  3068  1359  5f                        LD      E,A
  3069  135a  2009                      JR      NZ,J4C93                ; not a addition
  3070  135c  3a63f6                    LD      A,(VALTYP)
  3071  135f  fe03                      CP      3                       ; string ?
  3072  1361  7b                        LD      A,E
  3073  1362  ca592e                    JP      Z,J6787                 ; yep, concat strings
  3074  1365  fe0c              J4C93:  CP      $FD-$F1               ; token $FD-$FF ?
  3075  1367  d0                        RET     NC                      ; yep, quit
  3076  1368  210d04                    LD      HL,I3D3B                ; table for math operator precedence level
  3077  136b  1600                      LD      D,0
  3078  136d  19                        ADD     HL,DE
  3079  136e  78                        LD      A,B
  3080  136f  56                        LD      D,(HL)
  3081  1370  ba                        CP      D                       ; same or smaller precedence level ?
  3082  1371  d0                        RET     NC                      ; yep,
  3083  1372  c5                J4CA0:  PUSH    BC                      ; save current precedence level
  3084  1373  014813                    LD      BC,J4C76
  3085  1376  c5                        PUSH    BC                      ; return
  3086  1377  7a                        LD      A,D
  3087  1378  cd6bff                    CALL    H_NTPL
  3088  137b  fe51                      CP      $51
  3089  137d  3850                      JR      C,J4CFD
  3090  137f  e6fe                      AND     $FE
  3091  1381  fe7a                      CP      $7A
  3092  1383  284a                      JR      Z,J4CFD
  3093  1385  21f8f7            J4CB3:  LD      HL,DAC+2
  3094  1388  3a63f6                    LD      A,(VALTYP)
  3095  138b  d603                      SUB     3
  3096  138d  ca3f07                    JP      Z,J406D                 ; type mismatch
  3097  1390  b7                        OR      A
  3098  1391  2af8f7                    LD      HL,(DAC+2)
  3099  1394  e5                        PUSH    HL
  3100  1395  faa713                    JP      M,J4CD5                 ; integer
  3101  1398  2af6f7                    LD      HL,(DAC+0)
  3102  139b  e5                        PUSH    HL
  3103  139c  e2a713                    JP      PO,J4CD5
  3104  139f  2afcf7                    LD      HL,(DAC+6)
  3105  13a2  e5                        PUSH    HL
  3106  13a3  2afaf7                    LD      HL,(DAC+4)
  3107  13a6  e5                        PUSH    HL
  3108  13a7  c603              J4CD5:  ADD     A,3
  3109  13a9  4b                        LD      C,E
  3110  13aa  47                        LD      B,A
  3111  13ab  c5                        PUSH    BC
  3112  13ac  01f413                    LD      BC,I4D22
  3113  13af  c5                J4CDD:  PUSH    BC
  3114  13b0  2a9df6                    LD      HL,(TEMP3)
  3115  13b3  c33913                    JP      C4C67                   ; skip character and evaluate expression with precendence level
  3116                          
  3117  13b6  1600              J4CE4:  LD      D,0                     ; clear flag
  3118  13b8  d6ee              J4CE6:  SUB     $EE                    ; relational operators ?
  3119  13ba  381e                      JR      C,J4D08                 ; nope,
  3120  13bc  fe03                      CP      $F0-$EE+1
  3121  13be  301a                      JR      NC,J4D08                ; nope,
  3122  13c0  fe01                      CP      $EF-$EE
  3123  13c2  17                        RLA                             ; b0 is >, b1 is =, b2 is <
  3124  13c3  aa                        XOR     D
  3125  13c4  ba                        CP      D                       ; > = > >= >< >=< =<
  3126  13c5  57                        LD      D,A
  3127  13c6  da2707                    JP      C,J4055                 ; nope, syntax error
  3128  13c9  229df6                    LD      (TEMP3),HL
  3129  13cc  d7                        RST     CHRGTR                  ; get next BASIC character
  3130  13cd  18e9                      JR      J4CE6
  3131                          
  3132  13cf  d5                J4CFD:  PUSH    DE
  3133  13d0  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  3134  13d3  d1                        POP     DE
  3135  13d4  e5                        PUSH    HL
  3136  13d5  014a16                    LD      BC,I4F78
  3137  13d8  18d5                      JR      J4CDD
  3138                          
  3139  13da  78                J4D08:  LD      A,B
  3140  13db  fe64                      CP      $64
  3141  13dd  d0                        RET     NC
  3142  13de  c5                        PUSH    BC
  3143  13df  d5                        PUSH    DE
  3144  13e0  11d72a                    LD      DE,I6405
  3145  13e3  212916                    LD      HL,I4F57
  3146  13e6  e5                        PUSH    HL
  3147  13e7  ef                        RST     GETYPR                  ; get DAC type
  3148  13e8  c28513                    JP      NZ,J4CB3                ; not a string,
  3149  13eb  2af8f7                    LD      HL,(DAC+2)
  3150  13ee  e5                        PUSH    HL
  3151  13ef  019a2c                    LD      BC,I65C8
  3152  13f2  18bb                      JR      J4CDD
  3153                          
  3154                          ;       Subroutine      apply infix math operator
  3155                          ;       Inputs          ________________________
  3156                          ;       Outputs         ________________________
  3157                          
  3158  13f4  c1                I4D22:  POP     BC
  3159  13f5  79                        LD      A,C
  3160  13f6  3264f6                    LD      (DORES),A
  3161  13f9  3a63f6                    LD      A,(VALTYP)
  3162  13fc  b8                        CP      B
  3163  13fd  200b                      JR      NZ,J4D38
  3164  13ff  fe02                      CP      2
  3165  1401  281f                      JR      Z,J4D50
  3166  1403  fe04                      CP      4
  3167  1405  ca6f14                    JP      Z,J4D9D
  3168  1408  302b                      JR      NC,J4D63
  3169  140a  57                J4D38:  LD      D,A
  3170  140b  78                        LD      A,B
  3171  140c  fe08                      CP      8
  3172  140e  2822                      JR      Z,J4D60
  3173  1410  7a                        LD      A,D
  3174  1411  fe08                      CP      8
  3175  1413  2844                      JR      Z,J4D87
  3176  1415  78                        LD      A,B
  3177  1416  fe04                      CP      4
  3178  1418  2852                      JR      Z,J4D9A
  3179  141a  7a                        LD      A,D
  3180  141b  fe03                      CP      3
  3181  141d  ca3f07                    JP      Z,J406D                 ; type mismatch
  3182  1420  3054                      JR      NC,J4DA4
  3183  1422  213b04            J4D50:  LD      HL,I3D69
  3184  1425  0600                      LD      B,$0
  3185  1427  09                        ADD     HL,BC
  3186  1428  09                        ADD     HL,BC
  3187  1429  4e                        LD      C,(HL)
  3188  142a  23                        INC     HL
  3189  142b  46                        LD      B,(HL)
  3190  142c  d1                        POP     DE
  3191  142d  2af8f7                    LD      HL,(DAC+2)
  3192  1430  c5                        PUSH    BC
  3193  1431  c9                        RET
  3194                          
  3195  1432  cd0000            J4D60:  CALL    C303A                   ; convert DAC to double real
  3196  1435  cd0000            J4D63:  CALL    C2F0D                   ; ARG = DAC
  3197  1438  e1                        POP     HL
  3198  1439  22faf7                    LD      (DAC+4),HL
  3199  143c  e1                        POP     HL
  3200  143d  22fcf7                    LD      (DAC+6),HL
  3201  1440  c1                J4D6E:  POP     BC
  3202  1441  d1                        POP     DE
  3203  1442  cd0000                    CALL    C2EC1                   ; DAC = (single)
  3204  1445  cd0000            J4D73:  CALL    C303A                   ; convert DAC to double real
  3205  1448  212304                    LD      HL,I3D51
  3206  144b  3a64f6            J4D79:  LD      A,(DORES)
  3207  144e  07                        RLCA
  3208  144f  85                        ADD     A,L
  3209  1450  6f                        LD      L,A
  3210  1451  8c                        ADC     A,H
  3211  1452  95                        SUB     L
  3212  1453  67                        LD      H,A
  3213  1454  7e                        LD      A,(HL)
  3214  1455  23                        INC     HL
  3215  1456  66                        LD      H,(HL)
  3216  1457  6f                        LD      L,A
  3217  1458  e9                        JP      (HL)
  3218                          
  3219  1459  78                J4D87:  LD      A,B
  3220  145a  f5                        PUSH    AF
  3221  145b  cd0000                    CALL    C2F0D                   ; ARG = DAC
  3222  145e  f1                        POP     AF
  3223  145f  3263f6                    LD      (VALTYP),A
  3224  1462  fe04                      CP      4
  3225  1464  28da                      JR      Z,J4D6E
  3226  1466  e1                        POP     HL
  3227  1467  22f8f7                    LD      (DAC+2),HL
  3228  146a  18d9                      JR      J4D73
  3229                          
  3230  146c  cd0000            J4D9A:  CALL    C2FB2                   ; convert DAC to single real
  3231  146f  c1                J4D9D:  POP     BC
  3232  1470  d1                        POP     DE
  3233  1471  212f04            J4D9F:  LD      HL,I3D5D
  3234  1474  18d5                      JR      J4D79
  3235                          
  3236  1476  e1                J4DA4:  POP     HL
  3237  1477  cd0000                    CALL    C2EB1                   ; push DAC (single)
  3238  147a  cd0000                    CALL    C2FCB                   ; convert to single precision real
  3239  147d  cd0000                    CALL    C2ECC                   ; DEBC = DAC (single)
  3240  1480  e1                        POP     HL
  3241  1481  22f6f7                    LD      (DAC+0),HL
  3242  1484  e1                        POP     HL
  3243  1485  22f8f7                    LD      (DAC+2),HL
  3244  1488  18e7                      JR      J4D9F
  3245                          
  3246  148a  e5                C4DB8:  PUSH    HL
  3247  148b  eb                        EX      DE,HL
  3248  148c  cd0000                    CALL    C2FCB                   ; convert to single precision real
  3249  148f  e1                        POP     HL
  3250  1490  cd0000                    CALL    C2EB1                   ; push DAC (single)
  3251  1493  cd0000                    CALL    C2FCB                   ; convert to single precision real
  3252  1496  c30000                    JP      J3265
  3253                          
  3254                          ;       Subroutine      Factor Evaluator
  3255                          ;       Inputs          ________________________
  3256                          ;       Outputs         ________________________
  3257                          
  3258  1499  d7                C4DC7:  RST     CHRGTR                  ; get next BASIC character
  3259  149a  ca3c07                    JP      Z,J406A                 ; end of statement, missing operand error
  3260  149d  da0000                    JP      C,C3299                 ; convert text to number
  3261  14a0  cd7a2b                    CALL    C64A8                   ; is upcase letter character ?
  3262  14a3  d26d15                    JP      NC,C4E9B                ; yep, get variable value
  3263  14a6  fe20                      CP      $20                     ; numeric token ?
  3264  14a8  da8a0d                    JP      C,J46B8                 ; yep, get constant value
  3265  14ab  cd70ff                    CALL    H_EVAL
  3266  14ae  3c                        INC     A                       ; function token ?
  3267  14af  cace15                    JP      Z,J4EFC                 ; yep, handle function
  3268  14b2  3d                        DEC     A
  3269  14b3  fef1                      CP      $F1                    ; + token ?
  3270  14b5  28e2                      JR      Z,C4DC7                 ; yep, again
  3271  14b7  fef2                      CP      $F2                    ; - token ?
  3272  14b9  ca5f15                    JP      Z,J4E8D                 ; yep,
  3273  14bc  fe22                      CP      '"'
  3274  14be  ca082d                    JP      Z,C6636                 ; analyze string with " as endmarker (1st char is skipped) and create temporary stringdescriptor and quit
  3275  14c1  fee0                      CP      $E0                    ; NOT token ?
  3276  14c3  ca3516                    JP      Z,J4F63                 ; yep,
  3277  14c6  fe26                      CP      '&'
  3278  14c8  ca8a15                    JP      Z,C4EB8                 ; convert text with radix indication to number
  3279  14cb  fee2                      CP      $E2                    ; ERR token ?
  3280  14cd  200a                      JR      NZ,J4E07                ; nope, other
  3281                          
  3282                          ;       Subroutine      ERR function
  3283                          ;       Inputs          ________________________
  3284                          ;       Outputs         ________________________
  3285                          
  3286  14cf  d7                        RST     CHRGTR                  ; get next BASIC character
  3287  14d0  3a14f4                    LD      A,(ERRFLG)
  3288  14d3  e5                        PUSH    HL
  3289  14d4  cda116                    CALL    C4FCF                   ; byte to DAC
  3290  14d7  e1                        POP     HL
  3291  14d8  c9                        RET
  3292                          
  3293  14d9  fee1              J4E07:  CP      $E1                    ; ERL token ?
  3294  14db  200a                      JR      NZ,J4E15                ; nope, other
  3295                          
  3296                          ;       Subroutine      ERL function
  3297                          ;       Inputs          ________________________
  3298                          ;       Outputs         ________________________
  3299                          
  3300  14dd  d7                        RST     CHRGTR                  ; get next BASIC character
  3301  14de  e5                        PUSH    HL
  3302  14df  2ab3f6                    LD      HL,(ERRLIN)
  3303  14e2  cd0000                    CALL    C3236                   ; convert unsigned integer to single real
  3304  14e5  e1                        POP     HL
  3305  14e6  c9                        RET
  3306                          
  3307  14e7  feed              J4E15:  CP      $ED                    ; POINT token ?
  3308  14e9  cad51e                    JP      Z,J5803                 ; yep, POINT function handler
  3309  14ec  fecb                      CP      $CB                    ; TIME token ?
  3310  14ee  cad23f                    JP      Z,J7900                 ; yep, TIME function handler
  3311  14f1  fec7                      CP      $C7                    ; SPRITE token ?
  3312  14f3  ca5641                    JP      Z,J7A84                 ; yep, SPRITE function handler
  3313  14f6  fec8                      CP      $C8                    ; VDP token ?
  3314  14f8  ca1942                    JP      Z,J7B47                 ; yep, VDP function handler
  3315  14fb  fec9                      CP      $C9                    ; BASE token ?
  3316  14fd  ca9d42                    JP      Z,J7BCB                 ; yep, BASE function handler
  3317  1500  fec1                      CP      $C1                    ; PLAY token ?
  3318  1502  caed3f                    JP      Z,J791B                 ; yep, PLAY function handler
  3319  1505  feea                      CP      $EA                    ; DSKI$ token ?
  3320  1507  ca1043                    JP      Z,J7C3E                 ; yep, DSKI$ function handler
  3321  150a  fee9                      CP      $E9                    ; ATTR$ token ?
  3322  150c  ca1543                    JP      Z,J7C43                 ; yep, ATTR$ function handler
  3323  150f  fee7                      CP      $E7                    ; VARPTR token ?
  3324  1511  2023                      JR      NZ,J4E64                ; nope, other
  3325                          
  3326                          ;       Subroutine      VARPTR function
  3327                          ;       Inputs          ________________________
  3328                          ;       Outputs         ________________________
  3329                          
  3330  1513  d7                        RST     CHRGTR                  ; get next BASIC character
  3331  1514  cf                        RST     SYNCHR
  3332  1515  28                        DEFB    '('                     ; check for (
  3333  1516  fe23                      CP      '#'
  3334  1518  200b                      JR      NZ,J4E53                ; no fileid, varptr for variables
  3335  151a  cded18                    CALL    C521B                   ; skip basic char and evaluate byte operand
  3336  151d  e5                        PUSH    HL
  3337  151e  cd3f31                    CALL    C6A6D                   ; get i/o channel control block
  3338  1521  eb                        EX      DE,HL
  3339  1522  e1                        POP     HL
  3340  1523  1803                      JR      J4E56
  3341                          
  3342  1525  cd2f26            J4E53:  CALL    C5F5D                   ; locate variable (search only)
  3343  1528  cf                J4E56:  RST     SYNCHR
  3344  1529  29                        DEFB    ')'                     ; check for )
  3345  152a  e5                        PUSH    HL
  3346  152b  eb                        EX      DE,HL
  3347  152c  7c                        LD      A,H
  3348  152d  b5                        OR      L                       ; variable found ?
  3349  152e  ca2c0e                    JP      Z,C475A                 ; nope, illegal function call
  3350  1531  cd0000                    CALL    C2F99                   ; put HL in DAC
  3351  1534  e1                        POP     HL
  3352  1535  c9                        RET
  3353                          
  3354  1536  fedd              J4E64:  CP      $DD                    ; USR token ?
  3355  1538  caa716                    JP      Z,J4FD5                 ; yep, USR function handler
  3356  153b  fee5                      CP      $E5                    ; INSTR token ?
  3357  153d  cabd2f                    JP      Z,J68EB                 ; yep, INSTR function handler
  3358  1540  feec                      CP      $EC                    ; INKEY$ token ?
  3359  1542  ca193a                    JP      Z,J7347                 ; yep, INKEY$ function handler
  3360  1545  fee3                      CP      $E3                    ; STRING$ token ?
  3361  1547  cafb2e                    JP      Z,J6829                 ; yep, STRING$ function handler
  3362  154a  fe85                      CP      $85                     ; INPUT token ?
  3363  154c  ca5933                    JP      Z,J6C87                 ; yep, INPUT function handler
  3364  154f  fee8                      CP      $E8                    ; CSRLIN token ?
  3365  1551  cadc3f                    JP      Z,J790A                 ; yep, CSRLIN function handler
  3366  1554  fede                      CP      $DE                    ; FN token ?
  3367  1556  ca1217                    JP      Z,J5040                 ; yep, FN function handler
  3368                          
  3369                          ;       Subroutine      evaluate ( expression )
  3370                          ;       Inputs          ________________________
  3371                          ;       Outputs         ________________________
  3372                          
  3373  1559  cd3413            C4E87:  CALL    C4C62                   ; evaluate ( expression
  3374  155c  cf                        RST     SYNCHR
  3375  155d  29                        DEFB    ')'                     ; check for )
  3376  155e  c9                        RET
  3377                          
  3378  155f  167d              J4E8D:  LD      D,$7D
  3379  1561  cd3913                    CALL    C4C67                   ; skip character and evaluate expression with precendence level
  3380  1564  2abcf6                    LD      HL,(TEMP2)
  3381  1567  e5                        PUSH    HL
  3382  1568  cd0000                    CALL    C2E86                   ; negate
  3383  156b  e1                I4E99:  POP     HL
  3384  156c  c9                        RET
  3385                          
  3386                          ;       Subroutine      get variable value
  3387                          ;       Inputs          ________________________
  3388                          ;       Outputs         ________________________
  3389                          
  3390  156d  cd7625            C4E9B:  CALL    C5EA4                   ; locate variable (without creation)
  3391  1570  e5                        PUSH    HL
  3392  1571  eb                        EX      DE,HL
  3393  1572  22f8f7                    LD      (DAC+2),HL
  3394  1575  ef                        RST     GETYPR                  ; get DAC type
  3395  1576  c40000                    CALL    NZ,C2F08                ; not a string, DAC = HL
  3396  1579  e1                        POP     HL
  3397  157a  c9                        RET
  3398                          
  3399                          
  3400                          ;       Subroutine      __________________________
  3401                          ;       Inputs          ________________________
  3402                          ;       Outputs         ________________________
  3403                          
  3404                          
  3405  157b  7e                C4EA9:  LD      A,(HL)
  3406                          
  3407                          ;       Subroutine      upcase char
  3408                          ;       Inputs          ________________________
  3409                          ;       Outputs         ________________________
  3410                          
  3411  157c  fe61              C4EAA:  CP      'a'
  3412  157e  d8                        RET     C
  3413  157f  fe7b                      CP      'z'+1
  3414  1581  d0                        RET     NC
  3415  1582  e65f                      AND     $5F
  3416  1584  c9                        RET
  3417                          
  3418                          ;       Unused Code
  3419                          ;       Not called from anywhere, leftover from a early Microsoft BASIC
  3420                          
  3421  1585  fe26              N4EB3:  CP      '&'
  3422  1587  c23b0e                    JP      NZ,C4769                ; collect linenumber
  3423                          
  3424                          ;       Subroutine      convert text with radix indication to number
  3425                          ;       Inputs          ________________________
  3426                          ;       Outputs         ________________________
  3427                          
  3428  158a  110000            C4EB8:  LD      DE,0
  3429  158d  d7                        RST     CHRGTR                  ; get next BASIC character
  3430  158e  cd7c15                    CALL    C4EAA
  3431  1591  010201                    LD      BC,$0102
  3432  1594  fe42                      CP      'B'
  3433  1596  280f                      JR      Z,J4ED5
  3434  1598  010803                    LD      BC,$0308
  3435  159b  fe4f                      CP      'O'
  3436  159d  2808                      JR      Z,J4ED5
  3437  159f  011004                    LD      BC,$0410
  3438  15a2  fe48                      CP      'H'
  3439  15a4  c22707                    JP      NZ,J4055                ; nope, syntax error
  3440  15a7  23                J4ED5:  INC     HL
  3441  15a8  7e                        LD      A,(HL)
  3442  15a9  eb                        EX      DE,HL
  3443  15aa  cd7c15                    CALL    C4EAA
  3444  15ad  fe3a                      CP      '9'+1
  3445  15af  3806                      JR      C,J4EE5
  3446  15b1  fe41                      CP      'A'
  3447  15b3  3814                      JR      C,J4EF7
  3448  15b5  d607                      SUB     7
  3449  15b7  d630              J4EE5:  SUB     '0'
  3450  15b9  b9                        CP      C
  3451  15ba  300d                      JR      NC,J4EF7
  3452  15bc  c5                        PUSH    BC
  3453  15bd  29                J4EEB:  ADD     HL,HL
  3454  15be  da3907                    JP      C,J4067                 ; overflow error
  3455  15c1  10fa                      DJNZ    J4EEB
  3456  15c3  c1                        POP     BC
  3457  15c4  b5                        OR      L
  3458  15c5  6f                        LD      L,A
  3459  15c6  eb                        EX      DE,HL
  3460  15c7  18de                      JR      J4ED5
  3461                          
  3462  15c9  cd0000            J4EF7:  CALL    C2F99                   ; put HL in DAC
  3463  15cc  eb                        EX      DE,HL
  3464  15cd  c9                        RET
  3465                          
  3466  15ce  23                J4EFC:  INC     HL
  3467  15cf  7e                        LD      A,(HL)
  3468  15d0  d681                      SUB     $81
  3469  15d2  0600                      LD      B,$0
  3470  15d4  07                        RLCA
  3471  15d5  4f                        LD      C,A
  3472  15d6  c5                        PUSH    BC
  3473  15d7  d7                        RST     CHRGTR                  ; get next BASIC character
  3474  15d8  79                        LD      A,C
  3475  15d9  fe05                      CP      $5
  3476  15db  3016                      JR      NC,J4F21
  3477  15dd  cd3413                    CALL    C4C62                   ; evaluate ( expression
  3478  15e0  cf                        RST     SYNCHR
  3479  15e1  2c                        DEFB    ','                     ; check for ,
  3480  15e2  cd0000                    CALL    C3058                   ; check if string
  3481  15e5  eb                        EX      DE,HL
  3482  15e6  2af8f7                    LD      HL,(DAC+2)
  3483  15e9  e3                        EX      (SP),HL
  3484  15ea  e5                        PUSH    HL
  3485  15eb  eb                        EX      DE,HL
  3486  15ec  cdee18                    CALL    C521C                   ; evaluate byte operand
  3487  15ef  eb                        EX      DE,HL
  3488  15f0  e3                        EX      (SP),HL
  3489  15f1  181a                      JR      J4F3B
  3490                          
  3491  15f3  cd5915            J4F21:  CALL    C4E87                   ; evaluate ( expression )
  3492  15f6  e3                        EX      (SP),HL
  3493  15f7  7d                        LD      A,L
  3494  15f8  fe0c                      CP      $C
  3495  15fa  380d                      JR      C,J4F37
  3496                          
  3497                          ;       Subroutine      __________________________
  3498                          ;       Inputs          ________________________
  3499                          ;       Outputs         ________________________
  3500                          
  3501  15fc  fe1b              C4F2A:  CP      $1B
  3502  15fe  cd75ff                    CALL    H_OKNO
  3503  1601  3006                      JR      NC,J4F37
  3504  1603  ef                        RST     GETYPR                  ; get DAC type
  3505  1604  e5                        PUSH    HL
  3506  1605  dc0000                    CALL    C,C303A                 ; not a double real, convert DAC to double real
  3507  1608  e1                        POP     HL
  3508  1609  116b15            J4F37:  LD      DE,I4E99
  3509  160c  d5                        PUSH    DE
  3510  160d  01b000            J4F3B:  LD      BC,I39DE
  3511  1610  cd7aff                    CALL    H_FING
  3512                          
  3513                          ;       Subroutine      __________________________
  3514                          ;       Inputs          ________________________
  3515                          ;       Outputs         ________________________
  3516                          
  3517  1613  09                C4F41:  ADD     HL,BC
  3518  1614  4e                        LD      C,(HL)
  3519  1615  23                        INC     HL
  3520  1616  66                        LD      H,(HL)
  3521  1617  69                        LD      L,C
  3522  1618  e9                        JP      (HL)
  3523                          
  3524                          
  3525                          ;       Subroutine      __________________________
  3526                          ;       Inputs          ________________________
  3527                          ;       Outputs         ________________________
  3528                          
  3529                          
  3530  1619  15                C4F47:  DEC     D
  3531  161a  fef2                      CP      $F2
  3532  161c  c8                        RET     Z
  3533  161d  fe2d                      CP      '-'
  3534  161f  c8                        RET     Z
  3535  1620  14                        INC     D
  3536  1621  fe2b                      CP      '+'
  3537  1623  c8                        RET     Z
  3538  1624  fef1                      CP      $F1
  3539  1626  c8                        RET     Z
  3540  1627  2b                        DEC     HL
  3541  1628  c9                        RET
  3542                          
  3543                          ;       Subroutine      apply infix relational operator
  3544                          ;       Inputs          ________________________
  3545                          ;       Outputs         ________________________
  3546                          
  3547                          
  3548  1629  3c                I4F57:  INC     A
  3549  162a  8f                        ADC     A,A
  3550  162b  c1                        POP     BC
  3551  162c  a0                        AND     B
  3552  162d  c6ff                      ADD     A,$FF
  3553  162f  9f                        SBC     A,A
  3554  1630  cd0000                    CALL    C2E9A
  3555  1633  1812                      JR      J4F75
  3556                          
  3557  1635  165a              J4F63:  LD      D,$5A
  3558  1637  cd3913                    CALL    C4C67                   ; skip character and evaluate expression with precendence level
  3559  163a  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  3560  163d  7d                        LD      A,L
  3561  163e  2f                        CPL
  3562  163f  6f                        LD      L,A
  3563  1640  7c                        LD      A,H
  3564  1641  2f                        CPL
  3565  1642  67                        LD      H,A
  3566  1643  22f8f7                    LD      (DAC+2),HL
  3567  1646  c1                        POP     BC
  3568  1647  c34813            J4F75:  JP      J4C76
  3569                          
  3570                          ;       Subroutine      apply infix logical operator
  3571                          ;       Inputs          ________________________
  3572                          ;       Outputs         ________________________
  3573                          
  3574                          
  3575  164a  78                I4F78:  LD      A,B
  3576  164b  f5                        PUSH    AF
  3577  164c  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  3578  164f  f1                        POP     AF
  3579  1650  d1                        POP     DE
  3580  1651  fe7a                      CP      $7A
  3581  1653  ca0000                    JP      Z,C323A                 ; integer mod
  3582  1656  fe7b                      CP      $7B
  3583  1658  ca0000                    JP      Z,C31E6                 ; integer divide
  3584  165b  01a316                    LD      BC,I4FD1
  3585  165e  c5                        PUSH    BC
  3586  165f  fe46                      CP      $46
  3587  1661  2006                      JR      NZ,J4F97
  3588  1663  7b                        LD      A,E
  3589  1664  b5                        OR      L
  3590  1665  6f                        LD      L,A
  3591  1666  7c                        LD      A,H
  3592  1667  b2                        OR      D
  3593  1668  c9                        RET
  3594                          
  3595  1669  fe50              J4F97:  CP      $50
  3596  166b  2006                      JR      NZ,J4FA1
  3597  166d  7b                        LD      A,E
  3598  166e  a5                        AND     L
  3599  166f  6f                        LD      L,A
  3600  1670  7c                        LD      A,H
  3601  1671  a2                        AND     D
  3602  1672  c9                        RET
  3603                          
  3604  1673  fe3c              J4FA1:  CP      $3C
  3605  1675  2006                      JR      NZ,J4FAB
  3606  1677  7b                        LD      A,E
  3607  1678  ad                        XOR     L
  3608  1679  6f                        LD      L,A
  3609  167a  7c                        LD      A,H
  3610  167b  aa                        XOR     D
  3611  167c  c9                        RET
  3612                          
  3613  167d  fe32              J4FAB:  CP      $32
  3614  167f  2008                      JR      NZ,J4FB7
  3615  1681  7b                        LD      A,E
  3616  1682  ad                        XOR     L
  3617  1683  2f                        CPL
  3618  1684  6f                        LD      L,A
  3619                          
  3620                          ;       Subroutine      __________________________
  3621                          ;       Inputs          ________________________
  3622                          ;       Outputs         ________________________
  3623                          
  3624  1685  7c                C4FB3:  LD      A,H
  3625  1686  aa                        XOR     D
  3626  1687  2f                        CPL
  3627  1688  c9                        RET
  3628                          
  3629  1689  7d                J4FB7:  LD      A,L
  3630  168a  2f                        CPL
  3631  168b  a3                        AND     E
  3632  168c  2f                        CPL
  3633  168d  6f                        LD      L,A
  3634  168e  7c                        LD      A,H
  3635  168f  2f                        CPL
  3636  1690  a2                        AND     D
  3637  1691  2f                        CPL
  3638  1692  c9                        RET
  3639                          
  3640  1693  b7                J4FC1:  OR      A
  3641  1694  ed52                      SBC     HL,DE
  3642  1696  c30000                    JP      C3236                   ; convert unsigned integer to single real
  3643                          
  3644                          ;       Subroutine      LPOS function
  3645                          ;       Inputs          ________________________
  3646                          ;       Outputs         ________________________
  3647                          
  3648                          
  3649  1699  3a15f4            C4FC7:  LD      A,(LPTPOS)
  3650  169c  1803                      JR      C4FCF                   ; byte to DAC
  3651                          
  3652                          ;       Subroutine      POS function
  3653                          ;       Inputs          ________________________
  3654                          ;       Outputs         ________________________
  3655                          
  3656                          
  3657  169e  3a61f6            C4FCC:  LD      A,(TTYPOS)
  3658                          
  3659                          ;       Subroutine      put byte in DAC
  3660                          ;       Inputs          ________________________
  3661                          ;       Outputs         ________________________
  3662                          
  3663  16a1  6f                C4FCF:  LD      L,A
  3664  16a2  af                        XOR     A
  3665  16a3  67                I4FD1:  LD      H,A
  3666  16a4  c30000                    JP      C2F99                   ; put HL in DAC
  3667                          
  3668                          ;       Subroutine      USR function
  3669                          ;       Inputs          ________________________
  3670                          ;       Outputs         ________________________
  3671                          ;       Remark  user machinecode subroutine gets the following parameters:
  3672                          ;               HL = DAC, A = variabletype, DE = start of string
  3673                          
  3674  16a7  cdc616            J4FD5:  CALL    C4FF4                   ; get usernumber and USRTAB entry
  3675  16aa  d5                        PUSH    DE
  3676  16ab  cd5915                    CALL    C4E87                   ; evaluate ( expression )
  3677  16ae  e3                        EX      (SP),HL
  3678  16af  5e                        LD      E,(HL)
  3679  16b0  23                        INC     HL
  3680  16b1  56                        LD      D,(HL)
  3681  16b2  210000                    LD      HL,J3297
  3682  16b5  e5                        PUSH    HL                      ; return here to restore basictext pointer after user subroutine
  3683  16b6  d5                        PUSH    DE
  3684  16b7  3a63f6                    LD      A,(VALTYP)
  3685  16ba  f5                        PUSH    AF
  3686  16bb  fe03                      CP      3
  3687  16bd  cca52e                    CALL    Z,C67D3                 ; parameter is a string, free temporary string in DAC
  3688  16c0  f1                        POP     AF
  3689  16c1  eb                        EX      DE,HL
  3690  16c2  21f6f7                    LD      HL,DAC
  3691  16c5  c9                        RET                             ; start user machinecode subroutine
  3692                          
  3693                          
  3694                          ;       Subroutine      __________________________
  3695                          ;       Inputs          ________________________
  3696                          ;       Outputs         ________________________
  3697                          
  3698                          
  3699  16c6  d7                C4FF4:  RST     CHRGTR                  ; get next BASIC character
  3700  16c7  010000                    LD      BC,0
  3701  16ca  fe1b                      CP      $1B
  3702  16cc  300b                      JR      NC,J5007
  3703  16ce  fe11                      CP      $11
  3704  16d0  3807                      JR      C,J5007
  3705  16d2  d7                        RST     CHRGTR                  ; get next BASIC character
  3706  16d3  3a6af6                    LD      A,(CONLO)
  3707  16d6  b7                        OR      A
  3708  16d7  17                        RLA
  3709  16d8  4f                        LD      C,A
  3710  16d9  eb                J5007:  EX      DE,HL
  3711  16da  219af3                    LD      HL,USRTAB
  3712  16dd  09                        ADD     HL,BC
  3713  16de  eb                        EX      DE,HL
  3714  16df  c9                        RET
  3715                          
  3716                          ;       Subroutine      DEF USR statement
  3717                          ;       Inputs          ________________________
  3718                          ;       Outputs         ________________________
  3719                          
  3720                          
  3721  16e0  cdc616            J500E:  CALL    C4FF4
  3722  16e3  d5                        PUSH    DE
  3723  16e4  cf                        RST     SYNCHR
  3724  16e5  ef                        DEFB    $EF                    ; check for =
  3725  16e6  cd011b                    CALL    C542F                   ; evaluate address operand
  3726  16e9  e3                        EX      (SP),HL
  3727  16ea  73                        LD      (HL),E
  3728  16eb  23                        INC     HL
  3729  16ec  72                        LD      (HL),D
  3730  16ed  e1                        POP     HL
  3731  16ee  c9                        RET
  3732                          
  3733                          ;       Subroutine      DEF statement
  3734                          ;       Inputs          ________________________
  3735                          ;       Outputs         ________________________
  3736                          
  3737                          
  3738  16ef  fedd              C501D:  CP      $DD
  3739  16f1  28ed                      JR      Z,J500E                 ; USR token, DEFUSR
  3740  16f3  cd7318                    CALL    C51A1                   ; check for FN and create functionname var
  3741  16f6  cd6518                    CALL    C5193                   ; illegal direct when in direct mode
  3742  16f9  eb                        EX      DE,HL
  3743  16fa  73                        LD      (HL),E
  3744  16fb  23                        INC     HL
  3745  16fc  72                        LD      (HL),D
  3746  16fd  eb                        EX      DE,HL                   ; save pointer to functiondefinition
  3747  16fe  7e                        LD      A,(HL)
  3748  16ff  fe28                      CP      '('
  3749  1701  c22d0f                    JP      NZ,C485B                ; no parameters, skip to next statement and continue
  3750  1704  d7                        RST     CHRGTR                  ; get next BASIC character
  3751  1705  cd7625            J5033:  CALL    C5EA4                   ; locate variable
  3752  1708  7e                        LD      A,(HL)
  3753  1709  fe29                      CP      ')'
  3754  170b  ca2d0f                    JP      Z,C485B                 ; end of parameters, skip to next statement and continue
  3755  170e  cf                        RST     SYNCHR
  3756  170f  2c                        DEFB    ','                     ; check for ,
  3757  1710  18f3                      JR      J5033                   ; parse through parameters
  3758                          
  3759                          ;       Subroutine      FN function
  3760                          ;       Inputs          ________________________
  3761                          ;       Outputs         ________________________
  3762                          
  3763  1712  cd7318            J5040:  CALL    C51A1                   ; check for FN and locate functionname var
  3764  1715  3a63f6                    LD      A,(VALTYP)
  3765  1718  b7                        OR      A
  3766  1719  f5                        PUSH    AF
  3767  171a  22bcf6                    LD      (TEMP2),HL              ; save BASIC pointer
  3768  171d  eb                        EX      DE,HL
  3769  171e  7e                        LD      A,(HL)
  3770  171f  23                        INC     HL
  3771  1720  66                        LD      H,(HL)
  3772  1721  6f                        LD      L,A                     ; pointer to functiondefinition
  3773  1722  7c                        LD      A,H
  3774  1723  b5                        OR      L
  3775  1724  ca3307                    JP      Z,J4061                 ; not defined, undefined user function error
  3776  1727  7e                        LD      A,(HL)
  3777  1728  fe28                      CP      '('
  3778  172a  c2c617                    JP      NZ,J50F4                ; no parameters, skip
  3779  172d  d7                        RST     CHRGTR                  ; get next BASIC character
  3780  172e  229df6                    LD      (TEMP3),HL              ; save functiondefinition pointer
  3781  1731  eb                        EX      DE,HL
  3782  1732  2abcf6                    LD      HL,(TEMP2)
  3783  1735  cf                        RST     SYNCHR
  3784  1736  28                        DEFB    '('                     ; check for (
  3785  1737  af                        XOR     A
  3786  1738  f5                        PUSH    AF
  3787  1739  e5                        PUSH    HL
  3788  173a  eb                        EX      DE,HL
  3789  173b  3e80              J5069:  LD      A,$80
  3790  173d  32a5f6                    LD      (SUBFLG),A              ; variable search flag = function variable
  3791  1740  cd7625                    CALL    C5EA4                   ; locate variable
  3792  1743  eb                        EX      DE,HL
  3793  1744  e3                        EX      (SP),HL
  3794  1745  3a63f6                    LD      A,(VALTYP)
  3795  1748  f5                        PUSH    AF
  3796  1749  d5                        PUSH    DE
  3797  174a  cd3613                    CALL    C4C64                   ; evaluate expression
  3798  174d  22bcf6                    LD      (TEMP2),HL              ; save basictext pointer
  3799  1750  e1                        POP     HL
  3800  1751  229df6                    LD      (TEMP3),HL
  3801  1754  f1                        POP     AF
  3802  1755  cd4c18                    CALL    C517A                   ; convert to DAC to new type
  3803  1758  0e04                      LD      C,4
  3804  175a  cd3029                    CALL    C625E                   ; check if enough stackspace for 4 words
  3805  175d  21f8ff                    LD      HL,-8
  3806  1760  39                        ADD     HL,SP
  3807  1761  f9                        LD      SP,HL
  3808  1762  cd0000                    CALL    C2F10                   ; HL = DAC
  3809  1765  3a63f6                    LD      A,(VALTYP)
  3810  1768  f5                        PUSH    AF
  3811  1769  2abcf6                    LD      HL,(TEMP2)              ; restore basictext pointer
  3812  176c  7e                        LD      A,(HL)
  3813  176d  fe29                      CP      ')'
  3814  176f  280e                      JR      Z,J50AD
  3815  1771  cf                        RST     SYNCHR
  3816  1772  2c                        DEFB    ','                     ; check for ,
  3817  1773  e5                        PUSH    HL
  3818  1774  2a9df6                    LD      HL,(TEMP3)
  3819  1777  cf                        RST     SYNCHR
  3820  1778  2c                        DEFB    ','                     ; check for ,
  3821  1779  18c0                      JR      J5069
  3822                          
  3823  177b  f1                I50A9:  POP     AF
  3824  177c  324ef7                    LD      (PRMLN2),A
  3825  177f  f1                J50AD:  POP     AF
  3826  1780  b7                        OR      A
  3827  1781  2838                      JR      Z,J50E9
  3828  1783  3263f6                    LD      (VALTYP),A
  3829  1786  210000                    LD      HL,0
  3830  1789  39                        ADD     HL,SP
  3831  178a  cd0000                    CALL    C2F08                   ; DAC = HL
  3832  178d  210800                    LD      HL,8
  3833  1790  39                        ADD     HL,SP
  3834  1791  f9                        LD      SP,HL
  3835  1792  d1                        POP     DE
  3836  1793  2e03                      LD      L,$3
  3837  1795  1b                        DEC     DE
  3838  1796  1b                        DEC     DE
  3839  1797  1b                        DEC     DE
  3840  1798  3a63f6                    LD      A,(VALTYP)
  3841  179b  85                        ADD     A,L
  3842  179c  47                        LD      B,A
  3843  179d  3a4ef7                    LD      A,(PRMLN2)
  3844  17a0  4f                        LD      C,A
  3845  17a1  80                        ADD     A,B
  3846  17a2  fe64                      CP      $64
  3847  17a4  d22c0e                    JP      NC,C475A                ; illegal function call
  3848  17a7  f5                        PUSH    AF
  3849  17a8  7d                        LD      A,L
  3850  17a9  0600                      LD      B,$0
  3851  17ab  2150f7                    LD      HL,PARM2
  3852  17ae  09                        ADD     HL,BC
  3853  17af  4f                        LD      C,A
  3854  17b0  cd6018                    CALL    C518E
  3855  17b3  017b17                    LD      BC,I50A9
  3856  17b6  c5                        PUSH    BC
  3857  17b7  c5                        PUSH    BC
  3858  17b8  c3700f                    JP      J489E
  3859                          
  3860  17bb  2abcf6            J50E9:  LD      HL,(TEMP2)
  3861  17be  d7                        RST     CHRGTR                  ; get next BASIC character
  3862  17bf  e5                        PUSH    HL
  3863  17c0  2a9df6                    LD      HL,(TEMP3)
  3864  17c3  cf                        RST     SYNCHR
  3865  17c4  29                        DEFB    ')'                     ; check for )
  3866  17c5  3e                        DEFB    $3E                    ; LD A,xx, skip next instruction
  3867  17c6  d5                J50F4:  PUSH    DE
  3868  17c7  229df6                    LD      (TEMP3),HL
  3869  17ca  3ae6f6                    LD      A,(PRMLEN)
  3870  17cd  c604                      ADD     A,4
  3871  17cf  f5                        PUSH    AF
  3872  17d0  0f                        RRCA
  3873  17d1  4f                        LD      C,A                     ; number of words
  3874  17d2  cd3029                    CALL    C625E                   ; check if enough stackspace
  3875  17d5  f1                        POP     AF
  3876  17d6  4f                        LD      C,A
  3877  17d7  2f                        CPL
  3878  17d8  3c                        INC     A
  3879  17d9  6f                        LD      L,A
  3880  17da  26ff                      LD      H,$FF
  3881  17dc  39                        ADD     HL,SP
  3882  17dd  f9                        LD      SP,HL
  3883  17de  e5                        PUSH    HL
  3884  17df  11e4f6                    LD      DE,PRMSTK
  3885  17e2  cd6018                    CALL    C518E
  3886  17e5  e1                        POP     HL
  3887  17e6  22e4f6                    LD      (PRMSTK),HL
  3888  17e9  2a4ef7                    LD      HL,(PRMLN2)
  3889  17ec  22e6f6                    LD      (PRMLEN),HL
  3890  17ef  44                        LD      B,H
  3891  17f0  4d                        LD      C,L
  3892  17f1  21e8f6                    LD      HL,PARM1
  3893  17f4  1150f7                    LD      DE,PARM2
  3894  17f7  cd6018                    CALL    C518E
  3895  17fa  67                        LD      H,A
  3896  17fb  6f                        LD      L,A
  3897  17fc  224ef7                    LD      (PRMLN2),HL
  3898  17ff  2abaf7                    LD      HL,(FUNACT)
  3899  1802  23                        INC     HL
  3900  1803  22baf7                    LD      (FUNACT),HL
  3901  1806  7c                        LD      A,H
  3902  1807  b5                        OR      L
  3903  1808  32b7f7                    LD      (NOFUNS),A
  3904  180b  2a9df6                    LD      HL,(TEMP3)
  3905  180e  cd3113                    CALL    C4C5F                   ; evaluate = expression
  3906  1811  2b                        DEC     HL
  3907  1812  d7                        RST     CHRGTR                  ; end of statement ?
  3908  1813  c22707                    JP      NZ,J4055                ; nope, syntax error
  3909  1816  ef                        RST     GETYPR                  ; get DAC type
  3910  1817  200f                      JR      NZ,J5156                ; not a string,
  3911  1819  1198f6                    LD      DE,DSCTMP
  3912  181c  2af8f7                    LD      HL,(DAC+2)
  3913  181f  e7                        RST     DCOMPR
  3914  1820  3806                      JR      C,J5156
  3915  1822  cde32c                    CALL    C6611                   ; copy string to new temporary string
  3916  1825  cd2a2d                    CALL    C6658                   ; push descriptor to temporary desciptor heap
  3917  1828  2ae4f6            J5156:  LD      HL,(PRMSTK)
  3918  182b  54                        LD      D,H
  3919  182c  5d                        LD      E,L
  3920  182d  23                        INC     HL
  3921  182e  23                        INC     HL
  3922  182f  4e                        LD      C,(HL)
  3923  1830  23                        INC     HL
  3924  1831  46                        LD      B,(HL)
  3925  1832  03                        INC     BC
  3926  1833  03                        INC     BC
  3927  1834  03                        INC     BC
  3928  1835  03                        INC     BC
  3929  1836  21e4f6                    LD      HL,PRMSTK
  3930  1839  cd6018                    CALL    C518E
  3931  183c  eb                        EX      DE,HL
  3932  183d  f9                        LD      SP,HL
  3933  183e  2abaf7                    LD      HL,(FUNACT)
  3934  1841  2b                        DEC     HL
  3935  1842  22baf7                    LD      (FUNACT),HL
  3936  1845  7c                        LD      A,H
  3937  1846  b5                        OR      L
  3938  1847  32b7f7                    LD      (NOFUNS),A
  3939  184a  e1                        POP     HL
  3940  184b  f1                        POP     AF
  3941                          
  3942                          ;       Subroutine      convert DAC to other type
  3943                          ;       Inputs          A = new type, (VALTYP) = current type, (DAC) = current value
  3944                          ;       Outputs         ________________________
  3945                          
  3946  184c  e5                C517A:  PUSH    HL
  3947  184d  e607                      AND     $7
  3948  184f  211904                    LD      HL,I3D47
  3949  1852  4f                        LD      C,A
  3950  1853  0600                      LD      B,$0
  3951  1855  09                        ADD     HL,BC
  3952  1856  cd1316                    CALL    C4F41
  3953  1859  e1                        POP     HL
  3954  185a  c9                        RET
  3955                          
  3956  185b  1a                J5189:  LD      A,(DE)
  3957  185c  77                        LD      (HL),A
  3958  185d  23                        INC     HL
  3959  185e  13                        INC     DE
  3960  185f  0b                        DEC     BC
  3961                          
  3962                          ;       Subroutine      __________________________
  3963                          ;       Inputs          ________________________
  3964                          ;       Outputs         ________________________
  3965                          
  3966  1860  78                C518E:  LD      A,B
  3967  1861  b1                        OR      C
  3968  1862  20f7                      JR      NZ,J5189
  3969  1864  c9                        RET
  3970                          
  3971                          ;       Subroutine      __________________________
  3972                          ;       Inputs          ________________________
  3973                          ;       Outputs         ________________________
  3974                          
  3975  1865  e5                C5193:  PUSH    HL
  3976  1866  2a1cf4                    LD      HL,(CURLIN)
  3977  1869  23                        INC     HL
  3978  186a  7c                        LD      A,H
  3979  186b  b5                        OR      L                       ; interpreter in direct mode ?
  3980  186c  e1                        POP     HL
  3981  186d  c0                        RET     NZ                      ; nope, quit
  3982  186e  1e0c                      LD      E,12
  3983  1870  c34107                    JP      J406F                   ; illegal direct error
  3984                          
  3985                          ;       Subroutine      __________________________
  3986                          ;       Inputs          ________________________
  3987                          ;       Outputs         ________________________
  3988                          
  3989  1873  cf                C51A1:  RST     SYNCHR
  3990  1874  de                        DEFB    $DE                    ; check for FN token
  3991  1875  3e80                      LD      A,$80
  3992  1877  32a5f6                    LD      (SUBFLG),A              ; variable search flag = function variable
  3993  187a  b6                        OR      (HL)
  3994  187b  4f                        LD      C,A                     ; first varletter with b7 set
  3995  187c  c37b25                    JP      J5EA9                   ; locate functionname variable
  3996                          
  3997                          ;       Subroutine      check if function token allowed as statement
  3998                          ;       Inputs          ________________________
  3999                          ;       Outputs         ________________________
  4000                          
  4001  187f  fe7e              J51AD:  CP      $FF-$81               ; function token header ?
  4002  1881  2015                      JR      NZ,J51C6                ; nope, syntax error
  4003  1883  23                        INC     HL
  4004  1884  7e                        LD      A,(HL)                  ; get function token
  4005  1885  23                        INC     HL
  4006  1886  fe83                      CP      $83                     ; MID$ ?
  4007  1888  ca4030                    JP      Z,J696E                 ; yep, execute MID$ statement
  4008  188b  fea3                      CP      $A3                    ; STRIG ?
  4009  188d  ca913e                    JP      Z,J77BF                 ; yep, execute STRIG statement
  4010  1890  fe85                      CP      $85                     ; INT ?
  4011  1892  ca833e                    JP      Z,J77B1                 ; yep, check if INTERVAL
  4012  1895  cd7fff                    CALL    H_ISMI                  ; hook for more function tokens as statement
  4013  1898  c32707            J51C6:  JP      J4055                   ; syntax error
  4014                          
  4015                          ;       Subroutine      WIDTH statement
  4016                          ;       Inputs          ________________________
  4017                          ;       Outputs         ________________________
  4018                          
  4019                          
  4020  189b  cdee18            C51C9:  CALL    C521C                   ; evaluate byte operand
  4021  189e  cd84ff                    CALL    H_WIDT
  4022  18a1  a7                        AND     A                       ; width 0 ?
  4023  18a2  280d                      jr      z,A51DF
  4024  18a4  3ab0fc                    ld      a,(OLDSCR)
  4025  18a7  a7                        and     a
  4026  18a8  7b                        ld      a,e
  4027  18a9  2804                      jr      z,A51DD
  4028  18ab  fe21                      cp      32+1
  4029  18ad  3002                      jr      nc,A51DF
  4030  18af  fe29              A51DD:  cp      40+1
  4031  18b1  d22c0e            A51DF:  jp      nc,C475A
  4032  18b4  3ab0f3                    ld      a,(LINLEN)
  4033  18b7  bb                        cp      e
  4034  18b8  c8                        ret     z
  4035  18b9  3e0c                      ld      a,$0C
  4036  18bb  df                        rst     OUTDO
  4037  18bc  7b                        ld      a,e
  4038  18bd  32b0f3                    ld      (LINLEN),a
  4039  18c0  3ab0fc                    ld      a,(OLDSCR)
  4040  18c3  3d                        dec     a
  4041  18c4  7b                        ld      a,e
  4042  18c5  2005                      jr      nz,A51FA
  4043  18c7  32aff3                    ld      (LINL32),a
  4044  18ca  1803                      jr      A51FD
  4045                          
  4046  18cc  32aef3            A51FA:  ld      (LINL40),a
  4047  18cf  3e0c              A51FD:  ld      a,$0C
  4048  18d1  df                        rst     OUTDO
  4049  18d2  7b                        ld      a,e
  4050  18d3  d60e              A5201:  sub     $0E
  4051  18d5  30fc                      jr      nc,A5201
  4052  18d7  c61c                      add     a,$1C
  4053  18d9  2f                        cpl
  4054  18da  3c                        inc     a
  4055  18db  83                        add     a,e
  4056  18dc  32b2f3                    ld      (CLMLST),a
  4057  18df  c9                        ret
  4058                          
  4059                          ;       Subroutine      __________________________
  4060                          ;       Inputs          ________________________
  4061                          ;       Outputs         ________________________
  4062                          
  4063  18e0  d7                C520E:  RST     CHRGTR                  ; get next BASIC character
  4064                          
  4065                          ;       Subroutine      evaluate integer operand
  4066                          ;       Inputs          ________________________
  4067                          ;       Outputs         ________________________
  4068                          
  4069  18e1  cd3613            C520F:  CALL    C4C64                   ; evaluate expression
  4070                          
  4071                          ;       Subroutine      __________________________
  4072                          ;       Inputs          ________________________
  4073                          ;       Outputs         ________________________
  4074                          
  4075  18e4  e5                C5212:  PUSH    HL
  4076  18e5  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  4077  18e8  eb                        EX      DE,HL
  4078  18e9  e1                        POP     HL
  4079  18ea  7a                        LD      A,D
  4080  18eb  b7                        OR      A
  4081  18ec  c9                        RET
  4082                          
  4083                          ;       Subroutine      skip basic char and evaluate byte operand
  4084                          ;       Inputs          ________________________
  4085                          ;       Outputs         ________________________
  4086                          
  4087  18ed  d7                C521B:  RST     CHRGTR                  ; get next BASIC character
  4088                          
  4089                          ;       Subroutine      evaluate byte operand
  4090                          ;       Inputs          ________________________
  4091                          ;       Outputs         ________________________
  4092                          
  4093  18ee  cd3613            C521C:  CALL    C4C64                   ; evaluate expression
  4094                          
  4095                          ;       Subroutine      check for byte value
  4096                          ;       Inputs          ________________________
  4097                          ;       Outputs         ________________________
  4098                          
  4099  18f1  cde418            C521F:  CALL    C5212
  4100  18f4  c22c0e                    JP      NZ,C475A                ; illegal function call
  4101  18f7  2b                        DEC     HL
  4102  18f8  d7                        RST     CHRGTR                  ; set end of statement flag
  4103  18f9  7b                        LD      A,E
  4104  18fa  c9                        RET
  4105                          
  4106                          ;       Subroutine      LLIST statement
  4107                          ;       Inputs          ________________________
  4108                          ;       Outputs         ________________________
  4109                          
  4110  18fb  3e01              C5229:  LD      A,1
  4111  18fd  3216f4                    LD      (PRTFLG),A              ; interpreter output to printer
  4112                          
  4113                          ;       Subroutine      LIST statement
  4114                          ;       Inputs          ________________________
  4115                          ;       Outputs         ________________________
  4116                          
  4117  1900  cd89ff            C522E:  CALL    H_LIST
  4118  1903  c1                        POP     BC
  4119  1904  cd4b09                    CALL    C4279                   ; evaluate linenumber (range) and search start linenumber
  4120  1907  c5                        PUSH    BC                      ; save pointer to startline
  4121  1908  21ffff            J5236:  LD      HL,$FFFF
  4122  190b  221cf4                    LD      (CURLIN),HL             ; interpreter in direct mode
  4123  190e  e1                        POP     HL                      ; pointer startline
  4124  190f  d1                        POP     DE                      ; end linenumber
  4125  1910  4e                        LD      C,(HL)
  4126  1911  23                        INC     HL
  4127  1912  46                        LD      B,(HL)                  ; linepointer
  4128  1913  23                        INC     HL
  4129  1914  78                        LD      A,B
  4130  1915  b1                        OR      C                       ; end of program ?
  4131  1916  caf107                    JP      Z,J411F                 ; yep, ok and mainloop
  4132  1919  cd0000                    CALL    ISFLIO                  ; interpreter input/output device = file ?
  4133  191c  cc0000                    CALL    Z,ISCNTC                ; nope, check CTRL-STOP
  4134  191f  c5                        PUSH    BC                      ; save start of next line
  4135  1920  4e                        LD      C,(HL)
  4136  1921  23                        INC     HL
  4137  1922  46                        LD      B,(HL)                  ; linenumber
  4138  1923  23                        INC     HL
  4139  1924  c5                        PUSH    BC
  4140  1925  e3                        EX      (SP),HL
  4141  1926  eb                        EX      DE,HL
  4142  1927  e7                        RST     DCOMPR                  ; compare with end linenumber
  4143  1928  c1                        POP     BC
  4144  1929  daf007                    JP      C,J411E                 ; all done, ok and mainloop (+POP)
  4145  192c  e3                        EX      (SP),HL
  4146  192d  e5                        PUSH    HL
  4147  192e  c5                        PUSH    BC
  4148  192f  eb                        EX      DE,HL
  4149  1930  22b5f6                    LD      (DOT),HL
  4150  1933  cd0000                    CALL    C3412                   ; number to interpreter output
  4151  1936  e1                        POP     HL
  4152  1937  7e                        LD      A,(HL)
  4153  1938  fe09                      CP      $9                     ; TAB ?
  4154  193a  2803                      JR      Z,J526D                 ; yep, skip space
  4155  193c  3e20                      LD      A,' '
  4156  193e  df                        RST     OUTDO                   ; space to interpreter output
  4157  193f  cd5619            J526D:  CALL    C5284                   ; decode BASIC line
  4158  1942  215ef5                    LD      HL,BUF
  4159  1945  cd4d19                    CALL    C527B                   ; string to interpreter output
  4160  1948  cdfa39                    CALL    C7328                   ; newline to interpreter output
  4161  194b  18bb                      JR      J5236                   ; next line
  4162                          
  4163                          ;       Subroutine      string to interpreter output
  4164                          ;       Inputs          ________________________
  4165                          ;       Outputs         ________________________
  4166                          
  4167  194d  7e                C527B:  LD      A,(HL)
  4168  194e  b7                        OR      A
  4169  194f  c8                        RET     Z
  4170  1950  cd393a                    CALL    C7367                   ; char to interpreter output, LF expanded
  4171                          
  4172                          ;       Subroutine      __________________________
  4173                          ;       Inputs          ________________________
  4174                          ;       Outputs         ________________________
  4175                          
  4176  1953  23                C5281:  INC     HL
  4177  1954  18f7                      JR      C527B
  4178                          
  4179                          ;       Subroutine      decode BASIC line
  4180                          ;       Inputs          ________________________
  4181                          ;       Outputs         ________________________
  4182                          
  4183  1956  015ef5            C5284:  LD      BC,BUF
  4184  1959  16ff                      LD      D,255
  4185  195b  af                        XOR     A
  4186  195c  3264f6                    LD      (DORES),A               ; clear decode status
  4187  195f  1804                      JR      J5293
  4188                          
  4189  1961  03                J528F:  INC     BC
  4190  1962  23                        INC     HL
  4191  1963  15                        DEC     D
  4192  1964  c8                        RET     Z                       ; buffer full, quit
  4193  1965  7e                J5293:  LD      A,(HL)
  4194  1966  b7                        OR      A                       ; end of BASIC line ?
  4195  1967  02                        LD      (BC),A
  4196  1968  c8                        RET     Z                       ; yep, quit
  4197  1969  fe0b                      CP      $B                     ; $1-$A ?
  4198  196b  3825                      JR      C,J52C0                 ; yep, next BASIC char
  4199  196d  fe20                      CP      $20                     ; $B-$1F ?
  4200  196f  da331a                    JP      C,J5361                 ; yep, numeric token
  4201  1972  fe22                      CP      '"'                     ; begin/end of string ?
  4202  1974  200a                      JR      NZ,J52AE                ; nope,
  4203  1976  3a64f6                    LD      A,(DORES)
  4204  1979  ee01                      XOR     $1
  4205  197b  3264f6                    LD      (DORES),A               ; toggle string status
  4206  197e  3e22                      LD      A,'"'
  4207  1980  fe3a              J52AE:  CP      ':'                     ; statement seperator ?
  4208  1982  200e                      JR      NZ,J52C0                ; nope,
  4209  1984  3a64f6                    LD      A,(DORES)
  4210  1987  1f                        RRA                             ; in string ?
  4211  1988  3806                      JR      C,J52BE                 ; yep,
  4212  198a  17                        RLA
  4213  198b  e6fd                      AND     $FD
  4214  198d  3264f6                    LD      (DORES),A               ; clear data statement flag
  4215  1990  3e3a              J52BE:  LD      A,':'
  4216  1992  b7                J52C0:  OR      A                       ; $1-$7F ?
  4217  1993  f26119                    JP      P,J528F                 ; yep, next BASIC char
  4218  1996  3a64f6                    LD      A,(DORES)
  4219  1999  1f                        RRA                             ; in string ?
  4220  199a  382e                      JR      C,J52F8                 ; yep, next BASIC char
  4221  199c  1f                        RRA
  4222  199d  1f                        RRA                             ; in rem statement ?
  4223  199e  303e                      JR      NC,J530C                ; nope,
  4224  19a0  7e                        LD      A,(HL)
  4225  19a1  fee6                      CP      $E6                    ; ' token ?
  4226  19a3  e5                        PUSH    HL
  4227  19a4  c5                        PUSH    BC
  4228  19a5  21c719                    LD      HL,I52F5
  4229  19a8  e5                        PUSH    HL                      ; when quit, next BASIC char
  4230  19a9  c0                        RET     NZ                      ; nope, next BASIC char
  4231  19aa  0b                        DEC     BC
  4232  19ab  0a                        LD      A,(BC)
  4233  19ac  fe4d                      CP      'M'
  4234  19ae  c0                        RET     NZ
  4235  19af  0b                        DEC     BC
  4236  19b0  0a                        LD      A,(BC)
  4237  19b1  fe45                      CP      'E'
  4238  19b3  c0                        RET     NZ
  4239  19b4  0b                        DEC     BC
  4240  19b5  0a                        LD      A,(BC)
  4241  19b6  fe52                      CP      'R'
  4242  19b8  c0                        RET     NZ
  4243  19b9  0b                        DEC     BC
  4244  19ba  0a                        LD      A,(BC)
  4245  19bb  fe3a                      CP      ':'                     ; preceeded by :REM ?
  4246  19bd  c0                        RET     NZ                      ; nope, next BASIC char
  4247  19be  f1                        POP     AF                      ; remove returnaddress
  4248  19bf  f1                        POP     AF                      ; remove buf pointer
  4249  19c0  e1                        POP     HL                      ; restore line pointer
  4250  19c1  14                        INC     D
  4251  19c2  14                        INC     D
  4252  19c3  14                        INC     D
  4253  19c4  14                        INC     D                       ; remove :REM
  4254  19c5  1825                      JR      J531A                   ; translate '
  4255                          
  4256  19c7  c1                I52F5:  POP     BC
  4257  19c8  e1                        POP     HL
  4258  19c9  7e                        LD      A,(HL)
  4259  19ca  c36119            J52F8:  JP      J528F
  4260                          
  4261                          ;       Subroutine      set data statement flag
  4262                          ;       Inputs          ________________________
  4263                          ;       Outputs         ________________________
  4264                          
  4265  19cd  3a64f6            C52FB:  LD      A,(DORES)
  4266  19d0  f602                      OR      $2
  4267  19d2  3264f6            J5300:  LD      (DORES),A
  4268  19d5  af                        XOR     A
  4269  19d6  c9                        RET
  4270                          
  4271                          ;       Subroutine      set rem statement flag
  4272                          ;       Inputs          ________________________
  4273                          ;       Outputs         ________________________
  4274                          
  4275  19d7  3a64f6            C5305:  LD      A,(DORES)
  4276  19da  f604                      OR      $4
  4277  19dc  18f4                      JR      J5300
  4278                          
  4279  19de  17                J530C:  RLA                             ; in data statement ?
  4280  19df  38e9                      JR      C,J52F8                 ; yep, next BASIC char
  4281  19e1  7e                        LD      A,(HL)
  4282  19e2  fe84                      CP      $84                     ; DATA token ?
  4283  19e4  cccd19                    CALL    Z,C52FB                 ; yep, set data statement flag
  4284  19e7  fe8f                      CP      $8F                     ; REM token ?
  4285  19e9  ccd719                    CALL    Z,C5305                 ; yep, set rem statement flag
  4286  19ec  7e                J531A:  LD      A,(HL)
  4287  19ed  3c                        INC     A                       ; function token header ?
  4288  19ee  7e                        LD      A,(HL)
  4289  19ef  2004                      JR      NZ,J5323                ; nope,
  4290  19f1  23                        INC     HL
  4291  19f2  7e                        LD      A,(HL)                  ; function token
  4292  19f3  e67f                      AND     $7F                     ; to $00-$7F range
  4293  19f5  23                J5323:  INC     HL
  4294  19f6  fea1                      CP      $A1                    ; ELSE token ?
  4295  19f8  2002                      JR      NZ,J532A                ; nope,
  4296  19fa  0b                        DEC     BC
  4297  19fb  14                        INC     D
  4298  19fc  e5                J532A:  PUSH    HL
  4299  19fd  c5                        PUSH    BC
  4300  19fe  d5                        PUSH    DE
  4301  19ff  cd8eff                    CALL    H_BUFL
  4302  1a02  214301                    LD      HL,T3A72-1
  4303  1a05  47                        LD      B,A
  4304  1a06  0e40                      LD      C,'A'-1
  4305  1a08  0c                J5336:  INC     C
  4306  1a09  23                J5337:  INC     HL
  4307  1a0a  54                        LD      D,H
  4308  1a0b  5d                        LD      E,L
  4309  1a0c  7e                J533A:  LD      A,(HL)
  4310  1a0d  b7                        OR      A
  4311  1a0e  28f8                      JR      Z,J5336
  4312  1a10  23                        INC     HL
  4313  1a11  f20c1a                    JP      P,J533A
  4314  1a14  7e                        LD      A,(HL)
  4315  1a15  b8                        CP      B
  4316  1a16  20f1                      JR      NZ,J5337
  4317  1a18  eb                        EX      DE,HL
  4318  1a19  79                        LD      A,C
  4319  1a1a  d1                        POP     DE
  4320  1a1b  c1                        POP     BC
  4321  1a1c  fe5b                      CP      'Z'+1                   ; end of normal tokenlist ?
  4322  1a1e  2002                      JR      NZ,J5350                ; nope,
  4323  1a20  7e                J534E:  LD      A,(HL)                  ; single char token
  4324  1a21  23                        INC     HL
  4325  1a22  5f                J5350:  LD      E,A
  4326  1a23  e67f                      AND     $7F
  4327  1a25  02                        LD      (BC),A
  4328  1a26  03                        INC     BC
  4329  1a27  15                        DEC     D
  4330  1a28  ca792d                    JP      Z,J66A7
  4331  1a2b  b3                        OR      E
  4332  1a2c  f2201a                    JP      P,J534E
  4333  1a2f  e1                        POP     HL
  4334  1a30  c36519                    JP      J5293
  4335                          
  4336                          ;       Subroutine      decode numeric tokens
  4337                          ;       Inputs          ________________________
  4338                          ;       Outputs         ________________________
  4339                          
  4340  1a33  2b                J5361:  DEC     HL
  4341  1a34  d7                        RST     CHRGTR                  ; get numeric token
  4342  1a35  d5                        PUSH    DE
  4343  1a36  c5                        PUSH    BC
  4344  1a37  f5                        PUSH    AF
  4345  1a38  cdba0d                    CALL    C46E8                   ; get numeric constant
  4346  1a3b  f1                        POP     AF
  4347  1a3c  01501a                    LD      BC,I537E
  4348  1a3f  c5                        PUSH    BC
  4349  1a40  fe0b                      CP      $B
  4350  1a42  ca0000                    JP      Z,C371E                 ; convert integer to octal text
  4351  1a45  fe0c                      CP      $C
  4352  1a47  ca0000                    JP      Z,C3722                 ; convert integer to hexadecimal text
  4353  1a4a  2a6af6                    LD      HL,(CONLO)
  4354  1a4d  c30000                    JP      C3425                   ; convert DAC to text, unformatted
  4355                          
  4356  1a50  c1                I537E:  POP     BC
  4357  1a51  d1                        POP     DE
  4358  1a52  3a68f6                    LD      A,(CONSAV)
  4359  1a55  1e4f                      LD      E,'O'
  4360  1a57  fe0b                      CP      $B                     ; octal constant ?
  4361  1a59  2806                      JR      Z,J538F                 ; yep, &O
  4362  1a5b  fe0c                      CP      $C                     ; hexadecimal constant ?
  4363  1a5d  1e48                      LD      E,'H'
  4364  1a5f  200b                      JR      NZ,J539A                ; nope, skip &x
  4365  1a61  3e26              J538F:  LD      A,'&'
  4366  1a63  02                        LD      (BC),A
  4367  1a64  03                        INC     BC
  4368  1a65  15                        DEC     D
  4369  1a66  c8                        RET     Z
  4370  1a67  7b                        LD      A,E
  4371  1a68  02                        LD      (BC),A
  4372  1a69  03                        INC     BC
  4373  1a6a  15                        DEC     D
  4374  1a6b  c8                        RET     Z
  4375  1a6c  3a69f6            J539A:  LD      A,(CONTYP)
  4376  1a6f  fe04                      CP      4                       ; single real ?
  4377  1a71  1e00                      LD      E,0
  4378  1a73  3806                      JR      C,J53A9                 ; integer,
  4379  1a75  1e21                      LD      E,'!'
  4380  1a77  2802                      JR      Z,J53A9                 ; single real,
  4381  1a79  1e23                      LD      E,'#'                   ; double real
  4382  1a7b  7e                J53A9:  LD      A,(HL)
  4383  1a7c  fe20                      CP      ' '
  4384  1a7e  2001                      JR      NZ,J53AF
  4385                          
  4386                          ;       Subroutine      __________________________
  4387                          ;       Inputs          ________________________
  4388                          ;       Outputs         ________________________
  4389                          
  4390  1a80  23                C53AE:  INC     HL
  4391  1a81  7e                J53AF:  LD      A,(HL)
  4392  1a82  23                        INC     HL
  4393  1a83  b7                        OR      A
  4394  1a84  2820                      JR      Z,J53D4
  4395  1a86  02                        LD      (BC),A
  4396                          
  4397                          ;       Subroutine      __________________________
  4398                          ;       Inputs          ________________________
  4399                          ;       Outputs         ________________________
  4400                          
  4401  1a87  03                C53B5:  INC     BC
  4402  1a88  15                        DEC     D
  4403  1a89  c8                        RET     Z
  4404  1a8a  3a69f6                    LD      A,(CONTYP)
  4405  1a8d  fe04                      CP      4
  4406  1a8f  38f0                      JR      C,J53AF
  4407  1a91  0b                        DEC     BC
  4408  1a92  0a                        LD      A,(BC)
  4409  1a93  03                        INC     BC
  4410  1a94  2004                      JR      NZ,J53C8
  4411  1a96  fe2e                      CP      '.'
  4412  1a98  2808                      JR      Z,J53D0
  4413  1a9a  fe44              J53C8:  CP      'D'
  4414  1a9c  2804                      JR      Z,J53D0
  4415  1a9e  fe45                      CP      'E'
  4416  1aa0  20df                      JR      NZ,J53AF
  4417  1aa2  1e00              J53D0:  LD      E,$0
  4418  1aa4  18db                      JR      J53AF
  4419                          
  4420  1aa6  7b                J53D4:  LD      A,E
  4421  1aa7  b7                        OR      A
  4422  1aa8  2804                      JR      Z,J53DC
  4423  1aaa  02                        LD      (BC),A
  4424  1aab  03                        INC     BC
  4425  1aac  15                        DEC     D
  4426  1aad  c8                        RET     Z
  4427  1aae  2a66f6            J53DC:  LD      HL,(CONTXT)
  4428  1ab1  c36519                    JP      J5293
  4429                          
  4430                          ;       Subroutine      DELETE statement
  4431                          ;       Inputs          ________________________
  4432                          ;       Outputs         ________________________
  4433                          
  4434  1ab4  cd4b09            C53E2:  CALL    C4279                   ; evaluate linenumber (range) and search start linenumber
  4435  1ab7  c5                        PUSH    BC
  4436  1ab8  cdbc1b                    CALL    C54EA                   ; convert to linepointers to linenumbers if needed
  4437  1abb  c1                        POP     BC
  4438  1abc  d1                        POP     DE
  4439  1abd  c5                        PUSH    BC
  4440  1abe  c5                        PUSH    BC
  4441  1abf  cd6709                    CALL    C4295                   ; search linenumber (end linenumber)
  4442  1ac2  3005                      JR      NC,J53F7                ; not found, illegal function call
  4443  1ac4  54                        LD      D,H
  4444  1ac5  5d                        LD      E,L
  4445  1ac6  e3                        EX      (SP),HL
  4446  1ac7  e5                        PUSH    HL
  4447  1ac8  e7                        RST     DCOMPR
  4448  1ac9  d22c0e            J53F7:  JP      NC,C475A                ; illegal function call
  4449  1acc  21a906                    LD      HL,I3FD7
  4450  1acf  cd4a2d                    CALL    C6678                   ; message to interpreter output
  4451  1ad2  c1                        POP     BC
  4452  1ad3  210909                    LD      HL,J4237
  4453  1ad6  e3                        EX      (SP),HL
  4454                          
  4455                          ;       Subroutine      remove line(s)
  4456                          ;       Inputs          HL = start of BASIC text that follows, BC = start of deleted BASIC text
  4457                          ;       Outputs         ________________________
  4458                          
  4459  1ad7  eb                C5405:  EX      DE,HL
  4460  1ad8  2ac2f6                    LD      HL,(VARTAB)
  4461  1adb  1a                J5409:  LD      A,(DE)
  4462  1adc  02                        LD      (BC),A
  4463  1add  03                        INC     BC
  4464  1ade  13                        INC     DE
  4465  1adf  e7                        RST     DCOMPR
  4466  1ae0  20f9                      JR      NZ,J5409
  4467  1ae2  60                        LD      H,B
  4468  1ae3  69                        LD      L,C
  4469  1ae4  22c2f6                    LD      (VARTAB),HL             ; start variable area
  4470  1ae7  22c4f6                    LD      (ARYTAB),HL             ; start arrayvariable area = start variable area (no variables)
  4471  1aea  22c6f6                    LD      (STREND),HL             ; start free area = start variable area (no arrayvariables)
  4472  1aed  c9                        RET
  4473                          
  4474                          ;       Subroutine      PEEK function
  4475                          ;       Inputs          ________________________
  4476                          ;       Outputs         ________________________
  4477                          
  4478                          
  4479  1aee  cd0b1b            C541C:  CALL    C5439                   ; convert address to integer
  4480  1af1  7e                        LD      A,(HL)
  4481  1af2  c3a116                    JP      C4FCF                   ; byte to DAC
  4482                          
  4483                          ;       Subroutine      POKE statement
  4484                          ;       Inputs          ________________________
  4485                          ;       Outputs         ________________________
  4486                          
  4487                          
  4488  1af5  cd011b            C5423:  CALL    C542F                   ; evaluate address operand
  4489  1af8  d5                        PUSH    DE
  4490  1af9  cf                        RST     SYNCHR
  4491  1afa  2c                        DEFB    ','                     ; check for ,
  4492  1afb  cdee18                    CALL    C521C                   ; evaluate byte operand
  4493  1afe  d1                        POP     DE
  4494  1aff  12                        LD      (DE),A
  4495  1b00  c9                        RET
  4496                          
  4497                          ;       Subroutine      evaluate address operand
  4498                          ;       Inputs          ________________________
  4499                          ;       Outputs         ________________________
  4500                          
  4501  1b01  cd3613            C542F:  CALL    C4C64                   ; evaluate expression
  4502  1b04  e5                        PUSH    HL
  4503  1b05  cd0b1b                    CALL    C5439                   ; convert address to integer
  4504  1b08  eb                        EX      DE,HL
  4505  1b09  e1                        POP     HL
  4506  1b0a  c9                        RET
  4507                          
  4508                          ;       Subroutine      convert address to integer
  4509                          ;       Inputs          ________________________
  4510                          ;       Outputs         ________________________
  4511                          
  4512  1b0b  010000            C5439:  LD      BC,C2F8A
  4513  1b0e  c5                        PUSH    BC                      ; convert DAC to integer
  4514  1b0f  ef                        RST     GETYPR                  ; get DAC type
  4515  1b10  f8                        RET     M                       ; already a integer, quit
  4516  1b11  cd93ff                    CALL    H_FRQI
  4517  1b14  cd0000                    CALL    C2E71                   ; get sign DAC
  4518  1b17  f8                        RET     M                       ; DAC is negative, just convert
  4519  1b18  cd0000                    CALL    C2FB2                   ; convert DAC to single real
  4520  1b1b  014532                    LD      BC,$3245
  4521  1b1e  117680                    LD      DE,$8076               ; 32768
  4522  1b21  cd0000                    CALL    C2F21                   ; single real compare
  4523  1b24  d8                        RET     C                       ; smaller as 32768, just convert
  4524  1b25  014565                    LD      BC,$6545
  4525  1b28  115360                    LD      DE,$6053               ; 65536
  4526  1b2b  cd0000                    CALL    C2F21                   ; single real compare
  4527  1b2e  d23907                    JP      NC,J4067                ; bigger as 65535, overflow error
  4528  1b31  01c565                    LD      BC,$65C5
  4529  1b34  115360                    LD      DE,$6053               ; -65536
  4530  1b37  c30000                    JP      C324E                   ; single real addition
  4531                          
  4532                          ;       Subroutine      RENUM statement
  4533                          ;       Inputs          ________________________
  4534                          ;       Outputs         ________________________
  4535                          
  4536  1b3a  010a00            C5468:  LD      BC,10
  4537  1b3d  c5                        PUSH    BC
  4538  1b3e  50                        LD      D,B
  4539  1b3f  58                        LD      E,B
  4540  1b40  2826                      JR      Z,J5496
  4541  1b42  fe2c                      CP      ','
  4542  1b44  2809                      JR      Z,J547D
  4543  1b46  d5                        PUSH    DE
  4544  1b47  cd310e                    CALL    C475F                   ; collect linenumber (with DOT supported)
  4545  1b4a  42                        LD      B,D
  4546  1b4b  4b                        LD      C,E
  4547  1b4c  d1                        POP     DE
  4548  1b4d  2819                      JR      Z,J5496
  4549  1b4f  cf                J547D:  RST     SYNCHR
  4550  1b50  2c                        DEFB    ','                     ; check for ,
  4551  1b51  cd310e                    CALL    C475F                   ; collect linenumber (with DOT supported)
  4552  1b54  2812                      JR      Z,J5496
  4553  1b56  f1                        POP     AF
  4554  1b57  cf                        RST     SYNCHR
  4555  1b58  2c                        DEFB    ','                     ; check for ,
  4556  1b59  d5                        PUSH    DE
  4557  1b5a  cd3b0e                    CALL    C4769                   ; collect linenumber
  4558  1b5d  c22707                    JP      NZ,J4055                ; nope, syntax error
  4559  1b60  7a                        LD      A,D
  4560  1b61  b3                        OR      E
  4561  1b62  ca2c0e                    JP      Z,C475A                 ; illegal function call
  4562  1b65  eb                        EX      DE,HL
  4563  1b66  e3                        EX      (SP),HL
  4564  1b67  eb                        EX      DE,HL
  4565  1b68  c5                J5496:  PUSH    BC
  4566  1b69  cd6709                    CALL    C4295                   ; search linenumber
  4567  1b6c  d1                        POP     DE
  4568  1b6d  d5                        PUSH    DE
  4569  1b6e  c5                        PUSH    BC
  4570  1b6f  cd6709                    CALL    C4295                   ; search linenumber
  4571  1b72  60                        LD      H,B
  4572  1b73  69                        LD      L,C
  4573  1b74  d1                        POP     DE
  4574  1b75  e7                        RST     DCOMPR
  4575  1b76  eb                        EX      DE,HL
  4576  1b77  da2c0e                    JP      C,C475A                 ; illegal function call
  4577  1b7a  d1                        POP     DE
  4578  1b7b  c1                        POP     BC
  4579  1b7c  f1                        POP     AF
  4580  1b7d  e5                        PUSH    HL
  4581  1b7e  d5                        PUSH    DE
  4582  1b7f  180e                      JR      J54BD
  4583                          
  4584  1b81  09                J54AF:  ADD     HL,BC
  4585  1b82  da2c0e                    JP      C,C475A                 ; illegal function call
  4586  1b85  eb                        EX      DE,HL
  4587  1b86  e5                        PUSH    HL
  4588  1b87  21f9ff                    LD      HL,$FFF9
  4589  1b8a  e7                        RST     DCOMPR
  4590  1b8b  e1                        POP     HL
  4591  1b8c  da2c0e                    JP      C,C475A                 ; illegal function call
  4592  1b8f  d5                J54BD:  PUSH    DE
  4593  1b90  5e                        LD      E,(HL)
  4594  1b91  23                        INC     HL
  4595  1b92  56                        LD      D,(HL)
  4596  1b93  7a                        LD      A,D
  4597  1b94  b3                        OR      E
  4598  1b95  eb                        EX      DE,HL
  4599                          
  4600                          ;       Subroutine      __________________________
  4601                          ;       Inputs          ________________________
  4602                          ;       Outputs         ________________________
  4603                          
  4604  1b96  d1                C54C4:  POP     DE
  4605  1b97  2807                      JR      Z,J54CE
  4606  1b99  7e                        LD      A,(HL)
  4607  1b9a  23                        INC     HL
  4608  1b9b  b6                        OR      (HL)
  4609  1b9c  2b                        DEC     HL
  4610  1b9d  eb                        EX      DE,HL
  4611  1b9e  20e1                      JR      NZ,J54AF
  4612  1ba0  c5                J54CE:  PUSH    BC
  4613  1ba1  cdc81b                    CALL    C54F6                   ; convert linenumbers to pointers
  4614  1ba4  c1                        POP     BC
  4615  1ba5  d1                        POP     DE
  4616  1ba6  e1                        POP     HL
  4617  1ba7  d5                J54D5:  PUSH    DE
  4618  1ba8  5e                        LD      E,(HL)
  4619  1ba9  23                        INC     HL
  4620  1baa  56                        LD      D,(HL)
  4621  1bab  7a                        LD      A,D
  4622  1bac  b3                        OR      E
  4623  1bad  2814                      JR      Z,J54F1
  4624  1baf  eb                        EX      DE,HL
  4625  1bb0  e3                        EX      (SP),HL
  4626  1bb1  eb                        EX      DE,HL
  4627  1bb2  23                        INC     HL
  4628  1bb3  73                        LD      (HL),E
  4629  1bb4  23                        INC     HL
  4630  1bb5  72                        LD      (HL),D
  4631  1bb6  eb                        EX      DE,HL
  4632  1bb7  09                        ADD     HL,BC
  4633  1bb8  eb                        EX      DE,HL
  4634  1bb9  e1                        POP     HL
  4635  1bba  18eb                      JR      J54D5
  4636                          
  4637                          ;       Subroutine      convert to linepointers to linenumbers if needed
  4638                          ;       Inputs          ________________________
  4639                          ;       Outputs         ________________________
  4640                          
  4641  1bbc  3aa9f6            C54EA:  LD      A,(PTRFLG)
  4642  1bbf  b7                        OR      A
  4643  1bc0  c8                        RET     Z
  4644  1bc1  1806                      JR      J54F7                   ; convert pointers to linenumbers
  4645                          
  4646  1bc3  01f007            J54F1:  LD      BC,J411E
  4647  1bc6  c5                        PUSH    BC                      ; ok and mainloop (+POP)
  4648  1bc7  fe                        DEFB    $FE                    ; CP xx, skip to J54F7
  4649                          
  4650                          ;       Subroutine      convert linenumbers to pointers
  4651                          ;       Inputs          ________________________
  4652                          ;       Outputs         ________________________
  4653                          
  4654  1bc8  f6                C54F6:  DEFB    $F6                    ; OR xx, skip next instruction, A<>0 (now linepointers)
  4655                          
  4656                          ;       Subroutine      convert pointers to linenumbers
  4657                          ;       Inputs          ________________________
  4658                          ;       Outputs         ________________________
  4659                          
  4660  1bc9  af                J54F7:  XOR     A                       ; now linenumbers
  4661  1bca  32a9f6                    LD      (PTRFLG),A
  4662  1bcd  2a76f6                    LD      HL,(TXTTAB)
  4663  1bd0  2b                        DEC     HL
  4664  1bd1  23                J54FF:  INC     HL
  4665  1bd2  7e                        LD      A,(HL)
  4666  1bd3  23                        INC     HL
  4667  1bd4  b6                        OR      (HL)                    ; endpointer ?
  4668  1bd5  c8                        RET     Z                       ; yep, quit
  4669  1bd6  23                        INC     HL
  4670  1bd7  5e                        LD      E,(HL)
  4671  1bd8  23                        INC     HL
  4672  1bd9  56                        LD      D,(HL)                  ; linenumber
  4673  1bda  d7                J5508:  RST     CHRGTR                  ; get next BASIC character
  4674  1bdb  b7                J5509:  OR      A                       ; end of line ?
  4675  1bdc  28f3                      JR      Z,J54FF                 ; yep, next line
  4676  1bde  4f                        LD      C,A
  4677  1bdf  3aa9f6                    LD      A,(PTRFLG)
  4678  1be2  b7                        OR      A                       ; convert to linenumbers ?
  4679  1be3  79                        LD      A,C
  4680  1be4  2856                      JR      Z,J556A                 ; yep, handle
  4681  1be6  cd98ff                    CALL    H_SCNE
  4682  1be9  fea6                      CP      $A6                    ; ERROR token ?
  4683  1beb  2014                      JR      NZ,J552F                ; nope,
  4684  1bed  d7                        RST     CHRGTR                  ; get next BASIC character
  4685  1bee  fe89                      CP      $89                     ; GOTO token ?
  4686  1bf0  20e9                      JR      NZ,J5509                ; nope,
  4687  1bf2  d7                        RST     CHRGTR                  ; get next BASIC character
  4688  1bf3  fe0e                      CP      $E                     ; linenumber token ?
  4689  1bf5  20e4                      JR      NZ,J5509                ; nope,
  4690  1bf7  d5                        PUSH    DE
  4691  1bf8  cd430e                    CALL    C4771                   ; get linenumber
  4692  1bfb  7a                        LD      A,D
  4693  1bfc  b3                        OR      E                       ; linenumber 0 ?
  4694  1bfd  200a                      JR      NZ,J5537                ; nope,
  4695  1bff  1827                      JR      J5556
  4696                          
  4697  1c01  fe0e              J552F:  CP      $E                     ; linenumber token ?
  4698  1c03  20d5                      JR      NZ,J5508                ; nope, next char
  4699  1c05  d5                        PUSH    DE
  4700  1c06  cd430e                    CALL    C4771                   ; get linenumber
  4701  1c09  e5                J5537:  PUSH    HL
  4702  1c0a  cd6709                    CALL    C4295                   ; search linenumber
  4703  1c0d  0b                        DEC     BC
  4704  1c0e  3e0d                      LD      A,$D                   ; linepointer token
  4705  1c10  383c                      JR      C,J557C                 ; found, replace linenumber with pointer
  4706  1c12  cdf539                    CALL    C7323                   ; fresh line to interpreter output
  4707  1c15  212c1c                    LD      HL,I555A
  4708  1c18  d5                        PUSH    DE
  4709  1c19  cd4a2d                    CALL    C6678                   ; message to interpreter output
  4710  1c1c  e1                        POP     HL
  4711  1c1d  cd0000                    CALL    C3412                   ; number to interpreter output
  4712  1c20  c1                        POP     BC
  4713  1c21  e1                        POP     HL
  4714  1c22  e5                        PUSH    HL
  4715  1c23  c5                        PUSH    BC
  4716  1c24  cd0000                    CALL    C340A                   ; "in" number to interpreter output
  4717  1c27  e1                I5555:  POP     HL
  4718  1c28  d1                J5556:  POP     DE
  4719  1c29  2b                        DEC     HL
  4720  1c2a  18ae              J5558:  JR      J5508                   ; next
  4721                          
  4722  1c2c  556e646566696e65  I555A:  DEFB    "Undefined line ",0
              64206c696e652000  
  4723                          
  4724  1c3c  fe0d              J556A:  CP      $D                     ; linepointer token ?
  4725  1c3e  20ea                      JR      NZ,J5558                ; nope, next
  4726  1c40  d5                        PUSH    DE
  4727  1c41  cd430e                    CALL    C4771                   ; get linepointer
  4728  1c44  e5                        PUSH    HL
  4729  1c45  eb                        EX      DE,HL
  4730  1c46  23                        INC     HL
  4731  1c47  23                        INC     HL
  4732  1c48  23                        INC     HL
  4733  1c49  4e                        LD      C,(HL)
  4734  1c4a  23                        INC     HL
  4735  1c4b  46                        LD      B,(HL)                  ; linenumber
  4736  1c4c  3e0e                      LD      A,$E                   ; linenumber token
  4737  1c4e  21271c            J557C:  LD      HL,I5555
  4738  1c51  e5                        PUSH    HL
  4739  1c52  2a66f6                    LD      HL,(CONTXT)
  4740                          
  4741                          ;       Subroutine      __________________________
  4742                          ;       Inputs          ________________________
  4743                          ;       Outputs         ________________________
  4744                          
  4745  1c55  e5                C5583:  PUSH    HL
  4746  1c56  2b                        DEC     HL
  4747  1c57  70                        LD      (HL),B
  4748  1c58  2b                        DEC     HL
  4749  1c59  71                        LD      (HL),C
  4750  1c5a  2b                        DEC     HL
  4751  1c5b  77                        LD      (HL),A
  4752  1c5c  e1                        POP     HL
  4753  1c5d  c9                        RET
  4754                          
  4755                          ;       Subroutine      SYNCHR
  4756                          ;       Inputs          ________________________
  4757                          ;       Outputs         ________________________
  4758                          
  4759  1c5e  7e                C558C:  LD      A,(HL)
  4760  1c5f  e3                        EX      (SP),HL
  4761  1c60  be                        CP      (HL)
  4762  1c61  23                        INC     HL
  4763  1c62  e3                        EX      (SP),HL
  4764  1c63  c22707                    JP      NZ,J4055                ; nope, syntax error
  4765  1c66  c3380d                    JP      C4666                   ; get next BASIC character
  4766                          
  4767                          ;       Subroutine      GETYPR
  4768                          ;       Inputs          ________________________
  4769                          ;       Outputs         ________________________
  4770                          
  4771  1c69  3a63f6            C5597:  LD      A,(VALTYP)
  4772  1c6c  fe08                      CP      8
  4773  1c6e  3005                      JR      NC,J55A3
  4774  1c70  d603                      SUB     3
  4775  1c72  b7                        OR      A
  4776  1c73  37                        SCF
  4777  1c74  c9                        RET
  4778                          
  4779  1c75  d603              J55A3:  SUB     3
  4780  1c77  b7                        OR      A
  4781  1c78  c9                        RET
  4782                          
  4783  1c79  d7                J55A7:  RST     CHRGTR                  ; get next BASIC character
  4784                          
  4785                          ;       Subroutine      CALL statement
  4786                          ;       Inputs          ________________________
  4787                          ;       Outputs         ________________________
  4788                          
  4789  1c7a  1189fd            C55A8:  LD      DE,PROCNM
  4790  1c7d  060f                      LD      B,15
  4791  1c7f  7e                J55AD:  LD      A,(HL)
  4792  1c80  a7                        AND     A
  4793  1c81  280d                      JR      Z,J55BE                 ; end of line, end of name
  4794  1c83  fe3a                      CP      ':'
  4795  1c85  2809                      JR      Z,J55BE                 ; statement seperator, end of name
  4796  1c87  fe28                      CP      '('
  4797  1c89  2805                      JR      Z,J55BE                 ; parameter, end of name
  4798  1c8b  12                        LD      (DE),A
  4799  1c8c  13                        INC     DE
  4800  1c8d  23                        INC     HL
  4801  1c8e  10ef                      DJNZ    J55AD
  4802  1c90  78                J55BE:  LD      A,B
  4803  1c91  fe0f                      CP      15
  4804  1c93  2815                      JR      Z,J55D8                 ; no name, syntax error
  4805  1c95  af                J55C3:  XOR     A
  4806  1c96  12                        LD      (DE),A
  4807  1c97  1b                        DEC     DE
  4808  1c98  1a                        LD      A,(DE)
  4809  1c99  fe20                      CP      ' '
  4810  1c9b  28f8                      JR      Z,J55C3                 ; remove trailing spaces and place endmarker in name
  4811  1c9d  0640                      LD      B,64
  4812  1c9f  11c9fc                    LD      DE,SLTATR
  4813  1ca2  1a                J55D0:  LD      A,(DE)
  4814  1ca3  e620              J55D1:  AND     $20
  4815  1ca5  2006                      JR      NZ,J55DB                ; expansion ROM has statement handler, try it
  4816  1ca7  13                J55D5:  INC     DE
  4817  1ca8  10f8                      DJNZ    J55D0                   ; next page/slot
  4818  1caa  c32707            J55D8:  JP      J4055                   ; syntax error
  4819                          
  4820  1cad  c5                J55DB:  PUSH    BC
  4821  1cae  d5                        PUSH    DE
  4822  1caf  e5                        PUSH    HL
  4823  1cb0  cdfc44                    CALL    C7E2A                   ; translate SLTATR loopvar to address and slotid
  4824  1cb3  f5                        PUSH    AF
  4825  1cb4  4f                        LD      C,A
  4826  1cb5  2e04                      LD      L,4                     ; statement entry offset
  4827  1cb7  cdec44                    CALL    C7E1A                   ; read expansion ROM entry
  4828  1cba  d5                        PUSH    DE
  4829  1cbb  dde1                      POP     IX
  4830  1cbd  fde1                      POP     IY
  4831  1cbf  e1                        POP     HL
  4832  1cc0  2b                        DEC     HL
  4833  1cc1  d7                        RST     CHRGTR                  ; get next BASIC character
  4834  1cc2  cd0000                    CALL    CALSLT                  ; call statement handler
  4835  1cc5  d1                        POP     DE
  4836  1cc6  c1                        POP     BC
  4837  1cc7  38de                      JR      C,J55D5                 ; statement not recognized, try next
  4838  1cc9  c9                        RET                             ; statement recognized, quit
  4839                          
  4840                          ; external device handler
  4841                          
  4842  1cca  e1                J55F8:  POP     HL
  4843  1ccb  78                        LD      A,B
  4844  1ccc  fe10                      CP      16
  4845  1cce  3802                      JR      C,J5600
  4846  1cd0  060f                      LD      B,15                    ; devicename length is max 15
  4847                          
  4848                          J5600:
  4849                          
  4850                                  IF      NDEVFIX = 0
  4851                          ;
  4852                          ; #####################
  4853                          ; early MSX 1 version code:
  4854                          
  4855                                  LD      DE,PROCNM
  4856                          
  4857                                  ELSE
  4858                          
  4859                          ; #####################
  4860                          ; later MSX versions have a patch for zero length devicename
  4861                          
  4862                          
  4863  1cd2  cd8946                    CALL    C7FB7                   ; bugfix for zero length devicename
  4864                          
  4865                          ; #####################
  4866                          
  4867                                  ENDIF
  4868                          
  4869  1cd5  cd7b15            J5603:  CALL    C4EA9                   ; get char uppercase
  4870  1cd8  12                        LD      (DE),A
  4871  1cd9  23                        INC     HL
  4872  1cda  13                        INC     DE
  4873  1cdb  10f8                      DJNZ    J5603                   ; copy devicename in PROCNM
  4874  1cdd  af                        XOR     A
  4875  1cde  12                        LD      (DE),A                  ; zero terminator
  4876  1cdf  0640                      LD      B,64
  4877  1ce1  11c9fc                    LD      DE,SLTATR
  4878  1ce4  1a                J5612:  LD      A,(DE)
  4879  1ce5  e640                      AND     $40
  4880  1ce7  2006                      JR      NZ,J561D                ; has device entry, try it
  4881  1ce9  13                J5617:  INC     DE
  4882  1cea  10f8                      DJNZ    J5612                   ; next page
  4883  1cec  c33d35            J561A:  JP      J6E6B                   ; devicename not recognized, bad filename error
  4884                          
  4885  1cef  c5                J561D:  PUSH    BC
  4886  1cf0  d5                        PUSH    DE
  4887  1cf1  cdfc44                    CALL    C7E2A                   ; translate SLTATR loopvar to address and slotid
  4888  1cf4  f5                        PUSH    AF
  4889  1cf5  4f                        LD      C,A
  4890  1cf6  2e06                      LD      L,6                     ; device entry offset
  4891  1cf8  cdec44                    CALL    C7E1A                   ; read expansion ROM entry
  4892  1cfb  d5                        PUSH    DE
  4893  1cfc  dde1                      POP     IX
  4894  1cfe  fde1                      POP     IY
  4895  1d00  3eff                      LD      A,$FF                  ; check if devicename recognized
  4896  1d02  cd0000                    CALL    CALSLT                  ; call device handler
  4897  1d05  d1                        POP     DE
  4898  1d06  c1                        POP     BC
  4899  1d07  38e0                      JR      C,J5617                 ; devicename not recognized, try next
  4900  1d09  4f                        LD      C,A                     ; relative devicecode
  4901  1d0a  3e40                      LD      A,$40
  4902  1d0c  90                        SUB     B
  4903  1d0d  87                        ADD     A,A
  4904  1d0e  87                        ADD     A,A
  4905  1d0f  b1                        OR      C                       ; calculate devicecode
  4906  1d10  fe09                      CP      9                       ; devicecode in the internal diskdrive devicecode range ?
  4907  1d12  38d8                      JR      C,J561A                 ; yep, bad filename error
  4908  1d14  fefc                      CP      $FC                    ; devicecode in the internal devicecode range ?
  4909  1d16  30d4                      JR      NC,J561A                ; yep, bad filename error
  4910  1d18  e1                        POP     HL
  4911  1d19  d1                        POP     DE
  4912  1d1a  a7                        AND     A                       ; Cx reset
  4913  1d1b  c9                        RET
  4914                          
  4915                          ;       Subroutine      i/o function dispatcher for expansion ROM
  4916                          ;       Inputs          ________________________
  4917                          ;       Outputs         ________________________
  4918                          
  4919  1d1c  c5                J564A:  PUSH    BC
  4920  1d1d  f5                        PUSH    AF
  4921  1d1e  1f                        RRA
  4922  1d1f  1f                        RRA
  4923  1d20  e63f                      AND     $3F
  4924  1d22  cdff44                    CALL    C7E2D                   ; translate SLTATR entrynumber to address and slotid
  4925  1d25  f5                        PUSH    AF
  4926  1d26  4f                        LD      C,A
  4927  1d27  2e06                      LD      L,6
  4928  1d29  cdec44                    CALL    C7E1A
  4929  1d2c  d5                        PUSH    DE
  4930  1d2d  dde1                      POP     IX
  4931  1d2f  fde1                      POP     IY
  4932  1d31  f1                        POP     AF
  4933  1d32  e603                      AND     $3
  4934  1d34  3299fd                    LD      (DEVICE),A
  4935  1d37  c1                        POP     BC
  4936  1d38  f1                        POP     AF
  4937  1d39  d1                        POP     DE
  4938  1d3a  e1                        POP     HL
  4939  1d3b  c30000                    JP      CALSLT
  4940                          
  4941  1d3e  ed5356f9          J566C:  LD      (MCLTAB),DE
  4942  1d42  cd3613                    CALL    C4C64                   ; evaluate expression
  4943  1d45  e5                        PUSH    HL
  4944  1d46  110000                    LD      DE,0
  4945  1d49  d5                        PUSH    DE
  4946  1d4a  f5                        PUSH    AF
  4947  1d4b  cda22e            J5679:  CALL    C67D0                   ; free temporary string with type check
  4948  1d4e  cd0000                    CALL    C2EDF                   ; load from HL (single)
  4949  1d51  41                        LD      B,C
  4950  1d52  4a                        LD      C,D                     ; pointer to string
  4951  1d53  53                        LD      D,E                     ; size of string
  4952  1d54  78                        LD      A,B
  4953  1d55  b1                        OR      C                       ; zero pointer ?
  4954  1d56  2806                      JR      Z,J568C                 ; yep,
  4955  1d58  7a                        LD      A,D
  4956  1d59  b7                        OR      A                       ; size of string zero ?
  4957  1d5a  2802                      JR      Z,J568C                 ; yep,
  4958  1d5c  c5                        PUSH    BC
  4959  1d5d  d5                        PUSH    DE
  4960  1d5e  f1                J568C:  POP     AF
  4961  1d5f  323bfb                    LD      (MCLLEN),A
  4962  1d62  e1                        POP     HL
  4963  1d63  7c                        LD      A,H
  4964  1d64  b5                        OR      L
  4965  1d65  200a                      JR      NZ,J569F
  4966  1d67  3a58f9                    LD      A,(MCLFLG)
  4967  1d6a  b7                        OR      A
  4968  1d6b  cadb1d                    JP      Z,J5709
  4969  1d6e  c3663b                    JP      J7494
  4970                          
  4971  1d71  223cfb            J569F:  LD      (MCLPTR),HL
  4972  1d74  cdc01d            J56A2:  CALL    C56EE
  4973  1d77  28e5                      JR      Z,J568C
  4974  1d79  87                        ADD     A,A
  4975  1d7a  4f                        LD      C,A
  4976  1d7b  2a56f9                    LD      HL,(MCLTAB)
  4977  1d7e  7e                J56AC:  LD      A,(HL)
  4978  1d7f  87                        ADD     A,A
  4979  1d80  cc2c0e            J56AE:  CALL    Z,C475A                 ; illegal function call
  4980  1d83  b9                        CP      C
  4981  1d84  2805                      JR      Z,J56B9
  4982  1d86  23                        INC     HL
  4983  1d87  23                        INC     HL
  4984  1d88  23                        INC     HL
  4985  1d89  18f3                      JR      J56AC
  4986                          
  4987  1d8b  01741d            J56B9:  LD      BC,J56A2
  4988  1d8e  c5                        PUSH    BC
  4989  1d8f  7e                        LD      A,(HL)
  4990  1d90  4f                        LD      C,A
  4991  1d91  87                        ADD     A,A
  4992  1d92  3020                      JR      NC,J56E2
  4993  1d94  b7                        OR      A
  4994  1d95  1f                        RRA
  4995  1d96  4f                        LD      C,A
  4996  1d97  c5                        PUSH    BC
  4997  1d98  e5                        PUSH    HL
  4998  1d99  cdc01d                    CALL    C56EE
  4999  1d9c  110100                    LD      DE,1
  5000  1d9f  cab11d                    JP      Z,J56DF
  5001  1da2  cd7a2b                    CALL    C64A8                   ; is upcase letter character ?
  5002  1da5  d2ae1d                    JP      NC,J56DC
  5003  1da8  cdee1d                    CALL    C571C
  5004  1dab  37                        SCF
  5005  1dac  1804                      JR      J56E0
  5006                          
  5007  1dae  cddd1d            J56DC:  CALL    C570B
  5008  1db1  b7                J56DF:  OR      A
  5009  1db2  e1                J56E0:  POP     HL
  5010  1db3  c1                        POP     BC
  5011  1db4  23                J56E2:  INC     HL
  5012  1db5  7e                        LD      A,(HL)
  5013  1db6  23                        INC     HL
  5014  1db7  66                        LD      H,(HL)
  5015  1db8  6f                        LD      L,A
  5016  1db9  e9                        JP      (HL)
  5017                          
  5018                          
  5019                          ;       Subroutine      __________________________
  5020                          ;       Inputs          ________________________
  5021                          ;       Outputs         ________________________
  5022                          
  5023                          
  5024  1dba  cdc01d            C56E8:  CALL    C56EE
  5025  1dbd  28c1                      JR      Z,J56AE
  5026  1dbf  c9                        RET
  5027                          
  5028                          
  5029                          ;       Subroutine      __________________________
  5030                          ;       Inputs          ________________________
  5031                          ;       Outputs         ________________________
  5032                          
  5033                          
  5034  1dc0  e5                C56EE:  PUSH    HL
  5035  1dc1  213bfb            J56EF:  LD      HL,MCLLEN
  5036  1dc4  7e                        LD      A,(HL)
  5037  1dc5  b7                        OR      A
  5038  1dc6  2813                      JR      Z,J5709
  5039  1dc8  35                        DEC     (HL)
  5040  1dc9  2a3cfb                    LD      HL,(MCLPTR)
  5041  1dcc  7e                        LD      A,(HL)
  5042  1dcd  23                        INC     HL
  5043  1dce  223cfb                    LD      (MCLPTR),HL
  5044  1dd1  fe20                      CP      ' '
  5045  1dd3  28ec                      JR      Z,J56EF
  5046  1dd5  fe60                      CP      $60
  5047  1dd7  3802                      JR      C,J5709
  5048  1dd9  d620                      SUB     $20
  5049  1ddb  e1                J5709:  POP     HL
  5050  1ddc  c9                        RET
  5051                          
  5052                          
  5053                          ;       Subroutine      __________________________
  5054                          ;       Inputs          ________________________
  5055                          ;       Outputs         ________________________
  5056                          
  5057                          
  5058  1ddd  e5                C570B:  PUSH    HL
  5059  1dde  213bfb                    LD      HL,MCLLEN
  5060  1de1  34                        INC     (HL)
  5061  1de2  2a3cfb                    LD      HL,(MCLPTR)
  5062  1de5  2b                        DEC     HL
  5063  1de6  223cfb                    LD      (MCLPTR),HL
  5064  1de9  e1                        POP     HL
  5065  1dea  c9                        RET
  5066                          
  5067                          
  5068                          ;       Subroutine      __________________________
  5069                          ;       Inputs          ________________________
  5070                          ;       Outputs         ________________________
  5071                          
  5072                          
  5073  1deb  cdba1d            C5719:  CALL    C56E8
  5074                          
  5075                          
  5076                          ;       Subroutine      __________________________
  5077                          ;       Inputs          ________________________
  5078                          ;       Outputs         ________________________
  5079                          
  5080                          
  5081  1dee  fe3d              C571C:  CP      '='
  5082  1df0  ca4c1e                    JP      Z,J577A
  5083  1df3  fe2b                      CP      '+'
  5084  1df5  28f4                      JR      Z,C5719
  5085  1df7  fe2d                      CP      '-'
  5086  1df9  2006                      JR      NZ,C572F
  5087  1dfb  11671e                    LD      DE,I5795
  5088  1dfe  d5                        PUSH    DE
  5089  1dff  18ea                      JR      C5719
  5090                          
  5091                          ;       Subroutine      __________________________
  5092                          ;       Inputs          ________________________
  5093                          ;       Outputs         ________________________
  5094                          
  5095  1e01  110000            C572F:  LD      DE,0
  5096  1e04  fe2c              J5732:  CP      ','
  5097  1e06  28d5                      JR      Z,C570B
  5098  1e08  fe3b                      CP      ';'
  5099  1e0a  c8                        RET     Z
  5100  1e0b  fe3a                      CP      '9'+1
  5101  1e0d  30ce                      JR      NC,C570B
  5102  1e0f  fe30                      CP      '0'
  5103  1e11  38ca                      JR      C,C570B
  5104  1e13  210000                    LD      HL,0
  5105  1e16  060a                      LD      B,10
  5106  1e18  19                J5746:  ADD     HL,DE
  5107  1e19  382a                      JR      C,J5773
  5108  1e1b  10fb                      DJNZ    J5746
  5109  1e1d  d630                      SUB     '0'
  5110  1e1f  5f                        LD      E,A
  5111  1e20  1600                      LD      D,$0
  5112  1e22  19                        ADD     HL,DE
  5113  1e23  3820                      JR      C,J5773
  5114  1e25  eb                        EX      DE,HL
  5115  1e26  cdc01d                    CALL    C56EE
  5116  1e29  20d9                      JR      NZ,J5732
  5117  1e2b  c9                        RET
  5118                          
  5119                          ;       Subroutine      __________________________
  5120                          ;       Inputs          ________________________
  5121                          ;       Outputs         ________________________
  5122                          
  5123  1e2c  cdba1d            C575A:  CALL    C56E8
  5124  1e2f  115ef5                    LD      DE,BUF
  5125  1e32  d5                        PUSH    DE
  5126  1e33  0628                      LD      B,40
  5127  1e35  cd7a2b                    CALL    C64A8                   ; is upcase letter character ?
  5128  1e38  380b                      JR      C,J5773                 ; nope, illegal function call
  5129  1e3a  12                J5768:  LD      (DE),A
  5130  1e3b  13                        INC     DE
  5131  1e3c  fe3b                      CP      ';'                     ; end of variablename ?
  5132  1e3e  2808                      JR      Z,J5776                 ; yep,
  5133  1e40  cdba1d                    CALL    C56E8
  5134  1e43  10f5                      DJNZ    J5768
  5135  1e45  cd2c0e            J5773:  CALL    C475A                   ; illegal function call
  5136  1e48  e1                J5776:  POP     HL
  5137  1e49  c36d15                    JP      C4E9B                   ; get variable value
  5138                          
  5139  1e4c  cd2c1e            J577A:  CALL    C575A
  5140  1e4f  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  5141  1e52  eb                        EX      DE,HL
  5142  1e53  c9                        RET
  5143                          
  5144  1e54  cd2c1e            C5782:  CALL    C575A
  5145  1e57  3a3bfb                    LD      A,(MCLLEN)
  5146  1e5a  2a3cfb                    LD      HL,(MCLPTR)
  5147  1e5d  e3                        EX      (SP),HL
  5148  1e5e  f5                        PUSH    AF
  5149  1e5f  0e02                      LD      C,2
  5150  1e61  cd3029                    CALL    C625E                   ; check if enough stackspace for 2 words
  5151  1e64  c34b1d                    JP      J5679
  5152                          
  5153  1e67  af                I5795:  XOR     A
  5154  1e68  93                        SUB     E
  5155  1e69  5f                        LD      E,A
  5156  1e6a  9a                        SBC     A,D
  5157  1e6b  93                        SUB     E
  5158  1e6c  57                        LD      D,A
  5159  1e6d  c9                        RET
  5160                          
  5161                          ;       Subroutine      evaluate complex graphic coordinatepair
  5162                          ;       Inputs          ________________________
  5163                          ;       Outputs         ________________________
  5164                          
  5165  1e6e  7e                C579C:  LD      A,(HL)
  5166  1e6f  fe40                      CP      '@'
  5167  1e71  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  5168  1e74  010000                    LD      BC,0
  5169  1e77  50                        LD      D,B
  5170  1e78  59                        LD      E,C
  5171  1e79  fef2                      CP      $F2
  5172  1e7b  2816                      JR      Z,J57C1
  5173                          
  5174                          ;       Subroutine      evaluate simple graphic coordinatepair
  5175                          ;       Inputs          ________________________
  5176                          ;       Outputs         ________________________
  5177                          
  5178  1e7d  7e                C57AB:  LD      A,(HL)
  5179  1e7e  fedc                      CP      $DC
  5180  1e80  f5                        PUSH    AF
  5181  1e81  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  5182  1e84  cf                        RST     SYNCHR
  5183  1e85  28                        DEFB    '('                     ; check for (
  5184  1e86  cde118                    CALL    C520F                   ; evaluate integer operand
  5185  1e89  d5                        PUSH    DE
  5186  1e8a  cf                        RST     SYNCHR
  5187  1e8b  2c                        DEFB    ','                     ; check for ,
  5188  1e8c  cde118                    CALL    C520F                   ; evaluate integer operand
  5189  1e8f  cf                        RST     SYNCHR
  5190  1e90  29                        DEFB    ')'                     ; check for )
  5191  1e91  c1                        POP     BC
  5192  1e92  f1                        POP     AF
  5193  1e93  e5                J57C1:  PUSH    HL
  5194  1e94  2ab7fc                    LD      HL,(GRPACX)
  5195  1e97  2803                      JR      Z,J57CA
  5196  1e99  210000                    LD      HL,0
  5197  1e9c  09                J57CA:  ADD     HL,BC
  5198  1e9d  22b7fc                    LD      (GRPACX),HL
  5199  1ea0  22b3fc                    LD      (GXPOS),HL
  5200  1ea3  44                        LD      B,H
  5201  1ea4  4d                        LD      C,L
  5202  1ea5  2ab9fc                    LD      HL,(GRPACY)
  5203  1ea8  2803                      JR      Z,J57DB
  5204  1eaa  210000                    LD      HL,0
  5205  1ead  19                J57DB:  ADD     HL,DE
  5206  1eae  22b9fc                    LD      (GRPACY),HL
  5207  1eb1  22b5fc                    LD      (GYPOS),HL
  5208  1eb4  eb                        EX      DE,HL
  5209  1eb5  e1                        POP     HL
  5210  1eb6  c9                        RET
  5211                          
  5212                          ;       Subroutine      PRESET statement
  5213                          ;       Inputs          ________________________
  5214                          ;       Outputs         ________________________
  5215                          
  5216                          
  5217  1eb7  3aeaf3            C57E5:  LD      A,(BAKCLR)
  5218  1eba  1803                      JR      J57ED
  5219                          
  5220                          ;       Subroutine      PSET statement
  5221                          ;       Inputs          ________________________
  5222                          ;       Outputs         ________________________
  5223                          
  5224                          
  5225  1ebc  3ae9f3            C57EA:  LD      A,(FORCLR)
  5226  1ebf  f5                J57ED:  PUSH    AF
  5227  1ec0  cd7d1e                    CALL    C57AB                   ; evaluate simple graphic coordinatepair
  5228  1ec3  f1                J57F1:  POP     AF
  5229  1ec4  cd221f                    CALL    C5850
  5230  1ec7  e5                        PUSH    HL
  5231  1ec8  cd0000                    CALL    SCALXY
  5232  1ecb  3006                      JR      NC,J5801
  5233  1ecd  cd0000                    CALL    MAPXYC
  5234  1ed0  cd0000                    CALL    SETC
  5235  1ed3  e1                J5801:  POP     HL
  5236  1ed4  c9                        RET
  5237                          ; End of change
  5238                          
  5239                          
  5240                          ;       Subroutine      POINT function
  5241                          ;       Inputs          ________________________
  5242                          ;       Outputs         ________________________
  5243                          
  5244  1ed5  d7                J5803:  RST     CHRGTR                  ; get next BASIC character
  5245  1ed6  e5                        PUSH    HL
  5246  1ed7  cd0000                    CALL    FETCHC
  5247  1eda  d1                        POP     DE
  5248  1edb  e5                        PUSH    HL
  5249  1edc  f5                        PUSH    AF
  5250  1edd  2ab5fc                    LD      HL,(GYPOS)
  5251  1ee0  e5                        PUSH    HL
  5252  1ee1  2ab3fc                    LD      HL,(GXPOS)
  5253  1ee4  e5                        PUSH    HL
  5254  1ee5  2ab9fc                    LD      HL,(GRPACY)
  5255  1ee8  e5                        PUSH    HL
  5256  1ee9  2ab7fc                    LD      HL,(GRPACX)
  5257  1eec  e5                        PUSH    HL
  5258  1eed  eb                        EX      DE,HL
  5259  1eee  cd7d1e                    CALL    C57AB                   ; evaluate simple graphic coordinatepair
  5260  1ef1  e5                        PUSH    HL
  5261  1ef2  cd0000                    CALL    SCALXY
  5262  1ef5  21ffff                    LD      HL,$FFFF
  5263  1ef8  3009                      JR      NC,J5831
  5264  1efa  cd0000                    CALL    MAPXYC
  5265  1efd  cd0000                    CALL    READC
  5266  1f00  6f                        LD      L,A
  5267  1f01  2600                      LD      H,$0
  5268  1f03  cd0000            J5831:  CALL    C2F99                   ; put HL in DAC
  5269  1f06  d1                        POP     DE
  5270  1f07  e1                        POP     HL
  5271  1f08  22b7fc                    LD      (GRPACX),HL
  5272  1f0b  e1                        POP     HL
  5273  1f0c  22b9fc                    LD      (GRPACY),HL
  5274  1f0f  e1                        POP     HL
  5275  1f10  22b3fc                    LD      (GXPOS),HL
  5276  1f13  e1                        POP     HL
  5277  1f14  22b5fc                    LD      (GYPOS),HL
  5278  1f17  f1                        POP     AF
  5279  1f18  e1                        POP     HL
  5280  1f19  d5                        PUSH    DE
  5281  1f1a  cd0000                    CALL    STOREC
  5282  1f1d  e1                        POP     HL
  5283  1f1e  c9                        RET
  5284                          
  5285                          
  5286                          ;       Subroutine      __________________________
  5287                          ;       Inputs          ________________________
  5288                          ;       Outputs         ________________________
  5289                          
  5290                          
  5291  1f1f  3ae9f3            C584D:  LD      A,(FORCLR)
  5292                          
  5293                          ;       Subroutine      __________________________
  5294                          ;       Inputs          ________________________
  5295                          ;       Outputs         ________________________
  5296                          
  5297  1f22  c5                C5850:  PUSH    BC
  5298  1f23  d5                        PUSH    DE
  5299  1f24  5f                        LD      E,A
  5300  1f25  cd8e20                    CALL    C59BC
  5301  1f28  2b                        DEC     HL
  5302  1f29  d7                        RST     CHRGTR                  ; get next BASIC character
  5303  1f2a  2809                      JR      Z,J5863
  5304  1f2c  cf                        RST     SYNCHR
  5305  1f2d  2c                        DEFB    ','                     ; check for ,
  5306  1f2e  fe2c                      CP      ','
  5307  1f30  2803                      JR      Z,J5863
  5308  1f32  cdee18                    CALL    C521C                   ; evaluate byte operand
  5309  1f35  7b                J5863:  LD      A,E
  5310  1f36  e5                        PUSH    HL
  5311  1f37  cd0000                    CALL    SETATR
  5312  1f3a  da2c0e                    JP      C,C475A                 ; illegal function call
  5313  1f3d  e1                        POP     HL
  5314  1f3e  d1                        POP     DE
  5315  1f3f  c1                        POP     BC
  5316  1f40  c33c0d                    JP      C466A                   ; get BASIC character
  5317                          
  5318                          ;       Subroutine      __________________________
  5319                          ;       Inputs          ________________________
  5320                          ;       Outputs         ________________________
  5321                          
  5322  1f43  2ab3fc            C5871:  LD      HL,(GXPOS)
  5323  1f46  7d                        LD      A,L
  5324  1f47  91                        SUB     C
  5325  1f48  6f                        LD      L,A
  5326  1f49  7c                        LD      A,H
  5327  1f4a  98                        SBC     A,B
  5328  1f4b  67                        LD      H,A
  5329  1f4c  d0                J587A:  RET     NC
  5330                          
  5331                          ;       Subroutine      __________________________
  5332                          ;       Inputs          ________________________
  5333                          ;       Outputs         ________________________
  5334                          
  5335  1f4d  af                C587B:  XOR     A
  5336  1f4e  95                        SUB     L
  5337  1f4f  6f                        LD      L,A
  5338  1f50  9c                        SBC     A,H
  5339  1f51  95                        SUB     L
  5340  1f52  67                        LD      H,A
  5341  1f53  37                        SCF
  5342  1f54  c9                        RET
  5343                          
  5344                          
  5345                          ;       Subroutine      __________________________
  5346                          ;       Inputs          ________________________
  5347                          ;       Outputs         ________________________
  5348                          
  5349                          
  5350  1f55  2ab5fc            C5883:  LD      HL,(GYPOS)
  5351  1f58  7d                        LD      A,L
  5352  1f59  93                        SUB     E
  5353  1f5a  6f                        LD      L,A
  5354  1f5b  7c                        LD      A,H
  5355  1f5c  9a                        SBC     A,D
  5356  1f5d  67                        LD      H,A
  5357  1f5e  18ec                      JR      J587A
  5358                          
  5359                          
  5360                          ;       Subroutine      __________________________
  5361                          ;       Inputs          ________________________
  5362                          ;       Outputs         ________________________
  5363                          
  5364                          
  5365  1f60  e5                C588E:  PUSH    HL
  5366  1f61  2ab5fc                    LD      HL,(GYPOS)
  5367  1f64  eb                        EX      DE,HL
  5368  1f65  22b5fc                    LD      (GYPOS),HL
  5369  1f68  e1                        POP     HL
  5370  1f69  c9                        RET
  5371                          
  5372                          
  5373                          ;       Subroutine      __________________________
  5374                          ;       Inputs          ________________________
  5375                          ;       Outputs         ________________________
  5376                          
  5377                          
  5378  1f6a  cd601f            C5898:  CALL    C588E
  5379                          
  5380                          
  5381                          ;       Subroutine      __________________________
  5382                          ;       Inputs          ________________________
  5383                          ;       Outputs         ________________________
  5384                          
  5385                          
  5386  1f6d  e5                C589B:  PUSH    HL
  5387  1f6e  c5                        PUSH    BC
  5388  1f6f  2ab3fc                    LD      HL,(GXPOS)
  5389  1f72  e3                        EX      (SP),HL
  5390  1f73  22b3fc                    LD      (GXPOS),HL
  5391  1f76  c1                        POP     BC
  5392  1f77  e1                        POP     HL
  5393  1f78  c9                        RET
  5394                          
  5395                          ;       Subroutine      LINE statement (graphical)
  5396                          ;       Inputs          ________________________
  5397                          ;       Outputs         ________________________
  5398                          
  5399  1f79  cd6e1e            J58A7:  CALL    C579C                   ; evaluate complex graphic coordinatepair
  5400  1f7c  c5                J58AA:  PUSH    BC
  5401  1f7d  d5                        PUSH    DE
  5402  1f7e  cf                        RST     SYNCHR
  5403  1f7f  f2                        DEFB    $F2                    ; check for -
  5404  1f80  cd7d1e                    CALL    C57AB                   ; evaluate simple graphic coordinatepair
  5405  1f83  cd1f1f                    CALL    C584D
  5406  1f86  d1                        POP     DE
  5407  1f87  c1                        POP     BC
  5408  1f88  2844                      JR      Z,C58FC
  5409  1f8a  cf                        RST     SYNCHR
  5410  1f8b  2c                        DEFB    ','
  5411  1f8c  cf                        RST     SYNCHR
  5412  1f8d  42                        DEFB    'B'                     ; check for ,B
  5413  1f8e  cae41f                    JP      Z,J5912                 ; box option
  5414                          
  5415                          ; line box fill option (,BF)
  5416                          
  5417  1f91  cf                        RST     SYNCHR
  5418  1f92  46                        DEFB    'F'                     ; check for F
  5419  1f93  e5                        PUSH    HL
  5420  1f94  cd0000                    CALL    SCALXY
  5421  1f97  cd6a1f                    CALL    C5898
  5422  1f9a  cd0000                    CALL    SCALXY
  5423  1f9d  cd551f                    CALL    C5883
  5424  1fa0  dc601f                    CALL    C,C588E
  5425  1fa3  23                        INC     HL
  5426  1fa4  e5                        PUSH    HL
  5427  1fa5  cd431f                    CALL    C5871
  5428  1fa8  dc6d1f                    CALL    C,C589B
  5429  1fab  23                        INC     HL
  5430  1fac  e5                        PUSH    HL
  5431  1fad  cd0000                    CALL    MAPXYC
  5432  1fb0  d1                        POP     DE
  5433  1fb1  c1                        POP     BC
  5434  1fb2  d5                J58E0:  PUSH    DE
  5435  1fb3  c5                        PUSH    BC
  5436  1fb4  cd0000            J58E2:  CALL    FETCHC
  5437  1fb7  f5                        PUSH    AF
  5438  1fb8  e5                        PUSH    HL
  5439  1fb9  eb                        EX      DE,HL
  5440  1fba  cd0000                    CALL    NSETCX
  5441  1fbd  e1                        POP     HL
  5442  1fbe  f1                        POP     AF
  5443  1fbf  cd0000                    CALL    STOREC
  5444  1fc2  cd0000                    CALL    DOWNC
  5445  1fc5  c1                        POP     BC
  5446  1fc6  d1                        POP     DE
  5447  1fc7  0b                        DEC     BC
  5448  1fc8  78                        LD      A,B
  5449  1fc9  b1                        OR      C
  5450  1fca  20e6                      JR      NZ,J58E0
  5451  1fcc  e1                        POP     HL
  5452  1fcd  c9                        RET
  5453                          
  5454                          
  5455                          ;       Subroutine      __________________________
  5456                          ;       Inputs          ________________________
  5457                          ;       Outputs         ________________________
  5458                          
  5459                          
  5460  1fce  c5                C58FC:  PUSH    BC
  5461  1fcf  d5                        PUSH    DE
  5462  1fd0  e5                        PUSH    HL
  5463  1fd1  cd0e20                    CALL    C593C
  5464  1fd4  2ab7fc                    LD      HL,(GRPACX)
  5465  1fd7  22b3fc                    LD      (GXPOS),HL
  5466  1fda  2ab9fc                    LD      HL,(GRPACY)
  5467  1fdd  22b5fc                    LD      (GYPOS),HL
  5468  1fe0  e1                        POP     HL
  5469  1fe1  d1                        POP     DE
  5470  1fe2  c1                        POP     BC
  5471  1fe3  c9                        RET
  5472                          
  5473  1fe4  e5                J5912:  PUSH    HL
  5474  1fe5  2ab5fc                    LD      HL,(GYPOS)
  5475  1fe8  e5                        PUSH    HL
  5476  1fe9  d5                        PUSH    DE
  5477  1fea  eb                        EX      DE,HL
  5478  1feb  cdce1f                    CALL    C58FC
  5479  1fee  e1                        POP     HL
  5480  1fef  22b5fc                    LD      (GYPOS),HL
  5481  1ff2  eb                        EX      DE,HL
  5482  1ff3  cdce1f                    CALL    C58FC
  5483  1ff6  e1                        POP     HL
  5484  1ff7  22b5fc                    LD      (GYPOS),HL
  5485  1ffa  2ab3fc                    LD      HL,(GXPOS)
  5486  1ffd  c5                        PUSH    BC
  5487  1ffe  44                        LD      B,H
  5488  1fff  4d                        LD      C,L
  5489  2000  cdce1f                    CALL    C58FC
  5490  2003  e1                        POP     HL
  5491  2004  22b3fc                    LD      (GXPOS),HL
  5492  2007  44                        LD      B,H
  5493  2008  4d                        LD      C,L
  5494  2009  cdce1f                    CALL    C58FC
  5495  200c  e1                        POP     HL
  5496  200d  c9                        RET
  5497                          
  5498                          ;       Subroutine      draw line
  5499                          ;       Inputs          ________________________
  5500                          ;       Outputs         ________________________
  5501                          
  5502  200e  cdf3fe            C593C:  CALL    H_DOGR
  5503  2011  cd0000                    CALL    SCALXY
  5504  2014  cd6a1f            J5942:  CALL    C5898
  5505  2017  cd0000                    CALL    SCALXY
  5506  201a  cd551f                    CALL    C5883
  5507  201d  dc6a1f                    CALL    C,C5898
  5508  2020  d5                        PUSH    DE
  5509  2021  e5                        PUSH    HL
  5510  2022  cd431f                    CALL    C5871
  5511  2025  eb                        EX      DE,HL
  5512  2026  21fc00                    LD      HL,$00FC
  5513  2029  3003                      JR      NC,J595C
  5514  202b  21ff00                    LD      HL,$00FF
  5515  202e  e3                J595C:  EX      (SP),HL
  5516  202f  e7                        RST     DCOMPR
  5517  2030  3010                      JR      NC,J5970
  5518  2032  222df9                    LD      (MINDEL),HL
  5519  2035  e1                        POP     HL
  5520  2036  22edf3                    LD      (MAXUPD+1),HL
  5521  2039  210801                    LD      HL,$0108
  5522  203c  22f0f3                    LD      (MINUPD+1),HL
  5523  203f  eb                        EX      DE,HL
  5524  2040  180f                      JR      J597F
  5525                          
  5526  2042  e3                J5970:  EX      (SP),HL
  5527  2043  22f0f3                    LD      (MINUPD+1),HL
  5528  2046  210801                    LD      HL,$0108
  5529  2049  22edf3                    LD      (MAXUPD+1),HL
  5530  204c  eb                        EX      DE,HL
  5531  204d  222df9                    LD      (MINDEL),HL
  5532  2050  e1                        POP     HL
  5533  2051  d1                J597F:  POP     DE
  5534  2052  e5                        PUSH    HL
  5535  2053  cd4d1f                    CALL    C587B
  5536  2056  222ff9                    LD      (MAXDEL),HL
  5537  2059  cd0000                    CALL    MAPXYC
  5538  205c  d1                        POP     DE
  5539  205d  d5                        PUSH    DE
  5540  205e  cd8620                    CALL    C59B4
  5541  2061  c1                        POP     BC
  5542  2062  03                        INC     BC
  5543  2063  1807                      JR      J599A
  5544                          
  5545  2065  e1                J5993:  POP     HL
  5546  2066  78                        LD      A,B
  5547  2067  b1                        OR      C
  5548  2068  c8                        RET     Z
  5549  2069  cdecf3            J5997:  CALL    MAXUPD
  5550  206c  cd0000            J599A:  CALL    SETC
  5551  206f  0b                        DEC     BC
  5552  2070  e5                        PUSH    HL
  5553  2071  2a2df9                    LD      HL,(MINDEL)
  5554  2074  19                        ADD     HL,DE
  5555  2075  eb                        EX      DE,HL
  5556  2076  2a2ff9                    LD      HL,(MAXDEL)
  5557  2079  19                        ADD     HL,DE
  5558  207a  30e9                      JR      NC,J5993
  5559  207c  eb                        EX      DE,HL
  5560  207d  e1                        POP     HL
  5561  207e  78                        LD      A,B
  5562  207f  b1                        OR      C
  5563  2080  c8                        RET     Z
  5564  2081  cdeff3                    CALL    MINUPD
  5565  2084  18e3                      JR      J5997
  5566                          
  5567                          
  5568                          ;       Subroutine      __________________________
  5569                          ;       Inputs          ________________________
  5570                          ;       Outputs         ________________________
  5571                          
  5572                          
  5573  2086  7a                C59B4:  LD      A,D
  5574  2087  b7                        OR      A
  5575  2088  1f                        RRA
  5576  2089  57                        LD      D,A
  5577  208a  7b                        LD      A,E
  5578  208b  1f                        RRA
  5579  208c  5f                        LD      E,A
  5580  208d  c9                        RET
  5581                          
  5582                          
  5583                          ;       Subroutine      __________________________
  5584                          ;       Inputs          ________________________
  5585                          ;       Outputs         ________________________
  5586                          
  5587                          
  5588  208e  3aaffc            C59BC:  LD      A,(SCRMOD)
  5589  2091  fe02                      CP      2
  5590  2093  f0                        RET     P
  5591  2094  c32c0e                    JP      C475A                   ; illegal function call
  5592                          
  5593                          ;       Subroutine      PAINT statement
  5594                          ;       Inputs          ________________________
  5595                          ;       Outputs         ________________________
  5596                          
  5597  2097  cd6e1e            C59C5:  CALL    C579C                   ; evaluate complex graphic coordinatepair
  5598  209a  c5                J59C8:  PUSH    BC
  5599  209b  d5                        PUSH    DE
  5600  209c  cd1f1f                    CALL    C584D
  5601  209f  3af2f3                    LD      A,(ATRBYT)
  5602  20a2  5f                        LD      E,A
  5603  20a3  2b                        DEC     HL
  5604  20a4  d7                        RST     CHRGTR                  ; get next BASIC character
  5605  20a5  2805                      JR      Z,J59DA
  5606  20a7  cf                        RST     SYNCHR
  5607  20a8  2c                        DEFB    ','                     ; check for ,
  5608  20a9  cdee18                    CALL    C521C                   ; evaluate byte operand
  5609  20ac  7b                J59DA:  LD      A,E
  5610  20ad  cd0000                    CALL    PNTINI
  5611  20b0  da2c0e                    JP      C,C475A                 ; illegal function call
  5612  20b3  d1                        POP     DE
  5613  20b4  c1                        POP     BC
  5614  20b5  e5                        PUSH    HL
  5615  20b6  cd6325                    CALL    C5E91
  5616  20b9  cd0000                    CALL    MAPXYC
  5617  20bc  110100                    LD      DE,1
  5618  20bf  0600                      LD      B,$0
  5619  20c1  cdae21                    CALL    C5ADC
  5620  20c4  2814                      JR      Z,J5A08
  5621  20c6  e5                        PUSH    HL
  5622  20c7  cdbf21                    CALL    C5AED
  5623  20ca  d1                        POP     DE
  5624  20cb  19                        ADD     HL,DE
  5625  20cc  eb                        EX      DE,HL
  5626  20cd  af                        XOR     A
  5627  20ce  cda021                    CALL    C5ACE
  5628  20d1  3e40                      LD      A,$40
  5629  20d3  cda021                    CALL    C5ACE
  5630  20d6  06c0                      LD      B,$C0
  5631  20d8  181e                      JR      J5A26
  5632                          
  5633  20da  e1                J5A08:  POP     HL
  5634  20db  c9                        RET
  5635                          
  5636  20dc  cd0000            J5A0A:  CALL    CKCNTC
  5637  20df  3a4af9                    LD      A,(LOHDIR)
  5638  20e2  b7                        OR      A
  5639  20e3  280c                      JR      Z,J5A1F
  5640  20e5  2a4bf9                    LD      HL,(LOHADR)
  5641  20e8  e5                        PUSH    HL
  5642  20e9  2a49f9                    LD      HL,(LOHMSK)
  5643  20ec  e5                        PUSH    HL
  5644  20ed  2a4df9                    LD      HL,(LOHCNT)
  5645  20f0  e5                        PUSH    HL
  5646  20f1  d1                J5A1F:  POP     DE
  5647  20f2  c1                        POP     BC
  5648  20f3  e1                        POP     HL
  5649  20f4  79                        LD      A,C
  5650  20f5  cd0000                    CALL    STOREC
  5651  20f8  78                J5A26:  LD      A,B
  5652  20f9  3253f9                    LD      (PDIREC),A
  5653  20fc  87                        ADD     A,A
  5654  20fd  28db                      JR      Z,J5A08
  5655  20ff  d5                        PUSH    DE
  5656  2100  3005                      JR      NC,J5A35
  5657  2102  cd0000                    CALL    TUPC
  5658  2105  1803                      JR      J5A38
  5659                          
  5660  2107  cd0000            J5A35:  CALL    TDOWNC
  5661  210a  d1                J5A38:  POP     DE
  5662  210b  38e4                      JR      C,J5A1F
  5663  210d  0600                      LD      B,$0
  5664  210f  cdae21                    CALL    C5ADC
  5665  2112  caf120                    JP      Z,J5A1F
  5666  2115  af                        XOR     A
  5667  2116  324af9                    LD      (LOHDIR),A
  5668  2119  cdbf21                    CALL    C5AED
  5669  211c  5d                        LD      E,L
  5670  211d  54                        LD      D,H
  5671  211e  b7                        OR      A
  5672  211f  281a                      JR      Z,J5A69
  5673  2121  2b                        DEC     HL
  5674  2122  2b                        DEC     HL
  5675  2123  7c                        LD      A,H
  5676  2124  87                        ADD     A,A
  5677  2125  3814                      JR      C,J5A69
  5678  2127  ed534df9                  LD      (LOHCNT),DE
  5679  212b  cd0000                    CALL    FETCHC
  5680  212e  224bf9                    LD      (LOHADR),HL
  5681  2131  3249f9                    LD      (LOHMSK),A
  5682  2134  3a53f9                    LD      A,(PDIREC)
  5683  2137  2f                        CPL
  5684  2138  324af9                    LD      (LOHDIR),A
  5685  213b  2a51f9            J5A69:  LD      HL,(MOVCNT)
  5686  213e  19                        ADD     HL,DE
  5687  213f  eb                        EX      DE,HL
  5688  2140  cd9421                    CALL    C5AC2
  5689  2143  2a42f9            J5A71:  LD      HL,(CSAVEA)
  5690  2146  3a44f9                    LD      A,(CSAVEM)
  5691  2149  cd0000                    CALL    STOREC
  5692  214c  2a4ff9            J5A7A:  LD      HL,(SKPCNT)
  5693  214f  ed5b51f9                  LD      DE,(MOVCNT)
  5694  2153  b7                        OR      A
  5695  2154  ed52                      SBC     HL,DE
  5696  2156  2839                      JR      Z,J5ABF
  5697  2158  381c                      JR      C,J5AA4
  5698  215a  eb                        EX      DE,HL
  5699  215b  0601                      LD      B,$1
  5700  215d  cdae21                    CALL    C5ADC
  5701  2160  282f                      JR      Z,J5ABF
  5702  2162  b7                        OR      A
  5703  2163  28e7                      JR      Z,J5A7A
  5704  2165  eb                        EX      DE,HL
  5705  2166  2a42f9                    LD      HL,(CSAVEA)
  5706  2169  3a44f9                    LD      A,(CSAVEM)
  5707  216c  4f                        LD      C,A
  5708  216d  3a53f9                    LD      A,(PDIREC)
  5709  2170  47                        LD      B,A
  5710  2171  cda521                    CALL    C5AD3
  5711  2174  18d6                      JR      J5A7A
  5712                          
  5713  2176  cd4d1f            J5AA4:  CALL    C587B
  5714  2179  2b                        DEC     HL
  5715  217a  2b                        DEC     HL
  5716  217b  7c                        LD      A,H
  5717  217c  87                        ADD     A,A
  5718  217d  3812                      JR      C,J5ABF
  5719  217f  23                        INC     HL
  5720  2180  e5                        PUSH    HL
  5721  2181  cd0000            J5AAF:  CALL    LEFTC
  5722  2184  2b                        DEC     HL
  5723  2185  7c                        LD      A,H
  5724  2186  b5                        OR      L
  5725  2187  20f8                      JR      NZ,J5AAF
  5726  2189  d1                        POP     DE
  5727  218a  3a53f9                    LD      A,(PDIREC)
  5728  218d  2f                        CPL
  5729  218e  cda021                    CALL    C5ACE
  5730  2191  c3dc20            J5ABF:  JP      J5A0A
  5731                          
  5732                          
  5733                          ;       Subroutine      __________________________
  5734                          ;       Inputs          ________________________
  5735                          ;       Outputs         ________________________
  5736                          
  5737                          
  5738  2194  3a54f9            C5AC2:  LD      A,(LFPROG)
  5739  2197  4f                        LD      C,A
  5740  2198  3a55f9                    LD      A,(RTPROG)
  5741  219b  b1                        OR      C
  5742  219c  c8                        RET     Z
  5743  219d  3a53f9                    LD      A,(PDIREC)
  5744                          
  5745                          ;       Subroutine      __________________________
  5746                          ;       Inputs          ________________________
  5747                          ;       Outputs         ________________________
  5748                          
  5749  21a0  47                C5ACE:  LD      B,A
  5750  21a1  cd0000                    CALL    FETCHC
  5751  21a4  4f                        LD      C,A
  5752                          
  5753                          ;       Subroutine      __________________________
  5754                          ;       Inputs          ________________________
  5755                          ;       Outputs         ________________________
  5756                          
  5757  21a5  e3                C5AD3:  EX      (SP),HL
  5758  21a6  c5                        PUSH    BC
  5759  21a7  d5                        PUSH    DE
  5760  21a8  e5                        PUSH    HL
  5761  21a9  0e02                      LD      C,2
  5762  21ab  c33029                    JP      C625E                   ; check if enough stackspace for 2 words and quit
  5763                          
  5764                          
  5765                          ;       Subroutine      __________________________
  5766                          ;       Inputs          ________________________
  5767                          ;       Outputs         ________________________
  5768                          
  5769                          
  5770  21ae  cd0000            C5ADC:  CALL    SCANR
  5771  21b1  ed534ff9                  LD      (SKPCNT),DE
  5772  21b5  2251f9                    LD      (MOVCNT),HL
  5773  21b8  7c                        LD      A,H
  5774  21b9  b5                        OR      L
  5775  21ba  79                        LD      A,C
  5776  21bb  3255f9                    LD      (RTPROG),A
  5777  21be  c9                        RET
  5778                          
  5779                          
  5780                          ;       Subroutine      __________________________
  5781                          ;       Inputs          ________________________
  5782                          ;       Outputs         ________________________
  5783                          
  5784                          
  5785  21bf  cd0000            C5AED:  CALL    FETCHC
  5786  21c2  e5                        PUSH    HL
  5787  21c3  f5                        PUSH    AF
  5788  21c4  2a42f9                    LD      HL,(CSAVEA)
  5789  21c7  3a44f9                    LD      A,(CSAVEM)
  5790  21ca  cd0000                    CALL    STOREC
  5791  21cd  f1                        POP     AF
  5792  21ce  e1                        POP     HL
  5793  21cf  2242f9                    LD      (CSAVEA),HL
  5794  21d2  3244f9                    LD      (CSAVEM),A
  5795  21d5  cd0000                    CALL    SCANL
  5796  21d8  79                        LD      A,C
  5797  21d9  3254f9                    LD      (LFPROG),A
  5798  21dc  c9                        RET
  5799                          
  5800                          
  5801                          ;       Subroutine      __________________________
  5802                          ;       Inputs          ________________________
  5803                          ;       Outputs         ________________________
  5804                          
  5805                          
  5806  21dd  eb                C5B0B:  EX      DE,HL
  5807  21de  cd4d1f                    CALL    C587B
  5808  21e1  eb                        EX      DE,HL
  5809  21e2  c9                        RET
  5810                          
  5811                          ;       Subroutine      CIRCLE statement
  5812                          ;       Inputs          ________________________
  5813                          ;       Outputs         ________________________
  5814                          
  5815                          
  5816  21e3  cd6e1e            C5B11:  CALL    C579C                   ; evaluate complex graphic coordinatepair
  5817  21e6  cf                        RST     SYNCHR
  5818  21e7  2c                        DEFB    ','                     ; check for ,
  5819  21e8  cde118                    CALL    C520F                   ; evaluate integer operand
  5820  21eb  e5                        PUSH    HL
  5821  21ec  eb                        EX      DE,HL
  5822  21ed  22b3fc                    LD      (GXPOS),HL
  5823  21f0  cd0000                    CALL    C2F99                   ; put HL in DAC
  5824  21f3  cd0000                    CALL    C2FB2                   ; convert DAC to single real
  5825  21f6  014070                    LD      BC,$7040
  5826  21f9  117107                    LD      DE,$0771
  5827  21fc  cd0000                    CALL    C325C                   ; single real muliply
  5828  21ff  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  5829  2202  2236f9                    LD      (CNPNTS),HL
  5830  2205  af                        XOR     A
  5831  2206  3235f9                    LD      (CLINEF),A
  5832  2209  3241f9                    LD      (CSCLXY),A
  5833  220c  e1                        POP     HL
  5834  220d  cd1f1f                    CALL    C584D
  5835  2210  0e01                      LD      C,$1
  5836  2212  110000                    LD      DE,0
  5837  2215  cde923                    CALL    C5D17
  5838  2218  d5                        PUSH    DE
  5839  2219  0e80                      LD      C,$80
  5840  221b  11ffff                    LD      DE,$FFFF
  5841  221e  cde923                    CALL    C5D17
  5842  2221  e3                        EX      (SP),HL
  5843  2222  af                        XOR     A
  5844  2223  eb                        EX      DE,HL
  5845  2224  e7                        RST     DCOMPR
  5846  2225  3e00                      LD      A,$0
  5847  2227  300f                      JR      NC,J5B66
  5848  2229  3d                        DEC     A
  5849  222a  eb                        EX      DE,HL
  5850  222b  f5                        PUSH    AF
  5851  222c  3a35f9                    LD      A,(CLINEF)
  5852  222f  4f                        LD      C,A
  5853  2230  07                        RLCA
  5854  2231  07                        RLCA
  5855  2232  b1                        OR      C
  5856  2233  0f                        RRCA
  5857  2234  3235f9                    LD      (CLINEF),A
  5858  2237  f1                        POP     AF
  5859  2238  3238f9            J5B66:  LD      (CPLOTF),A
  5860  223b  ed533ff9                  LD      (CSTCNT),DE
  5861  223f  2233f9                    LD      (CENCNT),HL
  5862  2242  e1                        POP     HL
  5863  2243  2b                        DEC     HL
  5864  2244  d7                        RST     CHRGTR                  ; get next BASIC character
  5865  2245  2010                      JR      NZ,J5B85
  5866  2247  e5                        PUSH    HL
  5867  2248  cd0000                    CALL    GTASPC
  5868  224b  7c                        LD      A,H
  5869  224c  b7                        OR      A
  5870  224d  2832                      JR      Z,J5BAF
  5871  224f  3e01                      LD      A,$1
  5872  2251  3241f9                    LD      (CSCLXY),A
  5873  2254  eb                        EX      DE,HL
  5874  2255  182a                      JR      J5BAF
  5875                          
  5876  2257  cf                J5B85:  RST     SYNCHR
  5877  2258  2c                        DEFB    ','                     ; check for ,
  5878  2259  cd3613                    CALL    C4C64                   ; evaluate expression
  5879  225c  e5                        PUSH    HL
  5880  225d  cd0000                    CALL    C2FB2                   ; convert DAC to single real
  5881  2260  cd0000                    CALL    C2E71                   ; get sign DAC
  5882  2263  ca2c0e                    JP      Z,C475A                 ; DAC is zero, illegal function call
  5883  2266  fa2c0e                    JP      M,C475A                 ; DAC is negative, illegal function call
  5884  2269  cd3524                    CALL    C5D63
  5885  226c  2007                      JR      NZ,J5BA3
  5886  226e  3c                        INC     A
  5887  226f  3241f9                    LD      (CSCLXY),A
  5888  2272  cd0000                    CALL    C3267                   ; single real divide
  5889  2275  014325            J5BA3:  LD      BC,$2543
  5890  2278  116000                    LD      DE,$0060
  5891  227b  cd0000                    CALL    C325C                   ; single real muliply
  5892  227e  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  5893  2281  2231f9            J5BAF:  LD      (ASPECT),HL
  5894  2284  110000                    LD      DE,0
  5895  2287  ed533df9                  LD      (CRCSUM),DE
  5896  228b  2ab3fc                    LD      HL,(GXPOS)
  5897  228e  29                        ADD     HL,HL
  5898  228f  cd0000            J5BBD:  CALL    CKCNTC
  5899  2292  7b                        LD      A,E
  5900  2293  1f                        RRA
  5901  2294  3816                      JR      C,J5BDA
  5902  2296  d5                        PUSH    DE
  5903  2297  e5                        PUSH    HL
  5904  2298  23                        INC     HL
  5905  2299  eb                        EX      DE,HL
  5906  229a  cd8620                    CALL    C59B4
  5907  229d  eb                        EX      DE,HL
  5908  229e  13                        INC     DE
  5909  229f  cd8620                    CALL    C59B4
  5910  22a2  cdd822                    CALL    C5C06
  5911  22a5  d1                        POP     DE
  5912  22a6  e1                        POP     HL
  5913  22a7  e7                        RST     DCOMPR
  5914  22a8  d2da20                    JP      NC,J5A08
  5915  22ab  eb                        EX      DE,HL
  5916  22ac  44                J5BDA:  LD      B,H
  5917  22ad  4d                        LD      C,L
  5918  22ae  2a3df9                    LD      HL,(CRCSUM)
  5919  22b1  23                        INC     HL
  5920  22b2  19                        ADD     HL,DE
  5921  22b3  19                        ADD     HL,DE
  5922  22b4  7c                        LD      A,H
  5923  22b5  87                        ADD     A,A
  5924  22b6  380c                      JR      C,J5BF2
  5925  22b8  d5                        PUSH    DE
  5926  22b9  eb                        EX      DE,HL
  5927  22ba  60                        LD      H,B
  5928  22bb  69                        LD      L,C
  5929  22bc  29                        ADD     HL,HL
  5930  22bd  2b                        DEC     HL
  5931  22be  eb                        EX      DE,HL
  5932  22bf  b7                        OR      A
  5933  22c0  ed52                      SBC     HL,DE
  5934  22c2  0b                        DEC     BC
  5935  22c3  d1                        POP     DE
  5936  22c4  223df9            J5BF2:  LD      (CRCSUM),HL
  5937  22c7  60                        LD      H,B
  5938  22c8  69                        LD      L,C
  5939  22c9  13                        INC     DE
  5940  22ca  18c3                      JR      J5BBD
  5941                          
  5942                          
  5943                          ;       Subroutine      __________________________
  5944                          ;       Inputs          ________________________
  5945                          ;       Outputs         ________________________
  5946                          
  5947                          
  5948  22cc  d5                C5BFA:  PUSH    DE
  5949  22cd  cdbd23                    CALL    C5CEB
  5950  22d0  e1                        POP     HL
  5951  22d1  3a41f9                    LD      A,(CSCLXY)
  5952  22d4  b7                        OR      A
  5953  22d5  c8                        RET     Z
  5954  22d6  eb                        EX      DE,HL
  5955  22d7  c9                        RET
  5956                          
  5957                          
  5958                          ;       Subroutine      __________________________
  5959                          ;       Inputs          ________________________
  5960                          ;       Outputs         ________________________
  5961                          
  5962                          
  5963  22d8  ed5339f9          C5C06:  LD      (CPCNT),DE
  5964  22dc  e5                        PUSH    HL
  5965  22dd  210000                    LD      HL,0
  5966  22e0  223bf9                    LD      (CPCNT8),HL
  5967  22e3  cdcc22                    CALL    C5BFA
  5968  22e6  2245f9                    LD      (CXOFF),HL
  5969  22e9  e1                        POP     HL
  5970  22ea  eb                        EX      DE,HL
  5971  22eb  e5                        PUSH    HL
  5972  22ec  cdcc22                    CALL    C5BFA
  5973  22ef  ed5347f9                  LD      (CYOFF),DE
  5974  22f3  d1                        POP     DE
  5975  22f4  cddd21                    CALL    C5B0B
  5976  22f7  cd1a23                    CALL    C5C48
  5977  22fa  e5                        PUSH    HL
  5978  22fb  d5                        PUSH    DE
  5979  22fc  2a36f9                    LD      HL,(CNPNTS)
  5980  22ff  223bf9                    LD      (CPCNT8),HL
  5981  2302  ed5b39f9                  LD      DE,(CPCNT)
  5982  2306  b7                        OR      A
  5983  2307  ed52                      SBC     HL,DE
  5984  2309  2239f9                    LD      (CPCNT),HL
  5985  230c  2a45f9                    LD      HL,(CXOFF)
  5986  230f  cd4d1f                    CALL    C587B
  5987  2312  2245f9                    LD      (CXOFF),HL
  5988  2315  d1                        POP     DE
  5989  2316  e1                        POP     HL
  5990  2317  cddd21                    CALL    C5B0B
  5991                          
  5992                          ;       Subroutine      __________________________
  5993                          ;       Inputs          ________________________
  5994                          ;       Outputs         ________________________
  5995                          
  5996  231a  3e04              C5C48:  LD      A,$4
  5997  231c  f5                J5C4A:  PUSH    AF
  5998  231d  e5                        PUSH    HL
  5999  231e  d5                        PUSH    DE
  6000  231f  e5                        PUSH    HL
  6001  2320  d5                        PUSH    DE
  6002  2321  ed5b3bf9                  LD      DE,(CPCNT8)
  6003  2325  2a36f9                    LD      HL,(CNPNTS)
  6004  2328  29                        ADD     HL,HL
  6005  2329  19                        ADD     HL,DE
  6006  232a  223bf9                    LD      (CPCNT8),HL
  6007  232d  2a39f9                    LD      HL,(CPCNT)
  6008  2330  19                        ADD     HL,DE
  6009  2331  eb                        EX      DE,HL
  6010  2332  2a3ff9                    LD      HL,(CSTCNT)
  6011  2335  e7                        RST     DCOMPR
  6012  2336  281a                      JR      Z,J5C80
  6013  2338  3008                      JR      NC,J5C70
  6014  233a  2a33f9                    LD      HL,(CENCNT)
  6015  233d  e7                        RST     DCOMPR
  6016  233e  280a                      JR      Z,J5C78
  6017  2340  3020                      JR      NC,J5C90
  6018  2342  3a38f9            J5C70:  LD      A,(CPLOTF)
  6019  2345  b7                        OR      A
  6020  2346  2024                      JR      NZ,J5C9A
  6021  2348  181e                      JR      J5C96
  6022                          
  6023  234a  3a35f9            J5C78:  LD      A,(CLINEF)
  6024  234d  87                        ADD     A,A
  6025  234e  301c                      JR      NC,J5C9A
  6026  2350  1806                      JR      J5C86
  6027                          
  6028  2352  3a35f9            J5C80:  LD      A,(CLINEF)
  6029  2355  1f                        RRA
  6030  2356  3014                      JR      NC,J5C9A
  6031  2358  d1                J5C86:  POP     DE
  6032  2359  e1                        POP     HL
  6033  235a  cdae23                    CALL    C5CDC
  6034  235d  cd9f23                    CALL    C5CCD
  6035  2360  181a                      JR      J5CAA
  6036                          
  6037  2362  3a38f9            J5C90:  LD      A,(CPLOTF)
  6038  2365  b7                        OR      A
  6039  2366  2804                      JR      Z,J5C9A
  6040  2368  d1                J5C96:  POP     DE
  6041  2369  e1                        POP     HL
  6042  236a  1810                      JR      J5CAA
  6043                          
  6044  236c  d1                J5C9A:  POP     DE
  6045  236d  e1                        POP     HL
  6046  236e  cdae23                    CALL    C5CDC
  6047  2371  cd0000                    CALL    SCALXY
  6048  2374  3006                      JR      NC,J5CAA
  6049  2376  cd0000                    CALL    MAPXYC
  6050  2379  cd0000                    CALL    SETC
  6051  237c  d1                J5CAA:  POP     DE
  6052  237d  e1                        POP     HL
  6053  237e  f1                        POP     AF
  6054  237f  3d                        DEC     A
  6055  2380  c8                        RET     Z
  6056  2381  f5                        PUSH    AF
  6057  2382  d5                        PUSH    DE
  6058  2383  ed5b45f9                  LD      DE,(CXOFF)
  6059  2387  cddd21                    CALL    C5B0B
  6060  238a  2245f9                    LD      (CXOFF),HL
  6061  238d  eb                        EX      DE,HL
  6062  238e  d1                        POP     DE
  6063  238f  e5                        PUSH    HL
  6064  2390  2a47f9                    LD      HL,(CYOFF)
  6065  2393  eb                        EX      DE,HL
  6066  2394  2247f9                    LD      (CYOFF),HL
  6067  2397  cddd21                    CALL    C5B0B
  6068  239a  e1                        POP     HL
  6069  239b  f1                        POP     AF
  6070  239c  c31c23                    JP      J5C4A
  6071                          
  6072                          
  6073                          ;       Subroutine      __________________________
  6074                          ;       Inputs          ________________________
  6075                          ;       Outputs         ________________________
  6076                          
  6077                          
  6078  239f  2ab7fc            C5CCD:  LD      HL,(GRPACX)
  6079  23a2  22b3fc                    LD      (GXPOS),HL
  6080  23a5  2ab9fc                    LD      HL,(GRPACY)
  6081  23a8  22b5fc                    LD      (GYPOS),HL
  6082  23ab  c30e20                    JP      C593C
  6083                          
  6084                          
  6085                          ;       Subroutine      __________________________
  6086                          ;       Inputs          ________________________
  6087                          ;       Outputs         ________________________
  6088                          
  6089                          
  6090  23ae  d5                C5CDC:  PUSH    DE
  6091  23af  ed5bb7fc                  LD      DE,(GRPACX)
  6092  23b3  19                        ADD     HL,DE
  6093  23b4  44                        LD      B,H
  6094  23b5  4d                        LD      C,L
  6095  23b6  d1                        POP     DE
  6096  23b7  2ab9fc                    LD      HL,(GRPACY)
  6097  23ba  19                        ADD     HL,DE
  6098  23bb  eb                        EX      DE,HL
  6099  23bc  c9                        RET
  6100                          
  6101                          
  6102                          ;       Subroutine      __________________________
  6103                          ;       Inputs          ________________________
  6104                          ;       Outputs         ________________________
  6105                          
  6106                          
  6107  23bd  2a31f9            C5CEB:  LD      HL,(ASPECT)
  6108  23c0  7d                        LD      A,L
  6109  23c1  b7                        OR      A
  6110  23c2  2004                      JR      NZ,J5CF6
  6111  23c4  b4                        OR      H
  6112  23c5  c0                        RET     NZ
  6113  23c6  eb                        EX      DE,HL
  6114  23c7  c9                        RET
  6115                          
  6116  23c8  4a                J5CF6:  LD      C,D
  6117  23c9  1600                      LD      D,$0
  6118  23cb  f5                        PUSH    AF
  6119  23cc  cddc23                    CALL    C5D0A
  6120  23cf  1e80                      LD      E,$80
  6121  23d1  19                        ADD     HL,DE
  6122  23d2  59                        LD      E,C
  6123  23d3  4c                        LD      C,H
  6124  23d4  f1                        POP     AF
  6125  23d5  cddc23                    CALL    C5D0A
  6126  23d8  59                        LD      E,C
  6127  23d9  19                        ADD     HL,DE
  6128  23da  eb                        EX      DE,HL
  6129  23db  c9                        RET
  6130                          
  6131                          
  6132                          ;       Subroutine      __________________________
  6133                          ;       Inputs          ________________________
  6134                          ;       Outputs         ________________________
  6135                          
  6136                          
  6137  23dc  0608              C5D0A:  LD      B,$8
  6138  23de  210000                    LD      HL,0
  6139  23e1  29                J5D0F:  ADD     HL,HL
  6140  23e2  87                        ADD     A,A
  6141  23e3  3001                      JR      NC,J5D14
  6142  23e5  19                        ADD     HL,DE
  6143  23e6  10f9              J5D14:  DJNZ    J5D0F
  6144  23e8  c9                        RET
  6145                          
  6146                          
  6147                          ;       Subroutine      __________________________
  6148                          ;       Inputs          ________________________
  6149                          ;       Outputs         ________________________
  6150                          
  6151                          
  6152  23e9  2b                C5D17:  DEC     HL
  6153  23ea  d7                        RST     CHRGTR                  ; get next BASIC character
  6154  23eb  c8                        RET     Z
  6155  23ec  cf                        RST     SYNCHR
  6156  23ed  2c                        DEFB    ','                     ; check for ,
  6157  23ee  fe2c                      CP      ','
  6158  23f0  c8                        RET     Z
  6159  23f1  c5                        PUSH    BC
  6160  23f2  cd3613                    CALL    C4C64                   ; evaluate expression
  6161  23f5  e3                        EX      (SP),HL
  6162  23f6  e5                        PUSH    HL
  6163  23f7  cd0000                    CALL    C2FB2                   ; convert DAC to single real
  6164  23fa  c1                        POP     BC
  6165  23fb  21f6f7                    LD      HL,DAC
  6166  23fe  7e                        LD      A,(HL)
  6167  23ff  b7                        OR      A
  6168  2400  f20c24                    JP      P,J5D3A
  6169  2403  e67f                      AND     $7F
  6170  2405  77                        LD      (HL),A
  6171  2406  2135f9                    LD      HL,CLINEF
  6172  2409  7e                        LD      A,(HL)
  6173  240a  b1                        OR      C
  6174  240b  77                        LD      (HL),A
  6175  240c  014015            J5D3A:  LD      BC,$1540
  6176  240f  119155                    LD      DE,$5591
  6177  2412  cd0000                    CALL    C325C                   ; single real muliply
  6178  2415  cd3524                    CALL    C5D63
  6179  2418  ca2c0e                    JP      Z,C475A                 ; illegal function call
  6180  241b  cd0000                    CALL    C2EB1                   ; push DAC (single)
  6181  241e  2a36f9                    LD      HL,(CNPNTS)
  6182  2421  29                        ADD     HL,HL
  6183  2422  29                        ADD     HL,HL
  6184  2423  29                        ADD     HL,HL
  6185  2424  cd0000                    CALL    C2F99                   ; put HL in DAC
  6186  2427  cd0000                    CALL    C2FB2                   ; convert DAC to single real
  6187  242a  c1                        POP     BC
  6188  242b  d1                        POP     DE
  6189  242c  cd0000                    CALL    C325C                   ; single real muliply
  6190  242f  cd0000                    CALL    C2F8A                   ; convert DAC to integer
  6191  2432  d1                        POP     DE
  6192  2433  eb                        EX      DE,HL
  6193  2434  c9                        RET
  6194                          
  6195                          
  6196                          ;       Subroutine      __________________________
  6197                          ;       Inputs          ________________________
  6198                          ;       Outputs         ________________________
  6199                          
  6200                          
  6201  2435  014110            C5D63:  LD      BC,$1041
  6202  2438  110000                    LD      DE,$0000
  6203  243b  cd0000                    CALL    C2F21                   ; single real compare
  6204  243e  3d                        DEC     A
  6205  243f  c9                        RET
  6206                          
  6207                          ;       Subroutine      DRAW statement
  6208                          ;       Inputs          ________________________
  6209                          ;       Outputs         ________________________
  6210                          
  6211                          
  6212  2440  3aaffc            C5D6E:  LD      A,(SCRMOD)
  6213  2443  fe02                      CP      2
  6214  2445  da2c0e                    JP      C,C475A                 ; illegal function call
  6215  2448  115524                    LD      DE,I5D83
  6216  244b  af                        XOR     A
  6217  244c  32bbfc                    LD      (DRWFLG),A
  6218  244f  3258f9                    LD      (MCLFLG),A
  6219  2452  c33e1d                    JP      J566C
  6220                          
  6221  2455  d5                I5D83:  DEFB    'U'+128
  6222  2456  8324                      DEFW    C5DB1
  6223  2458  c4                        DEFB    'D'+128
  6224  2459  8624                      DEFW    C5DB4
  6225  245b  cc                        DEFB    'L'+128
  6226  245c  8b24                      DEFW    C5DB9
  6227  245e  d2                        DEFB    'R'+128
  6228  245f  8e24                      DEFW    C5DBC
  6229  2461  4d                        DEFB    'M'
  6230  2462  aa24                      DEFW    C5DD8
  6231  2464  c5                        DEFB    'E'+128
  6232  2465  9c24                      DEFW    C5DCA
  6233  2467  c6                        DEFB    'F'+128
  6234  2468  9824                      DEFW    C5DC6
  6235  246a  c7                        DEFB    'G'+128
  6236  246b  a324                      DEFW    C5DD1
  6237  246d  c8                        DEFB    'H'+128
  6238  246e  9524                      DEFW    C5DC3
  6239  2470  c1                        DEFB    'A'+128
  6240  2471  2025                      DEFW    C5E4E
  6241  2473  42                        DEFB    'B'
  6242  2474  1825                      DEFW    C5E46
  6243  2476  4e                        DEFB    'N'
  6244  2477  1425                      DEFW    C5E42
  6245  2479  58                        DEFB    'X'
  6246  247a  541e                      DEFW    C5782
  6247  247c  c3                        DEFB    'C'+128
  6248  247d  5925                      DEFW    C5E87
  6249  247f  d3                        DEFB    'S'+128
  6250  2480  2b25                      DEFW    C5E59
  6251  2482  00                        DEFB    0
  6252                          
  6253  2483  cddd21            C5DB1:  CALL    C5B0B
  6254  2486  010000            C5DB4:  LD      BC,0
  6255  2489  1846                      JR      J5DFF
  6256                          
  6257                          
  6258                          ;       Subroutine      __________________________
  6259                          ;       Inputs          ________________________
  6260                          ;       Outputs         ________________________
  6261                          
  6262                          
  6263  248b  cddd21            C5DB9:  CALL    C5B0B
  6264  248e  42                C5DBC:  LD      B,D
  6265  248f  4b                        LD      C,E
  6266  2490  110000                    LD      DE,0
  6267  2493  183c                      JR      J5DFF
  6268                          
  6269  2495  cddd21            C5DC3:  CALL    C5B0B
  6270  2498  42                C5DC6:  LD      B,D
  6271  2499  4b                        LD      C,E
  6272  249a  1835                      JR      J5DFF
  6273                          
  6274  249c  42                C5DCA:  LD      B,D
  6275  249d  4b                        LD      C,E
  6276  249e  cddd21            J5DCC:  CALL    C5B0B
  6277  24a1  182e                      JR      J5DFF
  6278                          
  6279  24a3  cddd21            C5DD1:  CALL    C5B0B
  6280  24a6  42                        LD      B,D
  6281  24a7  4b                        LD      C,E
  6282  24a8  18f4                      JR      J5DCC
  6283                          
  6284  24aa  cdba1d            C5DD8:  CALL    C56E8
  6285  24ad  0600                      LD      B,$0
  6286  24af  fe2b                      CP      '+'
  6287  24b1  2805                      JR      Z,J5DE6
  6288  24b3  fe2d                      CP      '-'
  6289  24b5  2801                      JR      Z,J5DE6
  6290  24b7  04                        INC     B
  6291  24b8  78                J5DE6:  LD      A,B
  6292  24b9  f5                        PUSH    AF
  6293  24ba  cddd1d                    CALL    C570B
  6294  24bd  cdeb1d                    CALL    C5719
  6295  24c0  d5                        PUSH    DE
  6296  24c1  cdba1d                    CALL    C56E8
  6297  24c4  fe2c                      CP      ','
  6298  24c6  c22c0e                    JP      NZ,C475A                ; illegal function call
  6299  24c9  cdeb1d                    CALL    C5719
  6300  24cc  c1                        POP     BC
  6301  24cd  f1                        POP     AF
  6302  24ce  b7                        OR      A
  6303  24cf  2023                      JR      NZ,J5E22
  6304  24d1  cd3825            J5DFF:  CALL    C5E66
  6305  24d4  d5                        PUSH    DE
  6306  24d5  50                        LD      D,B
  6307  24d6  59                        LD      E,C
  6308  24d7  cd3825                    CALL    C5E66
  6309  24da  eb                        EX      DE,HL
  6310  24db  d1                        POP     DE
  6311  24dc  3abdfc                    LD      A,(DRWANG)
  6312  24df  1f                        RRA
  6313  24e0  3006                      JR      NC,J5E16
  6314  24e2  f5                        PUSH    AF
  6315  24e3  cd4d1f                    CALL    C587B
  6316  24e6  eb                        EX      DE,HL
  6317  24e7  f1                        POP     AF
  6318  24e8  1f                J5E16:  RRA
  6319  24e9  3006                      JR      NC,J5E1F
  6320  24eb  cd4d1f                    CALL    C587B
  6321  24ee  cddd21                    CALL    C5B0B
  6322  24f1  cdae23            J5E1F:  CALL    C5CDC
  6323  24f4  3abbfc            J5E22:  LD      A,(DRWFLG)
  6324  24f7  87                        ADD     A,A
  6325  24f8  3809                      JR      C,J5E31
  6326  24fa  f5                        PUSH    AF
  6327  24fb  c5                        PUSH    BC
  6328  24fc  d5                        PUSH    DE
  6329  24fd  cd9f23                    CALL    C5CCD
  6330  2500  d1                        POP     DE
  6331  2501  c1                        POP     BC
  6332  2502  f1                        POP     AF
  6333  2503  87                J5E31:  ADD     A,A
  6334  2504  3809                      JR      C,J5E3D
  6335  2506  ed53b9fc                  LD      (GRPACY),DE
  6336  250a  60                        LD      H,B
  6337  250b  69                        LD      L,C
  6338  250c  22b7fc                    LD      (GRPACX),HL
  6339  250f  af                J5E3D:  XOR     A
  6340  2510  32bbfc                    LD      (DRWFLG),A
  6341  2513  c9                        RET
  6342                          
  6343  2514  3e40              C5E42:  LD      A,$40
  6344  2516  1802                      JR      J5E48
  6345                          
  6346  2518  3e80              C5E46:  LD      A,$80
  6347  251a  21bbfc            J5E48:  LD      HL,DRWFLG
  6348  251d  b6                        OR      (HL)
  6349  251e  77                        LD      (HL),A
  6350  251f  c9                        RET
  6351                          
  6352  2520  3009              C5E4E:  JR      NC,C5E59
  6353  2522  7b                        LD      A,E
  6354  2523  fe04                      CP      $4
  6355  2525  3004                      JR      NC,C5E59
  6356  2527  32bdfc                    LD      (DRWANG),A
  6357  252a  c9                        RET
  6358                          
  6359  252b  d22c0e            C5E59:  JP      NC,C475A                ; illegal function call
  6360  252e  7a                        LD      A,D
  6361  252f  b7                        OR      A
  6362  2530  c22c0e                    JP      NZ,C475A                ; illegal function call
  6363  2533  7b                        LD      A,E
  6364  2534  32bcfc                    LD      (DRWSCL),A
  6365  2537  c9                        RET
  6366                          
  6367                          
  6368                          ;       Subroutine      __________________________
  6369                          ;       Inputs          ________________________
  6370                          ;       Outputs         ________________________
  6371                          
  6372                          
  6373  2538  3abcfc            C5E66:  LD      A,(DRWSCL)
  6374  253b  b7                        OR      A
  6375  253c  c8                        RET     Z
  6376  253d  210000                    LD      HL,0
  6377  2540  19                J5E6E:  ADD     HL,DE
  6378  2541  3d                        DEC     A
  6379  2542  20fc                      JR      NZ,J5E6E
  6380  2544  eb                        EX      DE,HL
  6381  2545  7a                        LD      A,D
  6382  2546  87                        ADD     A,A
  6383  2547  f5                        PUSH    AF
  6384  2548  3001                      JR      NC,J5E79
  6385  254a  1b                        DEC     DE
  6386  254b  cd8620            J5E79:  CALL    C59B4
  6387  254e  cd8620                    CALL    C59B4
  6388  2551  f1                        POP     AF
  6389  2552  d0                        RET     NC
  6390  2553  7a                        LD      A,D
  6391  2554  f6c0                      OR      $C0
  6392  2556  57                        LD      D,A
  6393  2557  13                        INC     DE
  6394  2558  c9                        RET
  6395                          
  6396  2559  30d0              C5E87:  JR      NC,C5E59
  6397  255b  7b                        LD      A,E
  6398  255c  cd0000                    CALL    SETATR
  6399  255f  da2c0e                    JP      C,C475A                 ; illegal function call
  6400  2562  c9                        RET
  6401                          
  6402                          
  6403                          ;       Subroutine      __________________________
  6404                          ;       Inputs          ________________________
  6405                          ;       Outputs         ________________________
  6406                          
  6407  2563  e5                C5E91:  PUSH    HL
  6408  2564  cd0000                    CALL    SCALXY
  6409  2567  d22c0e                    JP      NC,C475A                ; illegal function call
  6410  256a  e1                        POP     HL
  6411  256b  c9                        RET
  6412                          
  6413  256c  2b                I5E9A:  DEC     HL
  6414  256d  d7                        RST     CHRGTR                  ; end of statement ?
  6415  256e  c8                        RET     Z                       ; yep, quit
  6416  256f  cf                        RST     SYNCHR
  6417  2570  2c                        DEFB    ','                     ; check for ,
  6418                          
  6419                          ;       Subroutine      DIM statement
  6420                          ;       Inputs          ________________________
  6421                          ;       Outputs         ________________________
  6422                          
  6423  2571  016c25            C5E9F:  LD      BC,I5E9A
  6424  2574  c5                        PUSH    BC                      ;
  6425                          
  6426                          ;       Subroutine      locate array variable
  6427                          ;       Inputs          ________________________
  6428                          ;       Outputs         ________________________
  6429                          
  6430  2575  f6                        DEFB    $F6                    ; OR $AF, skip next instruction
  6431                          
  6432                          ;       Subroutine      locate variable
  6433                          ;       Inputs          ________________________
  6434                          ;       Outputs         ________________________
  6435                          
  6436  2576  af                C5EA4:  XOR     A                       ; not DIM
  6437  2577  3262f6                    LD      (DIMFLG),A
  6438  257a  4e                        LD      C,(HL)
  6439  257b  cda2ff            J5EA9:  CALL    H_PTRG
  6440  257e  cd792b                    CALL    C64A7                   ; is current BASIC character a upcase letter ?
  6441  2581  da2707                    JP      C,J4055                 ; nope, syntax error
  6442  2584  af                        XOR     A
  6443  2585  47                        LD      B,A                     ; assume no 2nd variablename character
  6444  2586  d7                        RST     CHRGTR                  ; get next BASIC character
  6445  2587  3805                      JR      C,J5EBC                 ; digit, use as 2nd variablename character
  6446  2589  cd7a2b                    CALL    C64A8                   ; is upcase letter character ?
  6447  258c  3809                      JR      C,J5EC5                 ; nope, may be a variabletype indicator
  6448  258e  47                J5EBC:  LD      B,A                     ; 2nd variablename character
  6449  258f  d7                J5EBD:  RST     CHRGTR                  ; get next BASIC character
  6450  2590  38fd                      JR      C,J5EBD                 ; digit, skip
  6451  2592  cd7a2b                    CALL    C64A8                   ; is upcase letter character ?
  6452  2595  30f8                      JR      NC,J5EBD                ; yep, skip
  6453  2597  fe26              J5EC5:  CP      $26
  6454  2599  3017                      JR      NC,J5EE0                ; speedup for $26-$FF
  6455  259b  11c025                    LD      DE,I5EEE
  6456  259e  d5                        PUSH    DE
  6457  259f  1602                      LD      D,2                     ; integer
  6458  25a1  fe25                      CP      '%'                     ; integer type indicator ?
  6459  25a3  c8                        RET     Z                       ; yep, do not use default type
  6460  25a4  14                        INC     D                       ; string
  6461  25a5  fe24                      CP      '$'                     ; string type indicator ?
  6462  25a7  c8                        RET     Z                       ; yep, do not use default type
  6463  25a8  14                        INC     D                       ; single real
  6464  25a9  fe21                      CP      '!'                     ; single real indicator ?
  6465  25ab  c8                        RET     Z                       ; yep, do not use default type
  6466  25ac  1608                      LD      D,8                     ; double real
  6467  25ae  fe23                      CP      '#'                     ; double real indicator ?
  6468  25b0  c8                        RET     Z                       ; yep, do not use default type
  6469  25b1  f1                        POP     AF
  6470  25b2  79                J5EE0:  LD      A,C
  6471  25b3  e67f                      AND     $7F                     ; clear b7 (for function variable)
  6472  25b5  5f                        LD      E,A
  6473  25b6  1600                      LD      D,0
  6474  25b8  e5                        PUSH    HL
  6475  25b9  2189f6                    LD      HL,DEFTBL-'A'
  6476  25bc  19                        ADD     HL,DE
  6477  25bd  56                        LD      D,(HL)                  ; default type
  6478  25be  e1                        POP     HL
  6479  25bf  2b                        DEC     HL                      ; BASIC pointer back to compensate upcoming CHRGTR
  6480  25c0  7a                I5EEE:  LD      A,D
  6481  25c1  3263f6                    LD      (VALTYP),A              ; set DAC type
  6482  25c4  d7                        RST     CHRGTR                  ; get next BASIC character (type indicator)
  6483  25c5  3aa5f6                    LD      A,(SUBFLG)
  6484  25c8  3d                        DEC     A                       ; variable search flags
  6485  25c9  caba26                    JP      Z,J5FE8                 ; search for ERASE statement,
  6486  25cc  f2da25                    JP      P,J5F08                 ; search for function variables or loop variables, do not check for subscript
  6487  25cf  7e                        LD      A,(HL)
  6488  25d0  d628                      SUB     '('
  6489  25d2  ca8c26                    JP      Z,J5FBA                 ; array variable
  6490  25d5  d633                      SUB     '['-'('
  6491  25d7  ca8c26                    JP      Z,J5FBA                 ; array variable
  6492  25da  af                J5F08:  XOR     A
  6493  25db  32a5f6                    LD      (SUBFLG),A              ; flag normal variable
  6494  25de  e5                        PUSH    HL                      ; save BASIC pointer
  6495  25df  3ab7f7                    LD      A,(NOFUNS)
  6496  25e2  b7                        OR      A                       ; local function variables ?
  6497  25e3  32b4f7                    LD      (PRMFLG),A              ; yep, search simple variables afterwards
  6498  25e6  283c                      JR      Z,J5F52                 ; nope, continue with simple variables
  6499  25e8  2ae6f6                    LD      HL,(PRMLEN)
  6500  25eb  11e8f6                    LD      DE,PARM1                ; start of the local function variables
  6501  25ee  19                        ADD     HL,DE
  6502  25ef  22b5f7                    LD      (ARYTA2),HL             ; end of the local function variables
  6503  25f2  eb                        EX      DE,HL
  6504  25f3  1817                      JR      J5F3A                   ; start search
  6505                          
  6506  25f5  1a                J5F23:  LD      A,(DE)
  6507  25f6  6f                        LD      L,A                     ; variable type (also the length)
  6508  25f7  13                        INC     DE
  6509  25f8  1a                        LD      A,(DE)                  ; first variablename character
  6510  25f9  13                        INC     DE
  6511  25fa  b9                        CP      C                       ; match ?
  6512  25fb  200b                      JR      NZ,J5F36                ; nope,
  6513  25fd  3a63f6                    LD      A,(VALTYP)
  6514  2600  bd                        CP      L                       ; correct variabletype ?
  6515  2601  2005                      JR      NZ,J5F36                ; nope,
  6516  2603  1a                        LD      A,(DE)                  ; second variablename character
  6517  2604  b8                        CP      B                       ; match ?
  6518  2605  ca7626                    JP      Z,J5FA4                 ; variable found, quit
  6519  2608  13                J5F36:  INC     DE
  6520  2609  2600                      LD      H,0
  6521  260b  19                        ADD     HL,DE                   ; to next variable
  6522  260c  eb                J5F3A:  EX      DE,HL
  6523  260d  3ab5f7                    LD      A,(ARYTA2+0)
  6524  2610  bb                        CP      E                       ; end of area ?
  6525  2611  c2f525                    JP      NZ,J5F23                ; nope, next variable
  6526  2614  3ab6f7                    LD      A,(ARYTA2+1)
  6527  2617  ba                        CP      D                       ; end of area ?
  6528  2618  20db                      JR      NZ,J5F23                ; nope, next variable
  6529  261a  3ab4f7                    LD      A,(PRMFLG)
  6530  261d  b7                        OR      A                       ; in local function variable search ?
  6531  261e  2818                      JR      Z,J5F66                 ; nope, not found
  6532  2620  af                        XOR     A
  6533  2621  32b4f7                    LD      (PRMFLG),A              ; now search the simple variables
  6534  2624  2ac4f6            J5F52:  LD      HL,(ARYTAB)
  6535  2627  22b5f7                    LD      (ARYTA2),HL             ; end of searcharea is the start of the array variable area
  6536  262a  2ac2f6                    LD      HL,(VARTAB)             ; start of area is the start of the simple variable area
  6537  262d  18dd                      JR      J5F3A                   ; start search
  6538                          
  6539                          ;       Subroutine      locate variable (search only)
  6540                          ;       Inputs          ________________________
  6541                          ;       Outputs         ________________________
  6542                          
  6543  262f  cd7625            C5F5D:  CALL    C5EA4                   ; locate variable
  6544  2632  c9                        RET
  6545                          
  6546  2633  57                J5F61:  LD      D,A
  6547  2634  5f                        LD      E,A                     ; null pointer
  6548  2635  c1                        POP     BC
  6549  2636  e3                        EX      (SP),HL
  6550  2637  c9                        RET
  6551                          
  6552  2638  e1                J5F66:  POP     HL
  6553  2639  e3                        EX      (SP),HL                 ; call address
  6554  263a  d5                        PUSH    DE
  6555  263b  113226                    LD      DE,C5F5D+3
  6556  263e  e7                        RST     DCOMPR                  ; called from C5F5D (varptr) ?
  6557  263f  28f2                      JR      Z,J5F61                 ; yep, return without creating a variable
  6558  2641  117015                    LD      DE,C4E9B+3
  6559  2644  e7                        RST     DCOMPR                  ; called from C4E9B (factor evaluator) ?
  6560  2645  d1                        POP     DE
  6561  2646  2831                      JR      Z,J5FA7                 ; yep, return value 0
  6562  2648  e3                        EX      (SP),HL
  6563  2649  e5                        PUSH    HL
  6564  264a  c5                        PUSH    BC
  6565  264b  3a63f6                    LD      A,(VALTYP)
  6566  264e  4f                        LD      C,A
  6567  264f  c5                        PUSH    BC
  6568  2650  0600                      LD      B,0                     ; size of variable
  6569  2652  03                        INC     BC
  6570  2653  03                        INC     BC
  6571  2654  03                        INC     BC                      ; three bytes for housekeeping
  6572  2655  2ac6f6                    LD      HL,(STREND)
  6573  2658  e5                        PUSH    HL
  6574  2659  09                        ADD     HL,BC
  6575  265a  c1                        POP     BC
  6576  265b  e5                        PUSH    HL
  6577  265c  cd2229                    CALL    C6250                   ; check for enough stackspace and move data
  6578  265f  e1                        POP     HL
  6579  2660  22c6f6                    LD      (STREND),HL
  6580  2663  60                        LD      H,B
  6581  2664  69                        LD      L,C
  6582  2665  22c4f6                    LD      (ARYTAB),HL
  6583  2668  2b                J5F96:  DEC     HL
  6584  2669  3600                      LD      (HL),0
  6585  266b  e7                        RST     DCOMPR
  6586  266c  20fa                      JR      NZ,J5F96                ; clear variable
  6587  266e  d1                        POP     DE
  6588  266f  73                        LD      (HL),E                  ; variable type
  6589  2670  23                        INC     HL
  6590  2671  d1                        POP     DE
  6591  2672  73                        LD      (HL),E
  6592  2673  23                        INC     HL
  6593  2674  72                        LD      (HL),D                  ; variable name
  6594  2675  eb                        EX      DE,HL
  6595  2676  13                J5FA4:  INC     DE
  6596  2677  e1                        POP     HL
  6597  2678  c9                        RET
  6598                          
  6599  2679  32f6f7            J5FA7:  LD      (DAC+0),A               ; if single real or double real, DAC = 0
  6600  267c  67                        LD      H,A
  6601  267d  6f                        LD      L,A
  6602  267e  22f8f7                    LD      (DAC+2),HL              ; if integer, DAC = 0
  6603  2681  ef                        RST     GETYPR                  ; get DAC type
  6604  2682  2006                      JR      NZ,J5FB8                ; not a string, quit
  6605  2684  21a806                    LD      HL,I3FD6
  6606  2687  22f8f7                    LD      (DAC+2),HL              ; empty string
  6607  268a  e1                J5FB8:  POP     HL                      ; restore BASIC pointer
  6608  268b  c9                        RET
  6609                          
  6610                          ;       Subroutine      locate array variable with subscript
  6611                          ;       Inputs          ________________________
  6612                          ;       Outputs         ________________________
  6613                          
  6614  268c  e5                J5FBA:  PUSH    HL
  6615  268d  2a62f6                    LD      HL,(DIMFLG)
  6616  2690  e3                        EX      (SP),HL                 ; save DIMFLG
  6617  2691  57                        LD      D,A                     ; index 0
  6618  2692  d5                J5FC0:  PUSH    DE
  6619  2693  c5                        PUSH    BC
  6620  2694  cd270e                    CALL    C4755                   ; skip basic char, evaluate word operand and check for 0-32767 range
  6621  2697  c1                        POP     BC
  6622  2698  f1                        POP     AF
  6623  2699  eb                        EX      DE,HL
  6624  269a  e3                        EX      (SP),HL
  6625  269b  e5                        PUSH    HL
  6626  269c  eb                        EX      DE,HL                   ; subscript on stack
  6627  269d  3c                        INC     A
  6628  269e  57                        LD      D,A                     ; next index
  6629  269f  7e                        LD      A,(HL)
  6630  26a0  fe2c                      CP      ','                     ; more subscripts ?
  6631  26a2  ca9226                    JP      Z,J5FC0                 ; yep, get next subscript
  6632  26a5  fe29                      CP      ')'
  6633  26a7  2805                      JR      Z,J5FDC
  6634  26a9  fe5d                      CP      ']'
  6635  26ab  c22707                    JP      NZ,J4055                ; nope, syntax error
  6636  26ae  d7                J5FDC:  RST     CHRGTR                  ; get next BASIC character
  6637  26af  22bcf6                    LD      (TEMP2),HL              ; save BASIC pointer
  6638  26b2  e1                        POP     HL
  6639  26b3  2262f6                    LD      (DIMFLG),HL             ; restore DIMFLG
  6640  26b6  1e00                      LD      E,0
  6641  26b8  d5                        PUSH    DE
  6642  26b9  11                        DEFB    $11                    ; LD DE,xxxx, skip next 2 statements
  6643  26ba  e5                J5FE8:  PUSH    HL
  6644  26bb  f5                        PUSH    AF
  6645  26bc  2ac4f6                    LD      HL,(ARYTAB)             ; start of the array variable area
  6646  26bf  3e                        DEFB    $3E                    ; LD A,xx, skip next instruction
  6647  26c0  19                J5FEE:  ADD     HL,DE
  6648  26c1  ed5bc6f6                  LD      DE,(STREND)
  6649  26c5  e7                        RST     DCOMPR                  ; end of the array variable area ?
  6650  26c6  282d                      JR      Z,J6023                 ; yep, create array
  6651  26c8  5e                        LD      E,(HL)                  ; arraytype
  6652  26c9  23                        INC     HL
  6653  26ca  7e                        LD      A,(HL)                  ; first name character
  6654  26cb  23                        INC     HL
  6655  26cc  b9                        CP      C                       ; match ?
  6656  26cd  2008                      JR      NZ,J6005                ; nope, not found
  6657  26cf  3a63f6                    LD      A,(VALTYP)
  6658  26d2  bb                        CP      E                       ; correct arraytype ?
  6659  26d3  2002                      JR      NZ,J6005                ; nope, not found
  6660  26d5  7e                        LD      A,(HL)                  ; second name character
  6661  26d6  b8                        CP      B                       ; match ?
  6662  26d7  23                J6005:  INC     HL
  6663  26d8  5e                        LD      E,(HL)
  6664  26d9  23                        INC     HL
  6665  26da  56                        LD      D,(HL)                  ; offset to next array
  6666  26db  23                        INC     HL
  6667  26dc  20e2                      JR      NZ,J5FEE                ; no match, next array
  6668  26de  3a62f6                    LD      A,(DIMFLG)
  6669  26e1  b7                        OR      A                       ; DIM statement ?
  6670  26e2  c23007                    JP      NZ,J405E                ; yep, redimensioned array error
  6671  26e5  f1                        POP     AF
  6672  26e6  44                        LD      B,H
  6673  26e7  4d                        LD      C,L
  6674  26e8  ca0000                    JP      Z,J3297                 ; ERASE, restore BASIC pointer and quit
  6675  26eb  96                        SUB     (HL)                    ; dimension correct ?
  6676  26ec  ca4f27                    JP      Z,J607D                 ; yep,
  6677  26ef  110900            J601D:  LD      DE,9                    ; ?? LD E,9 should be enough ??
  6678  26f2  c34107                    JP      J406F                   ; subscript out of range error
  6679                          
  6680  26f5  3a63f6            J6023:  LD      A,(VALTYP)
  6681  26f8  77                        LD      (HL),A
  6682  26f9  23                        INC     HL
  6683  26fa  5f                        LD      E,A
  6684  26fb  1600                      LD      D,0
  6685  26fd  f1                        POP     AF
  6686  26fe  ca2c0e                    JP      Z,C475A                 ; ERASE, illegal function call
  6687  2701  71                        LD      (HL),C
  6688  2702  23                        INC     HL
  6689  2703  70                        LD      (HL),B                  ; variablename
  6690  2704  23                        INC     HL
  6691  2705  4f                        LD      C,A                     ; number of words
  6692  2706  cd3029                    CALL    C625E                   ; check if enough stackspace
  6693  2709  23                        INC     HL
  6694  270a  23                        INC     HL                      ; leave offset empty for now
  6695  270b  229df6                    LD      (TEMP3),HL
  6696  270e  71                        LD      (HL),C                  ; dimension
  6697  270f  23                        INC     HL
  6698  2710  3a62f6                    LD      A,(DIMFLG)
  6699  2713  17                        RLA                             ; DIM statement ?
  6700  2714  79                        LD      A,C
  6701  2715  010b00            J6043:  LD      BC,11
  6702  2718  3002                      JR      NC,J604A                ; nope, use a default of 11
  6703  271a  c1                        POP     BC                      ; subscript
  6704  271b  03                        INC     BC
  6705  271c  71                J604A:  LD      (HL),C
  6706  271d  f5                        PUSH    AF
  6707  271e  23                        INC     HL
  6708  271f  70                        LD      (HL),B
  6709  2720  23                        INC     HL
  6710  2721  cd0000                    CALL    C314A                   ; unsigned integer multiply
  6711  2724  f1                        POP     AF
  6712  2725  3d                        DEC     A
  6713  2726  20ed                      JR      NZ,J6043                ; next
  6714  2728  f5                        PUSH    AF
  6715  2729  42                        LD      B,D
  6716  272a  4b                        LD      C,E
  6717  272b  eb                        EX      DE,HL
  6718  272c  19                        ADD     HL,DE
  6719  272d  da4729                    JP      C,J6275                 ; out of memory
  6720  2730  cd3929                    CALL    C6267                   ; check if enough stackspace left
  6721  2733  22c6f6                    LD      (STREND),HL             ; new end of array area
  6722  2736  2b                J6064:  DEC     HL
  6723  2737  3600                      LD      (HL),0
  6724  2739  e7                        RST     DCOMPR
  6725  273a  20fa                      JR      NZ,J6064                ; clear array
  6726  273c  03                        INC     BC
  6727  273d  57                        LD      D,A
  6728  273e  2a9df6                    LD      HL,(TEMP3)
  6729  2741  5e                        LD      E,(HL)
  6730  2742  eb                        EX      DE,HL
  6731  2743  29                        ADD     HL,HL
  6732  2744  09                        ADD     HL,BC
  6733  2745  eb                        EX      DE,HL
  6734  2746  2b                        DEC     HL
  6735  2747  2b                        DEC     HL
  6736  2748  73                        LD      (HL),E
  6737  2749  23                        INC     HL
  6738  274a  72                        LD      (HL),D
  6739  274b  23                        INC     HL
  6740  274c  f1                        POP     AF
  6741  274d  3830                      JR      C,J60AD
  6742  274f  47                J607D:  LD      B,A
  6743  2750  4f                        LD      C,A
  6744  2751  7e                        LD      A,(HL)
  6745  2752  23                        INC     HL
  6746  2753  16                        DEFB    $16                    ; LD D,xx, skip next instruction
  6747  2754  e1                J6082:  POP     HL
  6748  2755  5e                        LD      E,(HL)
  6749  2756  23                        INC     HL
  6750  2757  56                        LD      D,(HL)
  6751  2758  23                        INC     HL
  6752  2759  e3                        EX      (SP),HL
  6753  275a  f5                        PUSH    AF
  6754  275b  e7                        RST     DCOMPR
  6755  275c  d2ef26                    JP      NC,J601D                ; subscript out of range
  6756  275f  cd0000                    CALL    C314A                   ; unsigned integer multiply
  6757  2762  19                        ADD     HL,DE
  6758  2763  f1                        POP     AF
  6759  2764  3d                        DEC     A
  6760  2765  44                        LD      B,H
  6761  2766  4d                        LD      C,L
  6762  2767  20eb                      JR      NZ,J6082
  6763  2769  3a63f6                    LD      A,(VALTYP)
  6764  276c  44                        LD      B,H
  6765  276d  4d                        LD      C,L
  6766  276e  29                        ADD     HL,HL
  6767  276f  d604                      SUB     4
  6768  2771  3804                      JR      C,J60A5
  6769  2773  29                        ADD     HL,HL
  6770  2774  2806                      JR      Z,J60AA
  6771  2776  29                        ADD     HL,HL
  6772  2777  b7                J60A5:  OR      A
  6773  2778  e27c27                    JP      PO,J60AA
  6774  277b  09                        ADD     HL,BC
  6775  277c  c1                J60AA:  POP     BC
  6776  277d  09                        ADD     HL,BC
  6777  277e  eb                        EX      DE,HL
  6778  277f  2abcf6            J60AD:  LD      HL,(TEMP2)
  6779  2782  c9                        RET
  6780                          
  6781                          ;       Subroutine      PRINT USING statement
  6782                          ;       Inputs          ________________________
  6783                          ;       Outputs         ________________________
  6784                          
  6785  2783  cd3713            J60B1:  CALL    C4C65                   ; skip character and evaluate expression
  6786  2786  cd0000                    CALL    C3058                   ; check if string
  6787  2789  cf                        RST     SYNCHR
  6788  278a  3b                        DEFB    ';'                     ; check for ';'
  6789  278b  eb                        EX      DE,HL
  6790  278c  2af8f7                    LD      HL,(DAC+2)              ; formatstring descriptor
  6791  278f  1808                      JR      J60C7
  6792                          
  6793  2791  3aa6f6            J60BF:  LD      A,(FLGINP)
  6794  2794  b7                        OR      A
  6795  2795  280d                      JR      Z,J60D2
  6796  2797  d1                        POP     DE
  6797  2798  eb                        EX      DE,HL
  6798  2799  e5                J60C7:  PUSH    HL
  6799  279a  af                        XOR     A
  6800  279b  32a6f6                    LD      (FLGINP),A              ; flag
  6801  279e  3c                        INC     A
  6802  279f  f5                        PUSH    AF
  6803  27a0  d5                        PUSH    DE
  6804  27a1  46                        LD      B,(HL)
  6805  27a2  04                        INC     B
  6806  27a3  05                        DEC     B                       ; empty format string ?
  6807  27a4  ca2c0e            J60D2:  JP      Z,C475A                 ; yep, illegal function call
  6808  27a7  23                        INC     HL
  6809  27a8  7e                        LD      A,(HL)
  6810  27a9  23                        INC     HL
  6811  27aa  66                        LD      H,(HL)
  6812  27ab  6f                        LD      L,A                     ; start of string
  6813  27ac  181a                      JR      J60F6
  6814                          
  6815                          ; part of string handler
  6816                          
  6817  27ae  58                J60DC:  LD      E,B                     ; save length
  6818  27af  e5                        PUSH    HL                      ; save pointer
  6819  27b0  0e02                      LD      C,2                     ; at least 2 chars
  6820  27b2  7e                J60E0:  LD      A,(HL)
  6821  27b3  23                        INC     HL
  6822  27b4  fe5c                      CP      CHRFLN
  6823  27b6  cae228                    JP      Z,J6210                 ; end marker, print string
  6824  27b9  fe20                      CP      ' '
  6825  27bb  2003                      JR      NZ,J60EE                ; not a space between markers, so no part string!
  6826  27bd  0c                        INC     C
  6827  27be  10f2                      DJNZ    J60E0                   ; next char, non left means no endmarker and no part string!
  6828  27c0  e1                J60EE:  POP     HL                      ; restore pointer
  6829  27c1  43                        LD      B,E                     ; restore length
  6830  27c2  3e5c                      LD      A,CHRFLN                ; just print the CHRFLN char
  6831  27c4  cd1829            J60F2:  CALL    C6246
  6832  27c7  df                        RST     OUTDO                   ; char to interpreter output
  6833  27c8  af                J60F6:  XOR     A
  6834  27c9  5f                        LD      E,A
  6835  27ca  57                        LD      D,A
  6836  27cb  cd1829            J60F9:  CALL    C6246
  6837  27ce  57                        LD      D,A
  6838  27cf  7e                        LD      A,(HL)
  6839  27d0  23                        INC     HL
  6840  27d1  fe21                      CP      '!'
  6841  27d3  cadf28                    JP      Z,J620D                 ; "1 char of string" format char, handle
  6842  27d6  fe23                      CP      '#'
  6843  27d8  283c                      JR      Z,J6144                 ; # numeric format char, handle
  6844  27da  fe26                      CP      CHRVLN
  6845  27dc  cadb28                    JP      Z,J6209                 ; "whole string" format char, handle
  6846  27df  05                        DEC     B                       ; other format chars need at least 1 extra char
  6847  27e0  cac728                    JP      Z,J61F5                 ; not there, end it
  6848  27e3  fe2b                      CP      '+'
  6849  27e5  3e08                      LD      A,$8
  6850  27e7  28e2                      JR      Z,J60F9                 ; +, set sign flag and continue
  6851  27e9  2b                        DEC     HL
  6852  27ea  7e                        LD      A,(HL)
  6853  27eb  23                        INC     HL
  6854  27ec  fe2e                      CP      '.'
  6855  27ee  2840                      JR      Z,J615E                 ; may be .# combi, check
  6856  27f0  fe5c                      CP      CHRFLN
  6857  27f2  28ba                      JR      Z,J60DC                 ; "part of string" format char, handle
  6858  27f4  be                        CP      (HL)
  6859  27f5  20cd                      JR      NZ,J60F2                ; not two equal chars, just print it
  6860  27f7  fe24                      CP      CHRCUR
  6861  27f9  2814                      JR      Z,J613D                 ; double currency char, handle
  6862  27fb  fe2a                      CP      '*'
  6863  27fd  20c5                      JR      NZ,J60F2
  6864                          
  6865                          ; ** format
  6866                          
  6867  27ff  23                        INC     HL
  6868  2800  78                        LD      A,B
  6869  2801  fe02                      CP      $2
  6870  2803  3803                      JR      C,J6136                 ; none or only 1 char follows,
  6871  2805  7e                        LD      A,(HL)
  6872  2806  fe24                      CP      CHRCUR
  6873  2808  3e20              J6136:  LD      A,' '
  6874  280a  2007                      JR      NZ,J6141
  6875                          
  6876                          ; **cur format
  6877                          
  6878  280c  05                        DEC     B
  6879  280d  1c                        INC     E
  6880  280e  fe                        DEFB    $FE                    ; skip next instruction
  6881  280f  af                J613D:  XOR     A
  6882  2810  c610                      ADD     A,$10
  6883  2812  23                        INC     HL
  6884  2813  1c                J6141:  INC     E
  6885  2814  82                        ADD     A,D
  6886  2815  57                        LD      D,A
  6887  2816  1c                J6144:  INC     E
  6888  2817  0e00                      LD      C,$0
  6889  2819  05                        DEC     B
  6890  281a  2848                      JR      Z,J6192
  6891  281c  7e                        LD      A,(HL)
  6892  281d  23                        INC     HL
  6893  281e  fe2e                      CP      '.'
  6894  2820  2819                      JR      Z,J6169
  6895  2822  fe23                      CP      '#'
  6896  2824  28f0                      JR      Z,J6144
  6897  2826  fe2c                      CP      ','
  6898  2828  201b                      JR      NZ,J6173
  6899  282a  7a                        LD      A,D
  6900  282b  f640                      OR      $40
  6901  282d  57                        LD      D,A
  6902  282e  18e6                      JR      J6144
  6903                          
  6904  2830  7e                J615E:  LD      A,(HL)
  6905  2831  fe23                      CP      '#'
  6906  2833  3e2e                      LD      A,'.'
  6907  2835  c2c427                    JP      NZ,J60F2
  6908  2838  0e01                      LD      C,$1
  6909  283a  23                        INC     HL
  6910  283b  0c                J6169:  INC     C
  6911  283c  05                        DEC     B
  6912  283d  2825                      JR      Z,J6192
  6913  283f  7e                        LD      A,(HL)
  6914  2840  23                        INC     HL
  6915  2841  fe23                      CP      '#'
  6916  2843  28f6                      JR      Z,J6169
  6917  2845  d5                J6173:  PUSH    DE
  6918  2846  116228                    LD      DE,I6190
  6919  2849  d5                        PUSH    DE
  6920  284a  54                        LD      D,H
  6921  284b  5d                        LD      E,L
  6922  284c  fe5e                      CP      $5E
  6923  284e  c0                        RET     NZ
  6924  284f  be                        CP      (HL)
  6925  2850  c0                        RET     NZ
  6926  2851  23                        INC     HL
  6927  2852  be                        CP      (HL)
  6928  2853  c0                        RET     NZ
  6929  2854  23                        INC     HL
  6930  2855  be                        CP      (HL)
  6931  2856  c0                        RET     NZ
  6932  2857  23                        INC     HL
  6933  2858  78                        LD      A,B
  6934  2859  d604                      SUB     $4
  6935  285b  d8                        RET     C
  6936  285c  d1                        POP     DE
  6937  285d  d1                        POP     DE
  6938  285e  47                        LD      B,A
  6939  285f  14                        INC     D
  6940  2860  23                        INC     HL
  6941  2861  ca                        DEFB    $CA                    ; JP Z,xxxx skip next 2 instructions
  6942  2862  eb                I6190:  EX      DE,HL
  6943  2863  d1                        POP     DE
  6944  2864  7a                J6192:  LD      A,D
  6945  2865  2b                        DEC     HL
  6946  2866  1c                        INC     E
  6947  2867  e608                      AND     $8
  6948  2869  2015                      JR      NZ,J61AE
  6949  286b  1d                        DEC     E
  6950  286c  78                        LD      A,B
  6951  286d  b7                        OR      A
  6952  286e  2810                      JR      Z,J61AE
  6953  2870  7e                        LD      A,(HL)
  6954  2871  d62d                      SUB     '-'
  6955  2873  2806                      JR      Z,J61A9
  6956  2875  fefe                      CP      $FE
  6957  2877  2007                      JR      NZ,J61AE
  6958  2879  3e08                      LD      A,$8
  6959  287b  c604              J61A9:  ADD     A,$4
  6960  287d  82                        ADD     A,D
  6961  287e  57                        LD      D,A
  6962  287f  05                        DEC     B
  6963  2880  e1                J61AE:  POP     HL
  6964  2881  f1                        POP     AF
  6965  2882  284c                      JR      Z,J61FE
  6966  2884  c5                        PUSH    BC
  6967  2885  d5                        PUSH    DE
  6968  2886  cd3613                    CALL    C4C64                   ; evaluate expression
  6969  2889  d1                        POP     DE
  6970  288a  c1                        POP     BC
  6971  288b  c5                        PUSH    BC
  6972  288c  e5                        PUSH    HL
  6973  288d  43                        LD      B,E
  6974  288e  78                        LD      A,B
  6975  288f  81                        ADD     A,C
  6976  2890  fe19                      CP      $19
  6977  2892  d22c0e                    JP      NC,C475A                ; illegal function call
  6978  2895  7a                        LD      A,D
  6979  2896  f680                      OR      $80
  6980  2898  cd0000                    CALL    C3426                   ; convert DAC to text, formatted
  6981  289b  cd4a2d                    CALL    C6678                   ; message to interpreter output
  6982  289e  e1                J61CC:  POP     HL
  6983  289f  2b                        DEC     HL
  6984  28a0  d7                        RST     CHRGTR                  ; get next BASIC character
  6985  28a1  37                        SCF
  6986  28a2  280b                      JR      Z,J61DD
  6987  28a4  32a6f6                    LD      (FLGINP),A
  6988  28a7  fe3b                      CP      ';'
  6989  28a9  2803                      JR      Z,J61DC
  6990  28ab  cf                        RST     SYNCHR
  6991  28ac  2c                        DEFB    ','                     ; check for ,
  6992  28ad  06                        DEFB    $06                    ; skip next instruction
  6993  28ae  d7                J61DC:  RST     CHRGTR                  ; get next BASIC character
  6994  28af  c1                J61DD:  POP     BC
  6995  28b0  eb                        EX      DE,HL
  6996  28b1  e1                        POP     HL
  6997  28b2  e5                        PUSH    HL
  6998  28b3  f5                        PUSH    AF
  6999  28b4  d5                        PUSH    DE
  7000  28b5  7e                        LD      A,(HL)
  7001  28b6  90                        SUB     B
  7002  28b7  23                        INC     HL
  7003  28b8  1600                      LD      D,$0
  7004  28ba  5f                        LD      E,A
  7005  28bb  7e                        LD      A,(HL)
  7006  28bc  23                        INC     HL
  7007  28bd  66                        LD      H,(HL)
  7008  28be  6f                        LD      L,A
  7009  28bf  19                        ADD     HL,DE
  7010  28c0  78                        LD      A,B
  7011  28c1  b7                        OR      A
  7012  28c2  c2c827                    JP      NZ,J60F6
  7013  28c5  1804                      JR      J61F9
  7014                          
  7015  28c7  cd1829            J61F5:  CALL    C6246
  7016  28ca  df                        RST     OUTDO                   ; char to interpreter output
  7017  28cb  e1                J61F9:  POP     HL
  7018  28cc  f1                        POP     AF
  7019  28cd  c29127                    JP      NZ,J60BF
  7020  28d0  dcfa39            J61FE:  CALL    C,C7328                 ; newline to interpreter output
  7021  28d3  e3                        EX      (SP),HL
  7022  28d4  cda82e                    CALL    C67D6                   ; free temporary string (descriptor in HL)
  7023  28d7  e1                        POP     HL
  7024  28d8  c3d111                    JP      C4AFF                   ; return interpreter output to screen
  7025                          
  7026                          ; handle char
  7027                          
  7028  28db  0e00              J6209:  LD      C,$0
  7029  28dd  1804                      JR      J6211
  7030                          
  7031                          ; handle ! char
  7032                          
  7033  28df  0e01              J620D:  LD      C,$1
  7034  28e1  3e                        DEFB    $3E                    ; LD A,xx, skip next instruction
  7035  28e2  f1                J6210:  POP     AF
  7036  28e3  05                J6211:  DEC     B
  7037  28e4  cd1829                    CALL    C6246
  7038  28e7  e1                        POP     HL
  7039  28e8  f1                        POP     AF
  7040  28e9  28e5                      JR      Z,J61FE
  7041  28eb  c5                        PUSH    BC
  7042  28ec  cd3613                    CALL    C4C64                   ; evaluate expression
  7043  28ef  cd0000                    CALL    C3058                   ; check if string
  7044  28f2  c1                        POP     BC
  7045  28f3  c5                        PUSH    BC
  7046  28f4  e5                        PUSH    HL
  7047  28f5  2af8f7                    LD      HL,(DAC+2)
  7048  28f8  41                        LD      B,C
  7049  28f9  0e00                      LD      C,$0
  7050  28fb  78                        LD      A,B
  7051  28fc  f5                        PUSH    AF
  7052  28fd  b7                        OR      A
  7053  28fe  c43a2f                    CALL    NZ,C6868
  7054  2901  cd4d2d                    CALL    C667B                   ; free string and string to interpreter output
  7055  2904  2af8f7                    LD      HL,(DAC+2)
  7056  2907  f1                        POP     AF
  7057  2908  b7                        OR      A
  7058  2909  ca9e28                    JP      Z,J61CC
  7059  290c  96                        SUB     (HL)
  7060  290d  47                        LD      B,A
  7061  290e  3e20                      LD      A,' '
  7062  2910  04                        INC     B
  7063  2911  05                J623F:  DEC     B
  7064  2912  ca9e28                    JP      Z,J61CC
  7065  2915  df                        RST     OUTDO                   ; space to interpreter output
  7066  2916  18f9                      JR      J623F
  7067                          
  7068                          
  7069                          ;       Subroutine      __________________________
  7070                          ;       Inputs          ________________________
  7071                          ;       Outputs         ________________________
  7072                          
  7073                          
  7074  2918  f5                C6246:  PUSH    AF
  7075  2919  7a                        LD      A,D
  7076  291a  b7                        OR      A
  7077  291b  3e2b                      LD      A,'+'
  7078  291d  c41800                    CALL    NZ,OUTDO                ; yep, '+' to interpreter output
  7079  2920  f1                        POP     AF
  7080  2921  c9                        RET
  7081                          
  7082                          ;       Subroutine      check for enough stackspace and move data
  7083                          ;       Inputs          ________________________
  7084                          ;       Outputs         ________________________
  7085                          
  7086  2922  cd3929            C6250:  CALL    C6267                   ; check if enough stackspace left
  7087                          
  7088                          ;       Subroutine      move data
  7089                          ;       Inputs          BC = source end, DE = source start, HL = destination end
  7090                          ;       Outputs         BC = destination start, DE = source start, HL = source start
  7091                          
  7092  2925  c5                C6253:  PUSH    BC
  7093  2926  e3                        EX      (SP),HL
  7094  2927  c1                        POP     BC
  7095  2928  e7                J6256:  RST     DCOMPR
  7096  2929  7e                        LD      A,(HL)
  7097  292a  02                        LD      (BC),A
  7098  292b  c8                        RET     Z
  7099  292c  0b                        DEC     BC
  7100  292d  2b                        DEC     HL
  7101  292e  18f8                      JR      J6256
  7102                          
  7103                          ;       Subroutine      check if enough stackspace
  7104                          ;       Inputs          C = number of words
  7105                          ;       Outputs         ________________________
  7106                          
  7107  2930  e5                C625E:  PUSH    HL
  7108  2931  2ac6f6                    LD      HL,(STREND)
  7109  2934  0600                      LD      B,0
  7110  2936  09                        ADD     HL,BC
  7111  2937  09                        ADD     HL,BC
  7112  2938  3e                        DEFB    $3E                    ; LD A,xx, skip next instruction
  7113                          
  7114                          ;       Subroutine      check if enough stackspace left
  7115                          ;       Inputs          HL = end of area to use
  7116                          ;       Outputs         ________________________
  7117                          
  7118  2939  e5                C6267:  PUSH    HL
  7119  293a  3e88                      LD      A,$00FF&(-120)
  7120  293c  95                        SUB     L
  7121  293d  6f                        LD      L,A
  7122  293e  3eff                      LD      A,$00FF&(-120 >> 8)
  7123  2940  9c                        SBC     A,H
  7124  2941  67                        LD      H,A
  7125  2942  3803                      JR      C,J6275                 ; out of memory
  7126  2944  39                        ADD     HL,SP
  7127  2945  e1                        POP     HL
  7128  2946  d8                        RET     C
  7129  2947  cd2509            J6275:  CALL    C4253                   ; setup BASIC linelinks
  7130  294a  2a74f6                    LD      HL,(STKTOP)
  7131  294d  2b                        DEC     HL
  7132  294e  2b                        DEC     HL
  7133  294f  22b1f6                    LD      (SAVSTK),HL
  7134  2952  110700                    LD      DE,7                    ; ?? LD E,7 should be enough ??
  7135  2955  c34107                    JP      J406F                   ; out of memory error
  7136                          
  7137                          ;       Subroutine      NEW statement
  7138                          ;       Inputs          ________________________
  7139                          ;       Outputs         ________________________
  7140                          
  7141  2958  c0                C6286:  RET     NZ                      ; not end of statement, quit (which will generate a syntax error)
  7142                          
  7143                          ;       Subroutine      clear basic program
  7144                          ;       Inputs          ________________________
  7145                          ;       Outputs         ________________________
  7146                          
  7147  2959  2a76f6            C6287:  LD      HL,(TXTTAB)
  7148  295c  cd0b2b                    CALL    C6439                   ; trace off
  7149  295f  32aaf6                    LD      (AUTFLG),A              ; quit auto linenumber mode
  7150  2962  32a9f6                    LD      (PTRFLG),A              ; output to screen
  7151  2965  77                        LD      (HL),A
  7152  2966  23                        INC     HL
  7153  2967  77                        LD      (HL),A                  ; endpointer at basic text (no program text)
  7154  2968  23                        INC     HL
  7155  2969  22c2f6                    LD      (VARTAB),HL             ; initialize start of basic variable area
  7156                          
  7157                          ;       Subroutine      initialize interpreter, basicpointer at start of program
  7158                          ;       Inputs          ________________________
  7159                          ;       Outputs         ________________________
  7160                          
  7161                          
  7162  296c  cdcbfe            C629A:  CALL    H_RUNC
  7163  296f  2a76f6                    LD      HL,(TXTTAB)
  7164  2972  2b                        DEC     HL
  7165                          
  7166                          ;       Subroutine      initialize interpreter
  7167                          ;       Inputs          HL = BASIC pointer
  7168                          ;       Outputs         ________________________
  7169                          
  7170                          
  7171  2973  cdd0fe            C62A1:  CALL    H_CLEA
  7172  2976  22a7f6                    LD      (TEMP),HL
  7173                          
  7174                          ;       Subroutine      initialize interpreter, basicpointer from TEMP
  7175                          ;       Inputs          ________________________
  7176                          ;       Outputs         ________________________
  7177                          
  7178  2979  cd402a            C62A7:  CALL    C636E                   ; clear trap variables
  7179  297c  061a                      LD      B,26
  7180  297e  21caf6                    LD      HL,DEFTBL
  7181  2981  cdd5fe                    CALL    H_LOPD
  7182  2984  3608              J62B2:  LD      (HL),8
  7183  2986  23                        INC     HL
  7184  2987  10fb                      DJNZ    J62B2                   ; default type for variables is double real
  7185  2989  cd0000                    CALL    C2C24                   ; initialize RNDX
  7186  298c  af                        XOR     A
  7187  298d  32bbf6                    LD      (ONEFLG),A              ; not in ERROR handling routine
  7188  2990  6f                        LD      L,A
  7189  2991  67                        LD      H,A
  7190  2992  22b9f6                    LD      (ONELIN),HL             ; no "on error" handler
  7191  2995  22c0f6                    LD      (OLDTXT),HL             ; CONT statement not possible
  7192  2998  2a72f6                    LD      HL,(MEMSIZ)
  7193  299b  229bf6                    LD      (FRETOP),HL             ; empty stringspace
  7194  299e  cd9b2a                    CALL    C63C9                   ; restore statement
  7195  29a1  2ac2f6                    LD      HL,(VARTAB)
  7196  29a4  22c4f6                    LD      (ARYTAB),HL             ; begin of arrayvariables space = begin of variable space (no variables)
  7197  29a7  22c6f6                    LD      (STREND),HL             ; end of basicprogram workarea = begin of variable space (no array variables)
  7198  29aa  cdee32                    CALL    C6C1C                   ; close all i/o channels
  7199  29ad  3a7cf8                    LD      A,(NLONLY)
  7200  29b0  e601                      AND     $1                     ; loading basic program ?
  7201  29b2  2003                      JR      NZ,C62E5
  7202  29b4  327cf8                    LD      (NLONLY),A              ; nope, close i/o channels when requested
  7203                          
  7204                          ;       Subroutine      initialize stack
  7205                          ;       Inputs          ________________________
  7206                          ;       Outputs         ________________________
  7207                          
  7208  29b7  c1                C62E5:  POP     BC                      ; get return address from stack
  7209  29b8  2a74f6                    LD      HL,(STKTOP)
  7210  29bb  2b                        DEC     HL
  7211  29bc  2b                        DEC     HL
  7212  29bd  22b1f6                    LD      (SAVSTK),HL
  7213  29c0  23                        INC     HL
  7214  29c1  23                        INC     HL
  7215                          
  7216                          ;       Subroutine      reinitialize stack, reset interpreter output, clear FN vars, clear variable search flag
  7217                          ;       Inputs          HL = top of new stack
  7218                          ;       Outputs         ________________________
  7219                          
  7220  29c2  cddafe            J62F0:  CALL    H_STKE
  7221  29c5  f9                        LD      SP,HL                   ; initialize stackpointer
  7222  29c6  217af6                    LD      HL,TEMPST
  7223  29c9  2278f6                    LD      (TEMPPT),HL             ; clear stringdescriptor stack
  7224  29cc  cdd639                    CALL    C7304                   ; end printeroutput
  7225  29cf  cdd111                    CALL    C4AFF                   ; return interpreter output to screen
  7226  29d2  af                        XOR     A
  7227  29d3  67                        LD      H,A
  7228  29d4  6f                        LD      L,A
  7229  29d5  22e6f6                    LD      (PRMLEN),HL
  7230  29d8  32b7f7                    LD      (NOFUNS),A
  7231  29db  224ef7                    LD      (PRMLN2),HL
  7232  29de  22baf7                    LD      (FUNACT),HL
  7233  29e1  22e4f6                    LD      (PRMSTK),HL             ; clear FN variables
  7234  29e4  32a5f6                    LD      (SUBFLG),A              ; clear variable search flag
  7235  29e7  e5                        PUSH    HL                      ; terminator zero word for FOR and GOSUB
  7236  29e8  c5                        PUSH    BC                      ; return address back on stack
  7237  29e9  2aa7f6            I6317:  LD      HL,(TEMP)
  7238  29ec  c9                        RET
  7239                          
  7240                          ;       Subroutine      enable trap
  7241                          ;       Inputs          HL = pointer to trap block
  7242                          ;       Outputs         ________________________
  7243                          
  7244  29ed  f3                J631B:  DI
  7245  29ee  7e                        LD      A,(HL)
  7246  29ef  e604                      AND     $4                     ; keep trap occured flag
  7247  29f1  f601                      OR      $1                     ; trap enabled
  7248  29f3  be                        CP      (HL)                    ; trap already enabled AND not paused ?
  7249  29f4  77                        LD      (HL),A
  7250  29f5  2804                      JR      Z,J6329                 ; yep, quit
  7251  29f7  e604                      AND     $4                     ; trap occured ?
  7252  29f9  2026                      JR      NZ,J634F                ; yep, increase trap counter and quit
  7253  29fb  fb                J6329:  EI
  7254  29fc  c9                        RET
  7255                          
  7256                          ;       Subroutine      disable trap
  7257                          ;       Inputs          ________________________
  7258                          ;       Outputs         ________________________
  7259                          
  7260  29fd  f3                J632B:  DI
  7261  29fe  7e                        LD      A,(HL)
  7262  29ff  3600                      LD      (HL),0                  ; clear trap occured, trap not paused, trap disabled
  7263  2a01  1807                      JR      J6338                   ; decrease trap counter if needed
  7264                          
  7265                          ;       Subroutine      pause trap
  7266                          ;       Inputs          ________________________
  7267                          ;       Outputs         ________________________
  7268                          
  7269  2a03  f3                C6331:  DI
  7270  2a04  7e                        LD      A,(HL)
  7271  2a05  f5                        PUSH    AF
  7272  2a06  f602                      OR      $2
  7273  2a08  77                        LD      (HL),A                  ; trap paused
  7274  2a09  f1                        POP     AF
  7275  2a0a  ee05              J6338:  XOR     $5                     ; trap occured AND trap was not paused AND trap enabled ?
  7276  2a0c  2826                      JR      Z,J6362                 ; yep, decrease trap counter
  7277  2a0e  fb                        EI
  7278  2a0f  c9                        RET
  7279                          
  7280                          ;       Subroutine      unpause trap
  7281                          ;       Inputs          ________________________
  7282                          ;       Outputs         ________________________
  7283                          
  7284  2a10  f3                C633E:  DI
  7285  2a11  7e                        LD      A,(HL)
  7286  2a12  e605                      AND     $5                     ; keep trap occured and trap enabled flags
  7287  2a14  be                        CP      (HL)                    ; was trap paused ?
  7288  2a15  77                        LD      (HL),A                  ; trap not paused anymore
  7289  2a16  2002                      JR      NZ,J6348                ; yep,
  7290  2a18  fb                        EI
  7291  2a19  c9                        RET
  7292                          
  7293  2a1a  ee05              J6348:  XOR     $5                     ; trap occured AND trap enabled ?
  7294  2a1c  2803                      JR      Z,J634F                 ; yep, increase trap counter and quit
  7295  2a1e  fb                        EI
  7296  2a1f  c9                        RET
  7297                          
  7298                          ;       Subroutine      increase trap counter
  7299                          ;       Inputs          ________________________
  7300                          ;       Outputs         ________________________
  7301                          ;       Remark          Unused Code, Not called from anywhere
  7302                          
  7303  2a20  f3                N634E:  DI
  7304                          
  7305                          ;       Subroutine      increase trap counter
  7306                          ;       Inputs          ________________________
  7307                          ;       Outputs         ________________________
  7308                          
  7309  2a21  3ad8fb            J634F:  LD      A,(ONGSBF)
  7310  2a24  3c                        INC     A
  7311  2a25  32d8fb                    LD      (ONGSBF),A
  7312  2a28  fb                        EI
  7313  2a29  c9                        RET
  7314                          
  7315                          ;       Subroutine      acknowledge trap
  7316                          ;       Inputs          ________________________
  7317                          ;       Outputs         ________________________
  7318                          
  7319  2a2a  f3                C6358:  DI
  7320  2a2b  7e                        LD      A,(HL)
  7321  2a2c  e603                      AND     $3                     ; keep trap paused and trap enabled flags
  7322  2a2e  be                        CP      (HL)                    ; trap occured ?
  7323  2a2f  77                        LD      (HL),A                  ; clear trap occured
  7324  2a30  2002                      JR      NZ,J6362                ; yep, decrease trap counter
  7325  2a32  fb                J6360:  EI
  7326  2a33  c9                        RET
  7327                          
  7328                          ;       Subroutine      decrease trap counter
  7329                          ;       Inputs          ________________________
  7330                          ;       Outputs         ________________________
  7331                          
  7332  2a34  3ad8fb            J6362:  LD      A,(ONGSBF)
  7333  2a37  d601                      SUB     $1
  7334  2a39  38f7                      JR      C,J6360                 ; already zero, quit
  7335  2a3b  32d8fb                    LD      (ONGSBF),A
  7336  2a3e  fb                        EI
  7337  2a3f  c9                        RET
  7338                          
  7339                          ;       Subroutine      clear trap variables
  7340                          ;       Inputs          ________________________
  7341                          ;       Outputs         ________________________
  7342                          
  7343  2a40  214cfc            C636E:  LD      HL,TRPTBL
  7344  2a43  061a                      LD      B,26
  7345  2a45  af                        XOR     A
  7346  2a46  77                J6374:  LD      (HL),A
  7347  2a47  23                        INC     HL
  7348  2a48  77                        LD      (HL),A
  7349  2a49  23                        INC     HL
  7350  2a4a  77                        LD      (HL),A
  7351  2a4b  23                        INC     HL
  7352  2a4c  10f8                      DJNZ    J6374
  7353  2a4e  21cefb                    LD      HL,FNKFLG
  7354  2a51  060a                      LD      B,10
  7355  2a53  77                J6381:  LD      (HL),A
  7356  2a54  23                        INC     HL
  7357  2a55  10fc                      DJNZ    J6381
  7358  2a57  32d8fb                    LD      (ONGSBF),A              ; clear trap counter
  7359  2a5a  c9                        RET
  7360                          
  7361                          ;       Subroutine      __________________________
  7362                          ;       Inputs          ________________________
  7363                          ;       Outputs         ________________________
  7364                          
  7365  2a5b  3abbf6            C6389:  LD      A,(ONEFLG)
  7366  2a5e  b7                        OR      A                       ; in ERROR handling routine ?
  7367  2a5f  c0                        RET     NZ                      ; yep, quit
  7368  2a60  e5                        PUSH    HL
  7369  2a61  2a1cf4                    LD      HL,(CURLIN)
  7370  2a64  7c                        LD      A,H
  7371  2a65  a5                        AND     L
  7372  2a66  3c                        INC     A                       ; interpreter in direct mode ?
  7373  2a67  280f                      JR      Z,J63A6                 ; yep, quit
  7374  2a69  214cfc                    LD      HL,TRPTBL
  7375  2a6c  061a                      LD      B,26
  7376  2a6e  7e                J639C:  LD      A,(HL)
  7377  2a6f  fe05                      CP      $5                     ; trap occured AND trap not paused AND trap enabled ?
  7378  2a71  2807                      JR      Z,J63A8                 ; yep, handle trap
  7379  2a73  23                J63A1:  INC     HL
  7380  2a74  23                        INC     HL
  7381  2a75  23                        INC     HL
  7382  2a76  10f6                      DJNZ    J639C                   ; next trap
  7383  2a78  e1                J63A6:  POP     HL
  7384  2a79  c9                        RET
  7385                          
  7386  2a7a  c5                J63A8:  PUSH    BC
  7387  2a7b  23                        INC     HL
  7388  2a7c  5e                        LD      E,(HL)
  7389  2a7d  23                        INC     HL
  7390  2a7e  56                        LD      D,(HL)                  ; linepointer trap handler
  7391  2a7f  2b                        DEC     HL
  7392  2a80  2b                        DEC     HL
  7393  2a81  7a                        LD      A,D
  7394  2a82  b3                        OR      E                       ; has this trap a handler ?
  7395  2a83  c1                        POP     BC
  7396  2a84  28ed                      JR      Z,J63A1                 ; nope, next trap
  7397  2a86  d5                        PUSH    DE
  7398  2a87  e5                        PUSH    HL
  7399  2a88  cd2a2a                    CALL    C6358                   ; acknowledge trap
  7400  2a8b  cd032a                    CALL    C6331                   ; pause trap
  7401  2a8e  0e03                      LD      C,3
  7402  2a90  cd3029                    CALL    C625E                   ; check if enough stackspace for 3 words
  7403  2a93  c1                        POP     BC                      ; trapentry
  7404  2a94  d1                        POP     DE                      ; linepointer
  7405  2a95  e1                        POP     HL                      ; BASIC pointer
  7406  2a96  e3                        EX      (SP),HL
  7407  2a97  e1                        POP     HL                      ; remove returnaddress
  7408  2a98  c3a10e                    JP      J47CF                   ; GOSUB traphandler
  7409                          
  7410                          ;       Subroutine      RESTORE statement
  7411                          ;       Inputs          ________________________
  7412                          ;       Outputs         ________________________
  7413                          
  7414  2a9b  eb                C63C9:  EX      DE,HL
  7415  2a9c  2a76f6                    LD      HL,(TXTTAB)
  7416  2a9f  280e                      JR      Z,J63DD                 ; end of statement, use start of BASIC program
  7417  2aa1  eb                        EX      DE,HL
  7418  2aa2  cd3b0e                    CALL    C4769                   ; collect linenumber
  7419  2aa5  e5                        PUSH    HL
  7420  2aa6  cd6709                    CALL    C4295                   ; search linenumber
  7421  2aa9  60                        LD      H,B
  7422  2aaa  69                        LD      L,C
  7423  2aab  d1                        POP     DE
  7424  2aac  d2ee0e                    JP      NC,J481C                ; not found, undefined line number error
  7425  2aaf  2b                J63DD:  DEC     HL
  7426  2ab0  22c8f6            J63DE:  LD      (DATPTR),HL             ; new DATA pointer
  7427  2ab3  eb                        EX      DE,HL
  7428  2ab4  c9                        RET
  7429                          
  7430                          ;       Subroutine      STOP statement
  7431                          ;       Inputs          ________________________
  7432                          ;       Outputs         ________________________
  7433                          
  7434  2ab5  c2773e            C63E3:  JP      NZ,J77A5                ; not end of statement, STOP statement (trap)
  7435                          
  7436                          ;       Subroutine      STOP used by BIOS ROM
  7437                          ;       Inputs          ________________________
  7438                          ;       Outputs         ________________________
  7439                          ;       Remark          Entrypoint unneeded, because it is called with A=0 and Zx set
  7440                          ;                       Replacement with C63E3 is oK_ RET NZ at 63E6 could be removed
  7441                          
  7442  2ab8  c0                C63E6:  RET     NZ
  7443  2ab9  3c                        INC     A                       ; A = 1 (flag STOP)
  7444  2aba  180a                      JR      J63F4
  7445                          
  7446                          ;       Subroutine      END statement
  7447                          ;       Inputs          ________________________
  7448                          ;       Outputs         ________________________
  7449                          
  7450  2abc  c0                C63EA:  RET     NZ                      ; not end of statement, quit (which generates syntax error)
  7451  2abd  af                        XOR     A
  7452  2abe  32bbf6                    LD      (ONEFLG),A              ; not in ERROR handler routine
  7453  2ac1  f5                        PUSH    AF
  7454  2ac2  ccee32                    CALL    Z,C6C1C                 ; close all i/o channels (?? should be CALL C6C1C ??)
  7455  2ac5  f1                        POP     AF
  7456  2ac6  22aff6            J63F4:  LD      (SAVTXT),HL             ; save BASIC pointer
  7457  2ac9  217af6                    LD      HL,TEMPST
  7458  2acc  2278f6                    LD      (TEMPPT),HL             ; clear stringdescriptor stack
  7459  2acf  21                        DEFB    $21                    ; skip next instruction
  7460  2ad0  f6ff              J63FE:  OR      $FF                    ; flag aborted input
  7461  2ad2  c1                        POP     BC
  7462  2ad3  2a1cf4            J6401:  LD      HL,(CURLIN)
  7463  2ad6  e5                        PUSH    HL
  7464  2ad7  f5                I6405:  PUSH    AF
  7465  2ad8  7d                        LD      A,L
  7466  2ad9  a4                        AND     H
  7467  2ada  3c                        INC     A                       ; interpreter in direct mode ?
  7468  2adb  2809                      JR      Z,J6414                 ; yep, do not save
  7469  2add  22bef6                    LD      (OLDLIN),HL
  7470  2ae0  2aaff6                    LD      HL,(SAVTXT)
  7471  2ae3  22c0f6                    LD      (OLDTXT),HL             ; nope, save BASIC pointer and linenumber for CONT
  7472  2ae6  cdd639            J6414:  CALL    C7304                   ; end printeroutput
  7473  2ae9  cdf539                    CALL    C7323                   ; fresh line to interpreter output
  7474  2aec  f1                        POP     AF                      ; END ?
  7475  2aed  21ae06                    LD      HL,I3FDC
  7476  2af0  c2cf07                    JP      NZ,J40FD                ; nope, aborted input or STOP,
  7477  2af3  c3f007                    JP      J411E                   ; END, ok and mainloop (+POP)
  7478                          
  7479                          ;       Subroutine      CONT statement
  7480                          ;       Inputs          ________________________
  7481                          ;       Outputs         ________________________
  7482                          
  7483                          
  7484  2af6  2ac0f6            C6424:  LD      HL,(OLDTXT)
  7485  2af9  7c                        LD      A,H
  7486  2afa  b5                        OR      L
  7487  2afb  111100                    LD      DE,17                   ; ?? LD E,17 should be enough ??
  7488  2afe  ca4107                    JP      Z,J406F                 ; nope, can not continue error
  7489  2b01  ed5bbef6                  LD      DE,(OLDLIN)
  7490  2b05  ed531cf4                  LD      (CURLIN),DE
  7491  2b09  c9                        RET
  7492                          
  7493                          ;       Subroutine      TRON
  7494                          ;       Inputs          ________________________
  7495                          ;       Outputs         ________________________
  7496                          
  7497                          
  7498  2b0a  3e                C6438:  DEFB    $3E                    ; LD A,xx, skip next instruction
  7499                          
  7500                          ;       Subroutine      TROFF
  7501                          ;       Inputs          ________________________
  7502                          ;       Outputs         ________________________
  7503                          
  7504                          
  7505  2b0b  af                C6439:  XOR     A
  7506  2b0c  32c4f7                    LD      (TRCFLG),A
  7507  2b0f  c9                        RET
  7508                          
  7509                          ;       Subroutine      SWAP statement
  7510                          ;       Inputs          ________________________
  7511                          ;       Outputs         ________________________
  7512                          
  7513  2b10  cd7625            C643E:  CALL    C5EA4                   ; locate variable
  7514  2b13  d5                        PUSH    DE
  7515  2b14  e5                        PUSH    HL
  7516  2b15  21bcf7                    LD      HL,SWPTMP
  7517  2b18  cd0000                    CALL    C2EF3                   ; HL = DE (valtyp), save 1st var in SWPTMP
  7518  2b1b  2ac4f6                    LD      HL,(ARYTAB)
  7519  2b1e  e3                        EX      (SP),HL                 ; save (ARYTAB), restore BASIC pointer
  7520  2b1f  ef                        RST     GETYPR                  ; get DAC type
  7521  2b20  f5                        PUSH    AF                      ; save type
  7522  2b21  cf                        RST     SYNCHR
  7523  2b22  2c                        DEFB    ','                     ; check for ,
  7524  2b23  cd7625                    CALL    C5EA4                   ; locate variable
  7525  2b26  f1                        POP     AF
  7526  2b27  47                        LD      B,A
  7527  2b28  ef                        RST     GETYPR
  7528  2b29  b8                        CP      B
  7529  2b2a  c23f07                    JP      NZ,J406D                ; not the same type, type mismatch error
  7530  2b2d  e3                        EX      (SP),HL
  7531  2b2e  eb                        EX      DE,HL
  7532  2b2f  e5                        PUSH    HL
  7533  2b30  2ac4f6                    LD      HL,(ARYTAB)             ; has (ARYTAB) changed (2nd variable does not exists) ?
  7534  2b33  e7                        RST     DCOMPR
  7535  2b34  2010                      JR      NZ,J6474                ; yep, illegal function call
  7536  2b36  d1                        POP     DE                      ; pointer to 2nd variable
  7537  2b37  e1                        POP     HL
  7538  2b38  e3                        EX      (SP),HL                 ; save BASIC pointer, get pointer to 1st variable
  7539  2b39  d5                        PUSH    DE
  7540  2b3a  cd0000                    CALL    C2EF3                   ; HL = DE (valtyp), 1st var = 2nd var
  7541  2b3d  e1                        POP     HL
  7542  2b3e  11bcf7                    LD      DE,SWPTMP
  7543  2b41  cd0000                    CALL    C2EF3                   ; HL = DE (valtyp), 2nd var = SWPTMP
  7544  2b44  e1                        POP     HL
  7545  2b45  c9                        RET
  7546                          
  7547  2b46  c32c0e            J6474:  JP      C475A                   ; illegal function call
  7548                          
  7549                          ;       Subroutine      ERASE statement
  7550                          ;       Inputs          ________________________
  7551                          ;       Outputs         ________________________
  7552                          
  7553  2b49  3e01              C6477:  LD      A,1
  7554  2b4b  32a5f6                    LD      (SUBFLG),A              ; variable search flag = arrayvariable
  7555  2b4e  cd7625                    CALL    C5EA4                   ; locate variable
  7556  2b51  e5                        PUSH    HL
  7557  2b52  32a5f6                    LD      (SUBFLG),A
  7558  2b55  60                        LD      H,B
  7559  2b56  69                        LD      L,C
  7560  2b57  0b                        DEC     BC
  7561  2b58  0b                        DEC     BC
  7562  2b59  0b                        DEC     BC
  7563  2b5a  0b                        DEC     BC
  7564  2b5b  0b                        DEC     BC
  7565  2b5c  19                        ADD     HL,DE
  7566  2b5d  eb                        EX      DE,HL
  7567  2b5e  2ac6f6                    LD      HL,(STREND)
  7568  2b61  e7                J648F:  RST     DCOMPR
  7569  2b62  1a                        LD      A,(DE)
  7570  2b63  02                        LD      (BC),A
  7571  2b64  13                        INC     DE
  7572  2b65  03                        INC     BC
  7573  2b66  20f9                      JR      NZ,J648F
  7574  2b68  0b                        DEC     BC
  7575  2b69  60                        LD      H,B
  7576  2b6a  69                        LD      L,C
  7577  2b6b  22c6f6                    LD      (STREND),HL
  7578  2b6e  e1                        POP     HL
  7579  2b6f  7e                        LD      A,(HL)
  7580  2b70  fe2c                      CP      ','
  7581  2b72  c0                        RET     NZ
  7582  2b73  d7                        RST     CHRGTR                  ; get next BASIC character
  7583  2b74  18d3                      JR      C6477
  7584                          
  7585                          ;       Unused Code
  7586                          ;       Not called from anywhere, leftover from a early Microsoft BASIC ?
  7587                          
  7588  2b76  f1                N64A4:  POP     AF
  7589  2b77  e1                        POP     HL
  7590  2b78  c9                        RET
  7591                          
  7592                          ;       Subroutine      is current BASIC character a upcase letter ?
  7593                          ;       Inputs          ________________________
  7594                          ;       Outputs         ________________________
  7595                          
  7596  2b79  7e                C64A7:  LD      A,(HL)
  7597                          
  7598                          ;       Subroutine      is upcase letter character ?
  7599                          ;       Inputs          ________________________
  7600                          ;       Outputs         ________________________
  7601                          
  7602  2b7a  fe41              C64A8:  CP      'A'
  7603  2b7c  d8                        RET     C
  7604  2b7d  fe5b                      CP      'Z'+1
  7605  2b7f  3f                        CCF
  7606  2b80  c9                        RET
  7607                          
  7608                          ;       Subroutine      CLEAR statement
  7609                          ;       Inputs          ________________________
  7610                          ;       Outputs         ________________________
  7611                          
  7612  2b81  ca7329            C64AF:  JP      Z,C62A1                 ; end of statement, initialize interpreter and quit
  7613  2b84  cd280e                    CALL    C4756                   ; evaluate word operand and check for 0-32767 range
  7614  2b87  2b                        DEC     HL
  7615  2b88  d7                        RST     CHRGTR                  ; end of statement ?
  7616  2b89  e5                        PUSH    HL
  7617  2b8a  2a4afc                    LD      HL,(HIMEM)
  7618  2b8d  44                        LD      B,H
  7619  2b8e  4d                        LD      C,L                     ; current top BASIC memory
  7620  2b8f  2a72f6                    LD      HL,(MEMSIZ)             ; current top of string heap
  7621  2b92  282a                      JR      Z,J64EC                 ; end of statement (no new top specified), use current
  7622  2b94  e1                        POP     HL
  7623  2b95  cf                        RST     SYNCHR
  7624  2b96  2c                        DEFB    ','                     ; check for ,
  7625  2b97  d5                        PUSH    DE
  7626  2b98  cd011b                    CALL    C542F                   ; evaluate address operand
  7627  2b9b  2b                        DEC     HL
  7628  2b9c  d7                        RST     CHRGTR                  ; end of statement ?
  7629  2b9d  c22707                    JP      NZ,J4055                ; nope, syntax error
  7630  2ba0  e3                        EX      (SP),HL
  7631  2ba1  eb                        EX      DE,HL
  7632  2ba2  7c                        LD      A,H
  7633  2ba3  a7                        AND     A                       ; top BASIC memory in $8000-$FFFF range ?
  7634  2ba4  f22c0e                    JP      P,C475A                 ; nope, illegal function call
  7635  2ba7  d5                        PUSH    DE
  7636  2ba8  1181f3                    LD      DE,VARWRK+1
  7637  2bab  e7                        RST     DCOMPR                  ; top BASIC memory <= VARWRK ?
  7638  2bac  d22c0e                    JP      NC,C475A                ; nope, illegal function call
  7639  2baf  d1                        POP     DE                      ; size of string heap
  7640  2bb0  e5                        PUSH    HL
  7641  2bb1  01f5fe                    LD      BC,-(256+9+2)
  7642  2bb4  3a5ff8                    LD      A,(MAXFIL)
  7643  2bb7  09                J64E5:  ADD     HL,BC
  7644  2bb8  3d                        DEC     A
  7645  2bb9  f2b72b                    JP      P,J64E5                 ; next i/o channel
  7646  2bbc  c1                J64EA:  POP     BC                      ; new top address
  7647  2bbd  2b                        DEC     HL                      ; new top of string heap
  7648  2bbe  7d                J64EC:  LD      A,L
  7649  2bbf  93                        SUB     E
  7650  2bc0  5f                        LD      E,A
  7651  2bc1  7c                        LD      A,H
  7652  2bc2  9a                        SBC     A,D
  7653  2bc3  57                        LD      D,A                     ; bottom of string heap
  7654  2bc4  da4729                    JP      C,J6275                 ; <0, out of memory
  7655  2bc7  e5                        PUSH    HL
  7656  2bc8  2ac2f6                    LD      HL,(VARTAB)
  7657  2bcb  c5                        PUSH    BC
  7658  2bcc  01a000                    LD      BC,160
  7659  2bcf  09                        ADD     HL,BC
  7660  2bd0  c1                        POP     BC
  7661  2bd1  e7                        RST     DCOMPR                  ; enough space for stack ?
  7662  2bd2  d24729                    JP      NC,J6275                ; nope, out of memory
  7663  2bd5  eb                        EX      DE,HL
  7664  2bd6  2274f6                    LD      (STKTOP),HL             ; new start Z80 stack
  7665  2bd9  60                        LD      H,B
  7666  2bda  69                        LD      L,C
  7667  2bdb  224afc                    LD      (HIMEM),HL              ; new top BASIC memory
  7668  2bde  e1                        POP     HL
  7669  2bdf  2272f6                    LD      (MEMSIZ),HL             ; new top of string heap
  7670  2be2  e1                        POP     HL                      ; restore BASIC pointer
  7671  2be3  cd7329                    CALL    C62A1                   ; initialize interpreter
  7672  2be6  3a5ff8                    LD      A,(MAXFIL)              ; number of i/o channels
  7673  2be9  cd3d45                    CALL    C7E6B                   ; allocate i/o channels
  7674  2bec  2aa7f6                    LD      HL,(TEMP)               ; restore BASIC pointer
  7675  2bef  c3d30c                    JP      C4601                   ; execute new statement
  7676                          
  7677                          ;       Unused Code
  7678                          ;       Not called from anywhere, leftover from a early Microsoft BASIC ?
  7679                          ;
  7680                          ;       Subroutine      DE=HL-DE
  7681                          ;       Inputs          ________________________
  7682                          ;       Outputs         ________________________
  7683                          
  7684  2bf2  7d                N6520:  LD      A,L
  7685  2bf3  93                        SUB     E
  7686  2bf4  5f                        LD      E,A
  7687  2bf5  7c                        LD      A,H
  7688  2bf6  9a                        SBC     A,D
  7689  2bf7  57                        LD      D,A
  7690  2bf8  c9                        RET
  7691                          
  7692                          ;       Subroutine      NEXT statement
  7693                          ;       Inputs          ________________________
  7694                          ;       Outputs         ________________________
  7695                          
  7696  2bf9  110000            C6527:  LD      DE,0                    ; any loop variable
  7697                          
  7698                          ;       Subroutine      __________________________
  7699                          ;       Inputs          ________________________
  7700                          ;       Outputs         ________________________
  7701                          
  7702  2bfc  c47625            C652A:  CALL    NZ,C5EA4                ; not end of statement, locate variable
  7703  2bff  22a7f6                    LD      (TEMP),HL               ; save BASIC pointer
  7704  2c02  cdb406                    CALL    C3FE2                   ; search FOR block on stack (skip 2 words)
  7705  2c05  c22d07                    JP      NZ,J405B                ; not found,
  7706  2c08  f9                        LD      SP,HL
  7707  2c09  d5                        PUSH    DE
  7708  2c0a  7e                        LD      A,(HL)
  7709  2c0b  f5                        PUSH    AF
  7710  2c0c  23                        INC     HL
  7711  2c0d  d5                        PUSH    DE
  7712  2c0e  7e                        LD      A,(HL)
  7713  2c0f  23                        INC     HL
  7714  2c10  b7                        OR      A
  7715  2c11  fa3d2c                    JP      M,J656B
  7716  2c14  3d                        DEC     A
  7717  2c15  2004                      JR      NZ,J6549
  7718  2c17  010800                    LD      BC,8
  7719  2c1a  09                        ADD     HL,BC
  7720  2c1b  c604              J6549:  ADD     A,4
  7721  2c1d  3263f6                    LD      (VALTYP),A
  7722  2c20  cd0000                    CALL    C2F08                   ; DAC = HL
  7723  2c23  eb                        EX      DE,HL
  7724  2c24  e3                        EX      (SP),HL
  7725  2c25  e5                        PUSH    HL
  7726  2c26  ef                        RST     GETYPR                  ; get DAC type
  7727  2c27  304e                      JR      NC,J65A5                ; double real,
  7728  2c29  cd0000                    CALL    C2ED6                   ; load from HL
  7729  2c2c  cd0000                    CALL    C324E                   ; single real addition
  7730  2c2f  e1                        POP     HL
  7731  2c30  cd0000                    CALL    C2EE8                   ; DAC = (single)
  7732  2c33  e1                        POP     HL
  7733  2c34  cd0000                    CALL    C2EDF                   ; load from HL
  7734  2c37  e5                        PUSH    HL
  7735  2c38  cd0000                    CALL    C2F21                   ; single real compare
  7736  2c3b  1829                      JR      J6594
  7737                          
  7738  2c3d  010c00            J656B:  LD      BC,$000C
  7739  2c40  09                        ADD     HL,BC
  7740  2c41  4e                        LD      C,(HL)
  7741  2c42  23                        INC     HL
  7742  2c43  46                        LD      B,(HL)
  7743  2c44  23                        INC     HL
  7744  2c45  e3                        EX      (SP),HL
  7745  2c46  5e                        LD      E,(HL)
  7746  2c47  23                        INC     HL
  7747  2c48  56                        LD      D,(HL)
  7748  2c49  e5                        PUSH    HL
  7749  2c4a  69                        LD      L,C
  7750  2c4b  60                        LD      H,B
  7751  2c4c  cd0000                    CALL    C3172                   ; add integer
  7752  2c4f  3a63f6                    LD      A,(VALTYP)
  7753  2c52  fe02                      CP      2
  7754  2c54  c23907                    JP      NZ,J4067                ; overflow error
  7755  2c57  eb                        EX      DE,HL
  7756  2c58  e1                        POP     HL
  7757  2c59  72                        LD      (HL),D
  7758  2c5a  2b                        DEC     HL
  7759  2c5b  73                        LD      (HL),E
  7760  2c5c  e1                        POP     HL
  7761  2c5d  d5                        PUSH    DE
  7762  2c5e  5e                        LD      E,(HL)
  7763  2c5f  23                        INC     HL
  7764  2c60  56                        LD      D,(HL)
  7765  2c61  23                        INC     HL
  7766  2c62  e3                        EX      (SP),HL
  7767  2c63  cd0000                    CALL    C2F4D                   ; compare integer
  7768  2c66  e1                J6594:  POP     HL
  7769  2c67  c1                        POP     BC
  7770  2c68  90                        SUB     B
  7771  2c69  cd0000                    CALL    C2EDF                   ; load from HL
  7772  2c6c  281a                      JR      Z,J65B6
  7773  2c6e  eb                        EX      DE,HL
  7774  2c6f  221cf4                    LD      (CURLIN),HL
  7775  2c72  69                        LD      L,C
  7776  2c73  60                        LD      H,B
  7777  2c74  c3cf0c                    JP      J45FD
  7778                          
  7779  2c77  cd0000            J65A5:  CALL    C2697                   ; double real addition (HL)
  7780  2c7a  e1                        POP     HL
  7781  2c7b  cd0000                    CALL    C2F10                   ; HL = DAC
  7782  2c7e  e1                        POP     HL
  7783  2c7f  cd0000                    CALL    C2EEF                   ; ARG = HL
  7784  2c82  d5                        PUSH    DE
  7785  2c83  cd0000                    CALL    C2F5C                   ; compare double real
  7786  2c86  18de                      JR      J6594
  7787                          
  7788  2c88  f9                J65B6:  LD      SP,HL
  7789  2c89  22b1f6                    LD      (SAVSTK),HL
  7790  2c8c  eb                        EX      DE,HL
  7791  2c8d  2aa7f6                    LD      HL,(TEMP)
  7792  2c90  7e                        LD      A,(HL)
  7793  2c91  fe2c                      CP      ','
  7794  2c93  c2d30c                    JP      NZ,C4601                ; nope, execute new statement
  7795  2c96  d7                        RST     CHRGTR                  ; get next BASIC character
  7796  2c97  cdfc2b                    CALL    C652A
  7797  2c9a  cda22e            I65C8:  CALL    C67D0                   ; free temporary string with type check
  7798  2c9d  7e                        LD      A,(HL)                  ; size of string
  7799  2c9e  23                        INC     HL
  7800  2c9f  4e                        LD      C,(HL)
  7801  2ca0  23                        INC     HL
  7802  2ca1  46                        LD      B,(HL)                  ; pointer to string
  7803  2ca2  d1                        POP     DE
  7804  2ca3  c5                        PUSH    BC
  7805  2ca4  f5                        PUSH    AF
  7806  2ca5  cda92e                    CALL    C67D7                   ; free temporary string (descriptor in DE)
  7807  2ca8  f1                        POP     AF
  7808  2ca9  57                        LD      D,A
  7809  2caa  5e                        LD      E,(HL)                  ; size of string
  7810  2cab  23                        INC     HL
  7811  2cac  4e                        LD      C,(HL)
  7812  2cad  23                        INC     HL
  7813  2cae  46                        LD      B,(HL)                  ; pointer to string
  7814  2caf  e1                        POP     HL
  7815  2cb0  7b                J65DE:  LD      A,E
  7816  2cb1  b2                        OR      D                       ; end of both strings ?
  7817  2cb2  c8                        RET     Z                       ; yep, quit (A=0, equal)
  7818  2cb3  7a                        LD      A,D
  7819  2cb4  d601                      SUB     1                       ; end of first string ?
  7820  2cb6  d8                        RET     C                       ; yep, quit (A=FF, less)
  7821  2cb7  af                        XOR     A
  7822  2cb8  bb                        CP      E                       ; end of second string ?
  7823  2cb9  3c                        INC     A
  7824  2cba  d0                        RET     NC                      ; yep, quit (A=1, bigger)
  7825  2cbb  15                        DEC     D
  7826  2cbc  1d                        DEC     E                       ; adjust counter
  7827  2cbd  0a                        LD      A,(BC)
  7828  2cbe  03                        INC     BC
  7829  2cbf  be                        CP      (HL)                    ; equal ?
  7830  2cc0  23                        INC     HL
  7831  2cc1  28ed                      JR      Z,J65DE                 ; yep, next
  7832  2cc3  3f                        CCF
  7833  2cc4  c30000                    JP      J2E79                   ; set compare value
  7834                          
  7835                          ;       Subroutine      OCT$ function
  7836                          ;       Inputs          ________________________
  7837                          ;       Outputs         ________________________
  7838                          
  7839                          
  7840  2cc7  cd0000            C65F5:  CALL    C371E                   ; convert integer to octal text
  7841  2cca  180d                      JR      J6607
  7842                          
  7843                          ;       Subroutine      HEX$ function
  7844                          ;       Inputs          ________________________
  7845                          ;       Outputs         ________________________
  7846                          
  7847                          
  7848  2ccc  cd0000            C65FA:  CALL    C3722                   ; convert integer to hexadecimal text
  7849  2ccf  1808                      JR      J6607
  7850                          
  7851                          ;       Subroutine      BIN$ function
  7852                          ;       Inputs          ________________________
  7853                          ;       Outputs         ________________________
  7854                          
  7855                          
  7856  2cd1  cd0000            C65FF:  CALL    C371A                   ; convert integer to binary text
  7857  2cd4  1803                      JR      J6607
  7858                          
  7859                          ;       Subroutine      STR$ function
  7860                          ;       Inputs          ________________________
  7861                          ;       Outputs         ________________________
  7862                          
  7863  2cd6  cd0000            C6604:  CALL    C3425                   ; convert DAC to text, unformatted
  7864  2cd9  cd072d            J6607:  CALL    C6635                   ; analyse string and create temporary stringdescriptor
  7865  2cdc  cda52e                    CALL    C67D3                   ; free temporary string in DAC
  7866  2cdf  01f72e                    LD      BC,J6825
  7867  2ce2  c5                        PUSH    BC                      ; copy string to new temporary string, temporary stringdescriptor to heap and quit
  7868                          
  7869                          ;       Subroutine      copy string to new temporary string
  7870                          ;       Inputs          HL = source string descriptor
  7871                          ;       Outputs         ________________________
  7872                          
  7873  2ce3  7e                C6611:  LD      A,(HL)                  ; size of string
  7874  2ce4  23                        INC     HL
  7875  2ce5  e5                        PUSH    HL
  7876  2ce6  cd602d                    CALL    C668E                   ; allocate stringspace
  7877  2ce9  e1                        POP     HL
  7878  2cea  4e                        LD      C,(HL)
  7879  2ceb  23                        INC     HL
  7880  2cec  46                        LD      B,(HL)                  ; pointer to string
  7881  2ced  cdfc2c                    CALL    C662A                   ; make temporary stringdescriptor
  7882  2cf0  e5                        PUSH    HL
  7883  2cf1  6f                        LD      L,A                     ; size of string
  7884  2cf2  cd992e                    CALL    C67C7                   ; copy string
  7885  2cf5  d1                        POP     DE
  7886  2cf6  c9                        RET
  7887                          
  7888                          ;       Subroutine      allocate temporary string of 1 char
  7889                          ;       Inputs          ________________________
  7890                          ;       Outputs         DE = pointer to string, HL = descriptor
  7891                          
  7892  2cf7  3e01              C6625:  LD      A,1
  7893                          
  7894                          ;       Subroutine      allocate temporary string
  7895                          ;       Inputs          A = stringsize
  7896                          ;       Outputs         DE = pointer to string, HL = descriptor
  7897                          
  7898  2cf9  cd602d            C6627:  CALL    C668E                   ; allocate stringspace
  7899                          
  7900                          ;       Subroutine      make temporary stringdescriptor
  7901                          ;       Inputs          A = stringsize, DE = pointer to string
  7902                          ;       Outputs         HL = pointer to temporary stringdescriptor
  7903                          
  7904  2cfc  2198f6            C662A:  LD      HL,DSCTMP
  7905  2cff  e5                        PUSH    HL
  7906  2d00  77                        LD      (HL),A
  7907  2d01  23                        INC     HL
  7908  2d02  73                        LD      (HL),E
  7909  2d03  23                        INC     HL
  7910  2d04  72                        LD      (HL),D
  7911  2d05  e1                        POP     HL
  7912  2d06  c9                        RET
  7913                          
  7914                          ;       Subroutine      analyse string and create temporary stringdescriptor
  7915                          ;       Inputs          HL = pointer to string to be analysed
  7916                          ;       Outputs         ________________________
  7917                          
  7918  2d07  2b                C6635:  DEC     HL
  7919                          
  7920                          ;       Subroutine      analyze string with " as endmarker (1st char is skipped) and create temporary stringdescriptor
  7921                          ;       Inputs          ________________________
  7922                          ;       Outputs         ________________________
  7923                          
  7924  2d08  0622              C6636:  LD      B,'"'
  7925                          
  7926                          ;       Subroutine      analyze string with specified endmaker (1st char is skipped) and create temporary stringdescriptor
  7927                          ;       Inputs          ________________________
  7928                          ;       Outputs         ________________________
  7929                          
  7930  2d0a  50                C6638:  LD      D,B
  7931                          
  7932                          ;       Subroutine      analyse string with specified endmarkers (1st char is skipped) and create temporary stringdescriptor
  7933                          ;       Inputs          HL = pointer to string to be analysed, B = end character 1, D = end character 2
  7934                          ;       Outputs         ________________________
  7935                          
  7936  2d0b  e5                C6639:  PUSH    HL
  7937  2d0c  0eff                      LD      C,-1
  7938  2d0e  23                J663C:  INC     HL
  7939  2d0f  7e                        LD      A,(HL)
  7940  2d10  0c                        INC     C
  7941  2d11  b7                        OR      A                       ; end of BASIC line/string ?
  7942  2d12  2806                      JR      Z,J6648                 ; yep,
  7943  2d14  ba                        CP      D                       ; end character 1 ?
  7944  2d15  2803                      JR      Z,J6648                 ; yep,
  7945  2d17  b8                        CP      B                       ; end character 2 ?
  7946  2d18  20f4                      JR      NZ,J663C                ; nope, skip
  7947  2d1a  fe22              J6648:  CP      '"'                     ; string marker ?
  7948  2d1c  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  7949  2d1f  e3                        EX      (SP),HL
  7950  2d20  23                        INC     HL
  7951  2d21  eb                        EX      DE,HL
  7952  2d22  79                        LD      A,C
  7953  2d23  cdfc2c                    CALL    C662A                   ; make temporary stringdescriptor
  7954                          
  7955                          ;       Subroutine      push temporary descriptor to temporary desciptor heap
  7956                          ;       Inputs          ________________________
  7957                          ;       Outputs         ________________________
  7958                          
  7959  2d26  1198f6            J6654:  LD      DE,DSCTMP
  7960  2d29  3e                        DEFB    $3E                    ; LD A,xx, skip next instruction
  7961                          
  7962                          ;       Subroutine      push descriptor to temporary desciptor heap
  7963                          ;       Inputs          DE = desciptor
  7964                          ;       Outputs         ________________________
  7965                          
  7966  2d2a  d5                C6658:  PUSH    DE
  7967  2d2b  2a78f6                    LD      HL,(TEMPPT)
  7968  2d2e  22f8f7                    LD      (DAC+2),HL
  7969  2d31  3e03                      LD      A,3
  7970  2d33  3263f6                    LD      (VALTYP),A
  7971  2d36  cd0000                    CALL    C2EF3                   ; HL = DE (valtyp)
  7972  2d39  119bf6                    LD      DE,TEMPST+30+3
  7973  2d3c  e7                        RST     DCOMPR                  ; temporary descriptor heap full ?
  7974  2d3d  2278f6                    LD      (TEMPPT),HL
  7975  2d40  e1                        POP     HL
  7976  2d41  7e                        LD      A,(HL)
  7977  2d42  c0                        RET     NZ
  7978  2d43  111000                    LD      DE,16                   ; ?? LD E,16 should be enough ??
  7979  2d46  c34107                    JP      J406F                   ; yep, string formula too complex error
  7980                          
  7981                          ;       Subroutine      skip first character, message to interpreter output
  7982                          ;       Inputs          ________________________
  7983                          ;       Outputs         ________________________
  7984                          
  7985  2d49  23                I6677:  INC     HL
  7986                          
  7987                          ;       Subroutine      message to interpreter output
  7988                          ;       Inputs          ________________________
  7989                          ;       Outputs         ________________________
  7990                          
  7991  2d4a  cd072d            C6678:  CALL    C6635                   ; analyse string and create temporary stringdescriptor
  7992                          
  7993                          ;       Subroutine      free string and string to interpreter output
  7994                          ;       Inputs          ________________________
  7995                          ;       Outputs         ________________________
  7996                          
  7997  2d4d  cda52e            C667B:  CALL    C67D3                   ; free temporary string in DAC
  7998  2d50  cd0000                    CALL    C2EE1                   ; get size and address of string
  7999  2d53  14                        INC     D
  8000  2d54  15                J6682:  DEC     D
  8001  2d55  c8                        RET     Z
  8002  2d56  0a                        LD      A,(BC)
  8003  2d57  df                        RST     OUTDO                   ; char to interpreter output
  8004  2d58  fe0d                      CP      $D                     ; CR ?
  8005  2d5a  cc033a                    CALL    Z,C7331                 ; yep, interpreter output pos = 0
  8006  2d5d  03                        INC     BC
  8007  2d5e  18f4                      JR      J6682
  8008                          
  8009                          ;       Subroutine      allocate stringspace
  8010                          ;       Inputs          A = size of string
  8011                          ;       Outputs         DE = pointer to stringspace
  8012                          
  8013  2d60  b7                C668E:  OR      A                       ; because size<>0, Zx is reset (no garbage collect done)
  8014  2d61  0e                        DEFB    $0E                    ; LD C,xx, skip next instruction
  8015  2d62  f1                I6690:  POP     AF
  8016  2d63  f5                        PUSH    AF
  8017  2d64  2a74f6                    LD      HL,(STKTOP)
  8018  2d67  eb                        EX      DE,HL                   ; lowest stringspace
  8019  2d68  2a9bf6                    LD      HL,(FRETOP)
  8020  2d6b  2f                        CPL
  8021  2d6c  4f                        LD      C,A
  8022  2d6d  06ff                      LD      B,$FF
  8023  2d6f  09                        ADD     HL,BC
  8024  2d70  23                        INC     HL                      ; lower stringspace - stringsize = new lower
  8025  2d71  e7                        RST     DCOMPR                  ; space available at bottom ?
  8026  2d72  3807                      JR      C,J66A9                 ; nope, try garbage collect
  8027  2d74  229bf6                    LD      (FRETOP),HL             ; new lower stringspace
  8028  2d77  23                        INC     HL
  8029  2d78  eb                        EX      DE,HL
  8030  2d79  f1                J66A7:  POP     AF
  8031  2d7a  c9                        RET
  8032                          
  8033  2d7b  f1                J66A9:  POP     AF                      ; garbage collect already done ?
  8034  2d7c  110e00                    LD      DE,14                   ; ?? LD E,14 should be enough ??
  8035  2d7f  ca4107                    JP      Z,J406F                 ; yep, out of string space error
  8036  2d82  bf                        CP      A                       ; Zx set (garbage collect done)
  8037  2d83  f5                        PUSH    AF
  8038  2d84  01622d                    LD      BC,I6690
  8039  2d87  c5                        PUSH    BC                      ; do a garbage collect and try allocate again
  8040                          
  8041                          ;       Subroutine      garbage collect
  8042                          ;       Inputs          ________________________
  8043                          ;       Outputs         ________________________
  8044                          
  8045  2d88  2a72f6            C66B6:  LD      HL,(MEMSIZ)             ; stringheap pointer to top of stringspace
  8046  2d8b  229bf6            J66B9:  LD      (FRETOP),HL
  8047  2d8e  210000                    LD      HL,0
  8048  2d91  e5                        PUSH    HL                      ; descriptor current top string
  8049  2d92  2ac6f6                    LD      HL,(STREND)
  8050  2d95  e5                        PUSH    HL                      ; current top string (strings in BASIC text or variables is excluded)
  8051  2d96  217af6                    LD      HL,TEMPST               ; start with the temporary stringdescriptors
  8052  2d99  ed5b78f6          I66C7:  LD      DE,(TEMPPT)
  8053  2d9d  e7                        RST     DCOMPR                  ; stringdescriptor heap empty ?
  8054  2d9e  01992d                    LD      BC,I66C7
  8055  2da1  c2142e                    JP      NZ,J6742                ; nope, adjust if new topstring and next descriptor
  8056  2da4  214cf7                    LD      HL,PRMPRV
  8057  2da7  22b8f7                    LD      (TEMP9),HL
  8058  2daa  2ac4f6                    LD      HL,(ARYTAB)
  8059  2dad  22b5f7                    LD      (ARYTA2),HL             ; stop searching when the array variables are reached
  8060  2db0  2ac2f6                    LD      HL,(VARTAB)             ; start searching in the simple variables
  8061  2db3  ed5bb5f7          J66E1:  LD      DE,(ARYTA2)
  8062  2db7  e7                        RST     DCOMPR                  ; end of searcharea ?
  8063  2db8  2812                      JR      Z,J66FA                 ; yep,
  8064  2dba  7e                        LD      A,(HL)                  ; variable type
  8065  2dbb  23                        INC     HL
  8066  2dbc  23                        INC     HL
  8067  2dbd  23                        INC     HL                      ; skip variablename, to variable value
  8068  2dbe  fe03                      CP      3                       ; string ?
  8069  2dc0  2004                      JR      NZ,J66F4                ; nope, next variable
  8070  2dc2  cd152e                    CALL    C6743                   ; adjust if new topstring
  8071  2dc5  af                        XOR     A
  8072  2dc6  5f                J66F4:  LD      E,A
  8073  2dc7  1600                      LD      D,0
  8074  2dc9  19                        ADD     HL,DE
  8075  2dca  18e7                      JR      J66E1                   ; next variable
  8076                          
  8077  2dcc  2ab8f7            J66FA:  LD      HL,(TEMP9)              ; current FN parameter block
  8078  2dcf  5e                        LD      E,(HL)
  8079  2dd0  23                        INC     HL
  8080  2dd1  56                        LD      D,(HL)
  8081  2dd2  7a                        LD      A,D
  8082  2dd3  b3                        OR      E                       ; end of FN parameter block list ?
  8083  2dd4  2ac4f6                    LD      HL,(ARYTAB)
  8084  2dd7  2813                      JR      Z,J671A                 ; yep, continue with the arrayvariables
  8085  2dd9  eb                        EX      DE,HL
  8086  2dda  22b8f7                    LD      (TEMP9),HL              ; update current FN parameter block
  8087  2ddd  23                        INC     HL
  8088  2dde  23                        INC     HL
  8089  2ddf  5e                        LD      E,(HL)
  8090  2de0  23                        INC     HL
  8091  2de1  56                        LD      D,(HL)
  8092  2de2  23                        INC     HL
  8093  2de3  eb                        EX      DE,HL
  8094  2de4  19                        ADD     HL,DE
  8095  2de5  22b5f7                    LD      (ARYTA2),HL
  8096  2de8  eb                        EX      DE,HL
  8097  2de9  18c8                      JR      J66E1                   ; search FN parameter block variables
  8098                          
  8099  2deb  c1                J6719:  POP     BC
  8100  2dec  ed5bc6f6          J671A:  LD      DE,(STREND)
  8101  2df0  e7                        RST     DCOMPR                  ; end of arrayvariables ?
  8102  2df1  ca352e                    JP      Z,J6763                 ; yep, move topstring up when possible
  8103  2df4  7e                        LD      A,(HL)                  ; variable type
  8104  2df5  23                        INC     HL
  8105  2df6  cd0000                    CALL    C2EDF                   ; load from HL (arrayoffset and variablename)
  8106  2df9  e5                        PUSH    HL
  8107  2dfa  09                        ADD     HL,BC                   ; to next variable
  8108  2dfb  fe03                      CP      3                       ; string ?
  8109  2dfd  20ec                      JR      NZ,J6719                ; nope, next variable
  8110  2dff  229ff6                    LD      (TEMP8),HL              ; next variable
  8111  2e02  e1                        POP     HL
  8112  2e03  4e                        LD      C,(HL)
  8113  2e04  0600                      LD      B,0
  8114  2e06  09                        ADD     HL,BC
  8115  2e07  09                        ADD     HL,BC
  8116  2e08  23                        INC     HL                      ; to the first arrayelement
  8117  2e09  eb                I6737:  EX      DE,HL
  8118  2e0a  2a9ff6                    LD      HL,(TEMP8)
  8119  2e0d  eb                        EX      DE,HL
  8120  2e0e  e7                        RST     DCOMPR                  ; end of this arrayvariable ?
  8121  2e0f  28db                      JR      Z,J671A                 ; yep, next arrayvariable
  8122  2e11  01092e                    LD      BC,I6737                ; adjust if new topstring and next arrayelement
  8123  2e14  c5                J6742:  PUSH    BC
  8124                          
  8125                          ;       Subroutine      adjust if new topstring
  8126                          ;       Inputs          ________________________
  8127                          ;       Outputs         ________________________
  8128                          
  8129  2e15  af                C6743:  XOR     A
  8130  2e16  b6                        OR      (HL)                    ; empty string ?
  8131  2e17  23                        INC     HL
  8132  2e18  5e                        LD      E,(HL)
  8133  2e19  23                        INC     HL
  8134  2e1a  56                        LD      D,(HL)                  ; pointer to string
  8135  2e1b  23                        INC     HL
  8136  2e1c  c8                        RET     Z                       ; empty string, quit
  8137  2e1d  44                        LD      B,H
  8138  2e1e  4d                        LD      C,L
  8139  2e1f  2a9bf6                    LD      HL,(FRETOP)
  8140  2e22  e7                        RST     DCOMPR                  ; string above current top of heap ?
  8141  2e23  60                        LD      H,B
  8142  2e24  69                        LD      L,C
  8143  2e25  d8                        RET     C                       ; yep, quit
  8144  2e26  e1                        POP     HL
  8145  2e27  e3                        EX      (SP),HL
  8146  2e28  e7                        RST     DCOMPR                  ; string below current top string ?
  8147  2e29  e3                        EX      (SP),HL
  8148  2e2a  e5                        PUSH    HL
  8149  2e2b  60                        LD      H,B
  8150  2e2c  69                        LD      L,C
  8151  2e2d  d0                        RET     NC                      ; yep, quit
  8152  2e2e  c1                        POP     BC                      ; return address
  8153  2e2f  f1                        POP     AF
  8154  2e30  f1                        POP     AF                      ; discharge
  8155  2e31  e5                        PUSH    HL                      ; new current descriptor topstring +3
  8156  2e32  d5                        PUSH    DE                      ; new current topstring
  8157  2e33  c5                        PUSH    BC
  8158  2e34  c9                        RET
  8159                          
  8160  2e35  d1                J6763:  POP     DE
  8161  2e36  e1                        POP     HL
  8162  2e37  7c                        LD      A,H
  8163  2e38  b5                        OR      L                       ; topstring found ?
  8164  2e39  c8                        RET     Z                       ; nope, quit with garabage collect
  8165  2e3a  2b                        DEC     HL
  8166  2e3b  46                        LD      B,(HL)
  8167  2e3c  2b                        DEC     HL
  8168  2e3d  4e                        LD      C,(HL)                  ; current topstring
  8169  2e3e  e5                        PUSH    HL
  8170  2e3f  2b                        DEC     HL
  8171  2e40  6e                        LD      L,(HL)                  ; size of string
  8172  2e41  2600                      LD      H,0
  8173  2e43  09                        ADD     HL,BC
  8174  2e44  50                        LD      D,B
  8175  2e45  59                        LD      E,C                     ; start of string
  8176  2e46  2b                        DEC     HL
  8177  2e47  44                        LD      B,H
  8178  2e48  4d                        LD      C,L                     ; end of string
  8179  2e49  2a9bf6                    LD      HL,(FRETOP)             ; top of stringspace is new end of string
  8180  2e4c  cd2529                    CALL    C6253                   ; move data
  8181  2e4f  e1                        POP     HL
  8182  2e50  71                        LD      (HL),C
  8183  2e51  23                        INC     HL
  8184  2e52  70                        LD      (HL),B                  ; new address string
  8185  2e53  60                        LD      H,B
  8186  2e54  69                        LD      L,C
  8187  2e55  2b                        DEC     HL
  8188  2e56  c38b2d                    JP      J66B9                   ; new stringheap pointer and continue garbage collect
  8189                          
  8190  2e59  c5                J6787:  PUSH    BC
  8191  2e5a  e5                        PUSH    HL
  8192  2e5b  2af8f7                    LD      HL,(DAC+2)
  8193  2e5e  e3                        EX      (SP),HL
  8194  2e5f  cd9914                    CALL    C4DC7                   ; evaluate factor
  8195  2e62  e3                        EX      (SP),HL
  8196  2e63  cd0000                    CALL    C3058                   ; check if DAC has string
  8197  2e66  7e                        LD      A,(HL)                  ; size of 1st string
  8198  2e67  e5                        PUSH    HL
  8199  2e68  2af8f7                    LD      HL,(DAC+2)
  8200  2e6b  e5                        PUSH    HL
  8201  2e6c  86                        ADD     A,(HL)                  ; + size of 2nd string
  8202  2e6d  110f00                    LD      DE,15                   ; ?? LD E,15 should be enough ??
  8203  2e70  da4107                    JP      C,J406F                 ; resulting length >255, string too long error
  8204  2e73  cdf92c                    CALL    C6627                   ; allocate temporary string for result
  8205  2e76  d1                        POP     DE
  8206  2e77  cda92e                    CALL    C67D7                   ; free temporary string (descriptor in DE) -> free 2nd string
  8207  2e7a  e3                        EX      (SP),HL
  8208  2e7b  cda82e                    CALL    C67D6                   ; free temporary string (descriptor in HL) -> free 1st string
  8209  2e7e  e5                        PUSH    HL
  8210  2e7f  2a99f6                    LD      HL,(DSCTMP+1)
  8211  2e82  eb                        EX      DE,HL
  8212  2e83  cd912e                    CALL    C67BF                   ; copy string (descriptor on stack) -> copy 1st string
  8213  2e86  cd912e                    CALL    C67BF                   ; copy string (descriptor on stack) -> copy 2nd string
  8214  2e89  214513                    LD      HL,I4C73
  8215  2e8c  e3                        EX      (SP),HL
  8216  2e8d  e5                        PUSH    HL
  8217  2e8e  c3262d                    JP      J6654                   ; push temporary descriptor to temporary desciptor heap and quit
  8218                          
  8219                          ;       Subroutine      copy string (descriptor on stack)
  8220                          ;       Inputs          string descriptor on stack, DE = destination string
  8221                          ;       Outputs         ________________________
  8222                          ;       Remark          works only if this routine is CALLed
  8223                          
  8224  2e91  e1                C67BF:  POP     HL
  8225  2e92  e3                        EX      (SP),HL                 ; get descriptor from stack
  8226  2e93  7e                        LD      A,(HL)
  8227  2e94  23                        INC     HL
  8228  2e95  4e                        LD      C,(HL)
  8229  2e96  23                        INC     HL
  8230  2e97  46                        LD      B,(HL)
  8231  2e98  6f                        LD      L,A
  8232                          
  8233                          ;       Subroutine      copy string
  8234                          ;       Inputs          L = size of string, BC = source string, DE = destination string
  8235                          ;       Outputs         ________________________
  8236                          
  8237  2e99  2c                C67C7:  INC     L
  8238  2e9a  2d                J67C8:  DEC     L
  8239  2e9b  c8                        RET     Z
  8240  2e9c  0a                        LD      A,(BC)
  8241  2e9d  12                        LD      (DE),A
  8242  2e9e  03                        INC     BC
  8243  2e9f  13                        INC     DE
  8244  2ea0  18f8                      JR      J67C8
  8245                          
  8246                          ;       Subroutine      FRESTR (free temporary string with type check)
  8247                          ;       Inputs          ________________________
  8248                          ;       Outputs         ________________________
  8249                          
  8250  2ea2  cd0000            C67D0:  CALL    C3058                   ; check if string
  8251                          
  8252                          ;       Subroutine      free temporary string in DAC
  8253                          ;       Inputs          DAC = string descriptor
  8254                          ;       Outputs         ________________________
  8255                          
  8256  2ea5  2af8f7            C67D3:  LD      HL,(DAC+2)              ; descriptor
  8257                          
  8258                          ;       Subroutine      free temporary string
  8259                          ;       Inputs          HL = string descriptor
  8260                          ;       Outputs         ________________________
  8261                          
  8262  2ea8  eb                C67D6:  EX      DE,HL
  8263                          
  8264                          ;       Subroutine      free temporary string
  8265                          ;       Inputs          DE = string descriptor
  8266                          ;       Outputs         HL = string descriptor
  8267                          
  8268  2ea9  cdc02e            C67D7:  CALL    C67EE                   ; free descriptor if temporary and on top of heap
  8269  2eac  eb                        EX      DE,HL
  8270  2ead  c0                        RET     NZ                      ; no temporary descriptor on top of heap, quit
  8271  2eae  d5                        PUSH    DE
  8272  2eaf  50                        LD      D,B
  8273  2eb0  59                        LD      E,C
  8274  2eb1  1b                        DEC     DE
  8275  2eb2  4e                        LD      C,(HL)                  ; size of string
  8276  2eb3  2a9bf6                    LD      HL,(FRETOP)
  8277  2eb6  e7                        RST     DCOMPR                  ; on top of string heap ?
  8278  2eb7  2005                      JR      NZ,J67EC                ; nope, quit
  8279  2eb9  47                        LD      B,A
  8280  2eba  09                        ADD     HL,BC
  8281  2ebb  229bf6                    LD      (FRETOP),HL             ; release string from heap
  8282  2ebe  e1                J67EC:  POP     HL
  8283  2ebf  c9                        RET
  8284                          
  8285                          ;       Subroutine      free descriptor if temporary and on top of heap
  8286                          ;       Inputs          DE = descriptor
  8287                          ;       Outputs         ________________________
  8288                          
  8289  2ec0  cd9dff            C67EE:  CALL    H_FRET
  8290  2ec3  2a78f6                    LD      HL,(TEMPPT)
  8291  2ec6  2b                        DEC     HL
  8292  2ec7  46                        LD      B,(HL)
  8293  2ec8  2b                        DEC     HL
  8294  2ec9  4e                        LD      C,(HL)                  ; pointer to string
  8295  2eca  2b                        DEC     HL
  8296  2ecb  e7                        RST     DCOMPR                  ; desciptor on top of the heap ?
  8297  2ecc  c0                        RET     NZ                      ; nope, quit
  8298  2ecd  2278f6                    LD      (TEMPPT),HL             ; release descriptor from heap
  8299  2ed0  c9                        RET
  8300                          
  8301                          ;       Subroutine      LEN function
  8302                          ;       Inputs          ________________________
  8303                          ;       Outputs         ________________________
  8304                          
  8305  2ed1  01a116            C67FF:  LD      BC,C4FCF
  8306  2ed4  c5                        PUSH    BC                      ; after this, byte to DAC
  8307                          
  8308                          ;       Subroutine      free temporary string and get size
  8309                          ;       Inputs          ________________________
  8310                          ;       Outputs         ________________________
  8311                          
  8312  2ed5  cda22e            C6803:  CALL    C67D0                   ; free temporary string with type check
  8313  2ed8  af                        XOR     A
  8314  2ed9  57                        LD      D,A
  8315  2eda  7e                        LD      A,(HL)                  ; size of string
  8316  2edb  b7                        OR      A                       ; Zx set if empty string
  8317  2edc  c9                        RET
  8318                          
  8319                          ;       Subroutine      ASC function
  8320                          ;       Inputs          ________________________
  8321                          ;       Outputs         ________________________
  8322                          
  8323  2edd  01a116            C680B:  LD      BC,C4FCF                ; after this, byte to DAC
  8324  2ee0  c5                        PUSH    BC
  8325                          
  8326                          ;       Subroutine      free temporary string and get first character
  8327                          ;       Inputs          ________________________
  8328                          ;       Outputs         ________________________
  8329                          
  8330  2ee1  cdd52e            C680F:  CALL    C6803                   ; free temporary string and get size
  8331  2ee4  ca2c0e                    JP      Z,C475A                 ; empty string, illegal function call
  8332  2ee7  23                        INC     HL
  8333  2ee8  5e                        LD      E,(HL)
  8334  2ee9  23                        INC     HL
  8335  2eea  56                        LD      D,(HL)                  ; pointer to string
  8336  2eeb  1a                        LD      A,(DE)                  ; first character
  8337  2eec  c9                        RET
  8338                          
  8339                          ;       Subroutine      CHR$ function
  8340                          ;       Inputs          ________________________
  8341                          ;       Outputs         ________________________
  8342                          
  8343                          
  8344  2eed  cdf72c            C681B:  CALL    C6625                   ; allocate temporary string of 1 char
  8345  2ef0  cdf118                    CALL    C521F                   ; check for byte value
  8346                          
  8347                          ;       Subroutine      set first character of temporary string and put on heap
  8348                          ;       Inputs          ________________________
  8349                          ;       Outputs         ________________________
  8350                          
  8351  2ef3  2a99f6            C6821:  LD      HL,(DSCTMP+1)
  8352  2ef6  73                        LD      (HL),E
  8353  2ef7  c1                J6825:  POP     BC
  8354  2ef8  c3262d                    JP      J6654                   ; push temporary descriptor to temporary desciptor heap and quit
  8355                          
  8356                          ;       Subroutine      STRING$ function
  8357                          ;       Inputs          ________________________
  8358                          ;       Outputs         ________________________
  8359                          
  8360  2efb  d7                J6829:  RST     CHRGTR                  ; get next BASIC character
  8361  2efc  cf                        RST     SYNCHR
  8362  2efd  28                        DEFB    '('                     ; check for (
  8363  2efe  cdee18                    CALL    C521C                   ; evaluate byte operand
  8364  2f01  d5                        PUSH    DE
  8365  2f02  cf                        RST     SYNCHR
  8366  2f03  2c                        DEFB    ','                     ; check for ,
  8367  2f04  cd3613                    CALL    C4C64                   ; evaluate expression
  8368  2f07  cf                        RST     SYNCHR
  8369  2f08  29                        DEFB    ')'                     ; check for )
  8370  2f09  e3                        EX      (SP),HL
  8371  2f0a  e5                        PUSH    HL
  8372  2f0b  ef                        RST     GETYPR                  ; get DAC type
  8373  2f0c  2805                      JR      Z,J6841                 ; string,
  8374  2f0e  cdf118                    CALL    C521F                   ; check for byte value
  8375  2f11  1803                      JR      J6844
  8376                          
  8377  2f13  cde12e            J6841:  CALL    C680F                   ; free temporary string and get first character
  8378  2f16  d1                J6844:  POP     DE                      ; number of characters
  8379  2f17  cd1f2f                    CALL    C684D                   ; create string with characters and quit
  8380                          
  8381                          ;       Subroutine      SPACE$ function
  8382                          ;       Inputs          ________________________
  8383                          ;       Outputs         ________________________
  8384                          
  8385  2f1a  cdf118            C6848:  CALL    C521F                   ; check for byte value
  8386  2f1d  3e20                      LD      A,' '
  8387                          
  8388                          ;       Subroutine      create string with characters
  8389                          ;       Inputs          ________________________
  8390                          ;       Outputs         ________________________
  8391                          
  8392  2f1f  f5                C684D:  PUSH    AF
  8393  2f20  7b                        LD      A,E                     ; number of characters
  8394  2f21  cdf92c                    CALL    C6627                   ; allocate temporary string
  8395  2f24  47                        LD      B,A
  8396  2f25  f1                        POP     AF
  8397  2f26  04                        INC     B
  8398  2f27  05                        DEC     B                       ; stringsize zero ?
  8399  2f28  28cd                      JR      Z,J6825                 ; yep, temporary stringdescriptor to heap and quit
  8400  2f2a  2a99f6                    LD      HL,(DSCTMP+1)           ; pointer to temporary string
  8401  2f2d  77                J685B:  LD      (HL),A
  8402  2f2e  23                        INC     HL
  8403  2f2f  10fc                      DJNZ    J685B                   ; fill string
  8404  2f31  18c4                      JR      J6825                   ; temporary stringdescriptor to heap and quit
  8405                          
  8406                          ;       Subroutine      LEFT$ function
  8407                          ;       Inputs          ________________________
  8408                          ;       Outputs         ________________________
  8409                          
  8410  2f33  cdb52f            C6861:  CALL    C68E3
  8411  2f36  af                        XOR     A
  8412  2f37  e3                J6865:  EX      (SP),HL
  8413  2f38  4f                        LD      C,A
  8414  2f39  3e                        DEFB    $3E                    ; LD A,xx (to skip next statement)
  8415  2f3a  e5                C6868:  PUSH    HL
  8416  2f3b  e5                I6869:  PUSH    HL
  8417  2f3c  7e                        LD      A,(HL)
  8418  2f3d  b8                        CP      B
  8419  2f3e  3802                      JR      C,J6870
  8420  2f40  78                        LD      A,B
  8421  2f41  11                        DEFB    $11                    ; LD DE,xxxx (to skip next statement)
  8422  2f42  0e00              J6870:  LD      C,0
  8423  2f44  c5                        PUSH    BC
  8424  2f45  cd602d                    CALL    C668E                   ; allocate stringspace
  8425  2f48  c1                        POP     BC
  8426  2f49  e1                        POP     HL
  8427  2f4a  e5                        PUSH    HL
  8428  2f4b  23                        INC     HL
  8429  2f4c  46                        LD      B,(HL)
  8430  2f4d  23                        INC     HL
  8431  2f4e  66                        LD      H,(HL)
  8432  2f4f  68                        LD      L,B
  8433  2f50  0600                      LD      B,$0
  8434  2f52  09                        ADD     HL,BC
  8435  2f53  44                        LD      B,H
  8436  2f54  4d                        LD      C,L
  8437  2f55  cdfc2c                    CALL    C662A                   ; make temporary stringdescriptor
  8438  2f58  6f                        LD      L,A
  8439  2f59  cd992e                    CALL    C67C7                   ; copy string
  8440  2f5c  d1                        POP     DE
  8441  2f5d  cda92e                    CALL    C67D7                   ; free temporary string (descriptor in DE)
  8442  2f60  c3262d                    JP      J6654                   ; push temporary descriptor to temporary desciptor heap and quit
  8443                          
  8444                          ;       Subroutine      RIGHT$ function
  8445                          ;       Inputs          ________________________
  8446                          ;       Outputs         ________________________
  8447                          
  8448  2f63  cdb52f            C6891:  CALL    C68E3
  8449  2f66  d1                        POP     DE
  8450  2f67  d5                        PUSH    DE
  8451  2f68  1a                        LD      A,(DE)
  8452  2f69  90                        SUB     B
  8453  2f6a  18cb                      JR      J6865
  8454                          
  8455                          ;       Subroutine      MID$ function
  8456                          ;       Inputs          ________________________
  8457                          ;       Outputs         ________________________
  8458                          
  8459  2f6c  eb                C689A:  EX      DE,HL
  8460  2f6d  7e                        LD      A,(HL)
  8461  2f6e  cdb82f                    CALL    C68E6
  8462  2f71  04                        INC     B
  8463  2f72  05                        DEC     B
  8464  2f73  ca2c0e                    JP      Z,C475A                 ; illegal function call
  8465  2f76  c5                        PUSH    BC
  8466  2f77  cdb630                    CALL    C69E4
  8467  2f7a  f1                        POP     AF
  8468  2f7b  e3                        EX      (SP),HL
  8469  2f7c  013b2f                    LD      BC,I6869
  8470  2f7f  c5                        PUSH    BC
  8471  2f80  3d                        DEC     A
  8472  2f81  be                        CP      (HL)
  8473  2f82  0600                      LD      B,$0
  8474  2f84  d0                        RET     NC
  8475  2f85  4f                        LD      C,A
  8476  2f86  7e                        LD      A,(HL)
  8477  2f87  91                        SUB     C
  8478  2f88  bb                        CP      E
  8479  2f89  47                        LD      B,A
  8480  2f8a  d8                        RET     C
  8481  2f8b  43                        LD      B,E
  8482  2f8c  c9                        RET
  8483                          
  8484                          ;       Subroutine      VAL function
  8485                          ;       Inputs          ________________________
  8486                          ;       Outputs         ________________________
  8487                          
  8488  2f8d  cdd52e            C68BB:  CALL    C6803                   ; free temporary string and get size
  8489  2f90  caa116                    JP      Z,C4FCF                 ; empty string, byte (size) to DAC
  8490  2f93  5f                        LD      E,A
  8491  2f94  23                        INC     HL
  8492  2f95  7e                        LD      A,(HL)
  8493  2f96  23                        INC     HL
  8494  2f97  66                        LD      H,(HL)
  8495  2f98  6f                        LD      L,A
  8496  2f99  e5                        PUSH    HL
  8497  2f9a  19                        ADD     HL,DE
  8498  2f9b  46                        LD      B,(HL)
  8499  2f9c  2219f4                    LD      (VLZADR),HL
  8500  2f9f  78                        LD      A,B
  8501  2fa0  321bf4                    LD      (VLZDAT),A
  8502  2fa3  72                        LD      (HL),D
  8503  2fa4  e3                        EX      (SP),HL
  8504  2fa5  c5                        PUSH    BC
  8505  2fa6  2b                        DEC     HL
  8506  2fa7  d7                        RST     CHRGTR                  ; get next BASIC character
  8507  2fa8  cd0000                    CALL    C3299                   ; convert text to number
  8508  2fab  210000                    LD      HL,0
  8509  2fae  2219f4                    LD      (VLZADR),HL
  8510  2fb1  c1                        POP     BC
  8511  2fb2  e1                        POP     HL
  8512  2fb3  70                        LD      (HL),B
  8513  2fb4  c9                        RET
  8514                          
  8515                          
  8516                          ;       Subroutine      __________________________
  8517                          ;       Inputs          ________________________
  8518                          ;       Outputs         ________________________
  8519                          
  8520                          
  8521  2fb5  eb                C68E3:  EX      DE,HL
  8522  2fb6  cf                        RST     SYNCHR
  8523  2fb7  29                        DEFB    ')'                     ; check for )
  8524                          
  8525                          ;       Subroutine      __________________________
  8526                          ;       Inputs          ________________________
  8527                          ;       Outputs         ________________________
  8528                          
  8529  2fb8  c1                C68E6:  POP     BC
  8530  2fb9  d1                        POP     DE
  8531  2fba  c5                        PUSH    BC
  8532  2fbb  43                        LD      B,E
  8533  2fbc  c9                        RET
  8534                          
  8535                          ;       Subroutine      INSTR function
  8536                          ;       Inputs          ________________________
  8537                          ;       Outputs         ________________________
  8538                          
  8539  2fbd  d7                J68EB:  RST     CHRGTR                  ; get next BASIC character
  8540  2fbe  cd3413                    CALL    C4C62                   ; evaluate ( expression
  8541  2fc1  ef                        RST     GETYPR                  ; get DAC type
  8542  2fc2  3e01                      LD      A,1
  8543  2fc4  f5                        PUSH    AF
  8544  2fc5  2811                      JR      Z,J6906                 ; string,
  8545  2fc7  f1                        POP     AF
  8546  2fc8  cdf118                    CALL    C521F                   ; check for byte value
  8547  2fcb  b7                        OR      A
  8548  2fcc  ca2c0e                    JP      Z,C475A                 ; illegal function call
  8549  2fcf  f5                        PUSH    AF
  8550  2fd0  cf                        RST     SYNCHR
  8551  2fd1  2c                        DEFB    ','                     ; check for ,
  8552  2fd2  cd3613                    CALL    C4C64                   ; evaluate expression
  8553  2fd5  cd0000                    CALL    C3058                   ; check if string
  8554  2fd8  cf                J6906:  RST     SYNCHR
  8555  2fd9  2c                        DEFB    ','                     ; check for ,
  8556  2fda  e5                        PUSH    HL
  8557  2fdb  2af8f7                    LD      HL,(DAC+2)
  8558  2fde  e3                        EX      (SP),HL
  8559  2fdf  cd3613                    CALL    C4C64                   ; evaluate expression
  8560  2fe2  cf                        RST     SYNCHR
  8561  2fe3  29                        DEFB    ')'                     ; check for )
  8562  2fe4  e5                        PUSH    HL
  8563  2fe5  cda22e                    CALL    C67D0                   ; free temporary string with type check
  8564  2fe8  eb                        EX      DE,HL
  8565  2fe9  c1                        POP     BC
  8566  2fea  e1                        POP     HL
  8567  2feb  f1                        POP     AF
  8568  2fec  c5                        PUSH    BC
  8569  2fed  010000                    LD      BC,J3297
  8570  2ff0  c5                        PUSH    BC
  8571  2ff1  01a116                    LD      BC,C4FCF
  8572  2ff4  c5                        PUSH    BC                      ; after this, byte to DAC
  8573  2ff5  f5                        PUSH    AF
  8574  2ff6  d5                        PUSH    DE
  8575  2ff7  cda82e                    CALL    C67D6                   ; free temporary string (descriptor in HL)
  8576  2ffa  d1                        POP     DE
  8577  2ffb  f1                        POP     AF
  8578  2ffc  47                        LD      B,A
  8579  2ffd  3d                        DEC     A
  8580  2ffe  4f                        LD      C,A
  8581  2fff  be                        CP      (HL)
  8582  3000  3e00                      LD      A,0
  8583  3002  d0                        RET     NC
  8584  3003  1a                        LD      A,(DE)
  8585  3004  b7                        OR      A
  8586  3005  78                        LD      A,B
  8587  3006  c8                        RET     Z
  8588  3007  7e                        LD      A,(HL)
  8589  3008  23                        INC     HL
  8590  3009  46                        LD      B,(HL)
  8591  300a  23                        INC     HL
  8592  300b  66                        LD      H,(HL)
  8593  300c  68                        LD      L,B
  8594  300d  0600                      LD      B,0
  8595  300f  09                        ADD     HL,BC
  8596  3010  91                J693E:  SUB     C
  8597  3011  47                        LD      B,A
  8598  3012  c5                        PUSH    BC
  8599  3013  d5                        PUSH    DE
  8600  3014  e3                        EX      (SP),HL
  8601  3015  4e                        LD      C,(HL)
  8602  3016  23                        INC     HL
  8603  3017  5e                        LD      E,(HL)
  8604  3018  23                        INC     HL
  8605  3019  56                        LD      D,(HL)
  8606  301a  e1                        POP     HL
  8607  301b  e5                J6949:  PUSH    HL
  8608  301c  d5                        PUSH    DE
  8609  301d  c5                        PUSH    BC
  8610  301e  1a                J694C:  LD      A,(DE)
  8611  301f  be                        CP      (HL)
  8612  3020  2016                      JR      NZ,J6966
  8613  3022  13                        INC     DE
  8614  3023  0d                        DEC     C
  8615  3024  2809                      JR      Z,J695D
  8616  3026  23                        INC     HL
  8617  3027  10f5                      DJNZ    J694C
  8618  3029  d1                        POP     DE
  8619  302a  d1                        POP     DE
  8620  302b  c1                        POP     BC
  8621  302c  d1                J695A:  POP     DE
  8622  302d  af                        XOR     A
  8623  302e  c9                        RET
  8624                          
  8625  302f  e1                J695D:  POP     HL
  8626  3030  d1                        POP     DE
  8627  3031  d1                        POP     DE
  8628  3032  c1                        POP     BC
  8629  3033  78                        LD      A,B
  8630  3034  94                        SUB     H
  8631  3035  81                        ADD     A,C
  8632  3036  3c                        INC     A
  8633  3037  c9                        RET
  8634                          
  8635  3038  c1                J6966:  POP     BC
  8636  3039  d1                        POP     DE
  8637  303a  e1                        POP     HL
  8638  303b  23                        INC     HL
  8639  303c  10dd                      DJNZ    J6949
  8640  303e  18ec                      JR      J695A
  8641                          
  8642                          ;       Subroutine      MID$ statement
  8643                          ;       Inputs          ________________________
  8644                          ;       Outputs         ________________________
  8645                          
  8646  3040  cf                J696E:  RST     SYNCHR
  8647  3041  28                        DEFB    '('                     ; check for (
  8648  3042  cd7625                    CALL    C5EA4                   ; locate variable
  8649  3045  cd0000                    CALL    C3058                   ; check if string
  8650  3048  e5                        PUSH    HL
  8651  3049  d5                        PUSH    DE
  8652  304a  eb                        EX      DE,HL
  8653  304b  23                        INC     HL
  8654  304c  5e                        LD      E,(HL)
  8655  304d  23                        INC     HL
  8656  304e  56                        LD      D,(HL)
  8657  304f  2ac6f6                    LD      HL,(STREND)
  8658  3052  e7                        RST     DCOMPR
  8659  3053  3810                      JR      C,J6993
  8660  3055  2a76f6                    LD      HL,(TXTTAB)
  8661  3058  e7                        RST     DCOMPR
  8662  3059  300a                      JR      NC,J6993
  8663  305b  e1                        POP     HL
  8664  305c  e5                        PUSH    HL
  8665  305d  cde32c                    CALL    C6611                   ; copy string to new temporary string
  8666  3060  e1                        POP     HL
  8667  3061  e5                        PUSH    HL
  8668  3062  cd0000                    CALL    C2EF3                   ; HL = DE (valtyp)
  8669  3065  e1                J6993:  POP     HL
  8670  3066  e3                        EX      (SP),HL
  8671  3067  cf                        RST     SYNCHR
  8672  3068  2c                        DEFB    ','                     ; check for ,
  8673  3069  cdee18                    CALL    C521C                   ; evaluate byte operand
  8674  306c  b7                        OR      A                       ; startpos 0 ?
  8675  306d  ca2c0e                    JP      Z,C475A                 ; yep, illegal function call
  8676  3070  f5                        PUSH    AF
  8677  3071  7e                        LD      A,(HL)
  8678  3072  cdb630                    CALL    C69E4
  8679  3075  d5                        PUSH    DE
  8680  3076  cd3113                    CALL    C4C5F                   ; evaluate = expression
  8681  3079  e5                        PUSH    HL
  8682  307a  cda22e                    CALL    C67D0                   ; free temporary string with type check
  8683  307d  eb                        EX      DE,HL
  8684  307e  e1                        POP     HL
  8685  307f  c1                        POP     BC
  8686  3080  f1                        POP     AF
  8687  3081  47                        LD      B,A
  8688  3082  e3                        EX      (SP),HL
  8689  3083  e5                        PUSH    HL
  8690  3084  210000                    LD      HL,J3297
  8691  3087  e3                        EX      (SP),HL
  8692  3088  79                        LD      A,C
  8693  3089  b7                        OR      A
  8694  308a  c8                        RET     Z
  8695  308b  7e                        LD      A,(HL)
  8696  308c  90                        SUB     B
  8697  308d  da2c0e                    JP      C,C475A                 ; illegal function call
  8698  3090  3c                        INC     A
  8699  3091  b9                        CP      C
  8700  3092  3801                      JR      C,J69C3
  8701  3094  79                        LD      A,C
  8702  3095  48                J69C3:  LD      C,B
  8703  3096  0d                        DEC     C
  8704  3097  0600                      LD      B,$0
  8705  3099  d5                        PUSH    DE
  8706  309a  23                        INC     HL
  8707  309b  5e                        LD      E,(HL)
  8708  309c  23                        INC     HL
  8709  309d  66                        LD      H,(HL)
  8710  309e  6b                        LD      L,E
  8711  309f  09                        ADD     HL,BC
  8712  30a0  47                        LD      B,A
  8713  30a1  d1                        POP     DE
  8714  30a2  eb                        EX      DE,HL
  8715  30a3  4e                        LD      C,(HL)
  8716  30a4  23                        INC     HL
  8717  30a5  7e                        LD      A,(HL)
  8718  30a6  23                        INC     HL
  8719  30a7  66                        LD      H,(HL)
  8720  30a8  6f                        LD      L,A
  8721  30a9  eb                        EX      DE,HL
  8722  30aa  79                        LD      A,C
  8723  30ab  b7                        OR      A
  8724  30ac  c8                        RET     Z
  8725  30ad  1a                J69DB:  LD      A,(DE)
  8726  30ae  77                        LD      (HL),A
  8727  30af  13                        INC     DE
  8728  30b0  23                        INC     HL
  8729  30b1  0d                        DEC     C
  8730  30b2  c8                        RET     Z
  8731  30b3  10f8                      DJNZ    J69DB
  8732  30b5  c9                        RET
  8733                          
  8734                          ;       Subroutine      __________________________
  8735                          ;       Inputs          ________________________
  8736                          ;       Outputs         ________________________
  8737                          
  8738  30b6  1eff              C69E4:  LD      E,$FF
  8739  30b8  fe29                      CP      ')'
  8740  30ba  2805                      JR      Z,J69EF
  8741  30bc  cf                        RST     SYNCHR
  8742  30bd  2c                        DEFB    ','                     ; check for ,
  8743  30be  cdee18                    CALL    C521C                   ; evaluate byte operand
  8744  30c1  cf                J69EF:  RST     SYNCHR
  8745  30c2  29                        DEFB    ')'                     ; check for )
  8746  30c3  c9                        RET
  8747                          
  8748                          ;       Subroutine      FRE function
  8749                          ;       Inputs          ________________________
  8750                          ;       Outputs         ________________________
  8751                          
  8752  30c4  2ac6f6            C69F2:  LD      HL,(STREND)
  8753  30c7  eb                        EX      DE,HL
  8754  30c8  210000                    LD      HL,0
  8755  30cb  39                        ADD     HL,SP
  8756  30cc  ef                        RST     GETYPR                  ; get DAC type
  8757  30cd  c29316                    JP      NZ,J4FC1                ; not a string,
  8758  30d0  cda52e                    CALL    C67D3                   ; free temporary string in DAC
  8759  30d3  cd882d                    CALL    C66B6                   ; garbage collect
  8760  30d6  ed5b74f6                  LD      DE,(STKTOP)
  8761  30da  2a9bf6                    LD      HL,(FRETOP)
  8762  30dd  c39316                    JP      J4FC1
  8763                          
  8764                          ;       Subroutine      evaluate filespecification
  8765                          ;       Inputs          ________________________
  8766                          ;       Outputs         ________________________
  8767                          
  8768  30e0  cd3613            C6A0E:  CALL    C4C64                   ; evaluate expression
  8769  30e3  e5                        PUSH    HL
  8770  30e4  cda22e                    CALL    C67D0                   ; free temporary string with type check
  8771  30e7  7e                        LD      A,(HL)
  8772  30e8  b7                        OR      A                       ; stringsize zero ?
  8773  30e9  282e                      JR      Z,J6A47                 ; yep, bad filename error
  8774  30eb  23                        INC     HL
  8775  30ec  5e                        LD      E,(HL)
  8776  30ed  23                        INC     HL
  8777  30ee  66                        LD      H,(HL)
  8778  30ef  6b                        LD      L,E                     ; pointer to string
  8779  30f0  5f                        LD      E,A                     ; size of string
  8780  30f1  cde735                    CALL    C6F15                   ; parse devicename
  8781  30f4  f5                        PUSH    AF                      ; save devicecode
  8782  30f5  0166f8                    LD      BC,FILNAM
  8783  30f8  160b                      LD      D,11
  8784  30fa  1c                        INC     E
  8785  30fb  1d                J6A29:  DEC     E                       ; end of filespecification string ?
  8786  30fc  2835                      JR      Z,J6A61                 ; yep, fill remaining FILNAME with spaces
  8787  30fe  7e                        LD      A,(HL)
  8788  30ff  fe20                      CP      $20                     ; control characters ?
  8789  3101  3816                      JR      C,J6A47                 ; yep, bad filename error
  8790  3103  fe2e                      CP      '.'                     ; filename/extension seperator ?
  8791  3105  2818                      JR      Z,J6A4D                 ; yep, handle extension
  8792  3107  02                        LD      (BC),A
  8793  3108  03                        INC     BC
  8794  3109  23                        INC     HL
  8795  310a  15                        DEC     D                       ; FILNAM full ?
  8796  310b  20ee                      JR      NZ,J6A29                ; nope, next
  8797  310d  f1                J6A3B:  POP     AF
  8798  310e  f5                        PUSH    AF
  8799  310f  57                        LD      D,A                     ; devicecode
  8800  3110  3a66f8                    LD      A,(FILNAM+0)
  8801  3113  3c                        INC     A                       ; first character FILNAME charactercode 255 ?
  8802  3114  2803                      JR      Z,J6A47                 ; yep, bad filename error (because this is internally used as runflag)
  8803  3116  f1                        POP     AF
  8804  3117  e1                        POP     HL
  8805  3118  c9                        RET
  8806                          
  8807  3119  c33d35            J6A47:  JP      J6E6B                   ; bad filename
  8808                          
  8809  311c  23                J6A4A:  INC     HL
  8810  311d  18dc                      JR      J6A29
  8811                          
  8812  311f  7a                J6A4D:  LD      A,D
  8813  3120  fe0b                      CP      $B
  8814  3122  ca1931                    JP      Z,J6A47
  8815  3125  fe03                      CP      $3
  8816  3127  da1931                    JP      C,J6A47
  8817  312a  28f0                      JR      Z,J6A4A
  8818  312c  3e20                      LD      A,$20
  8819  312e  02                        LD      (BC),A
  8820  312f  03                        INC     BC
  8821  3130  15                        DEC     D
  8822  3131  18ec                      JR      J6A4D
  8823                          
  8824  3133  3e20              J6A61:  LD      A,' '
  8825  3135  02                        LD      (BC),A
  8826  3136  03                        INC     BC
  8827  3137  15                        DEC     D
  8828  3138  20f9                      JR      NZ,J6A61
  8829  313a  18d1                      JR      J6A3B
  8830                          
  8831                          ;       Subroutine      get i/o channel control block (DAC)
  8832                          ;       Inputs          (DAC) = i/o channel number
  8833                          ;       Outputs         ________________________
  8834                          
  8835  313c  cdf118            C6A6A:  CALL    C521F                   ; check for byte value
  8836                          
  8837                          ;       Subroutine      get i/o channel control block
  8838                          ;       Inputs          A = i/o channel number
  8839                          ;       Outputs         ________________________
  8840                          
  8841  313f  6f                C6A6D:  LD      L,A
  8842  3140  3a5ff8                    LD      A,(MAXFIL)
  8843  3143  bd                        CP      L
  8844  3144  da4f35                    JP      C,J6E7D                 ; bad filenumber
  8845  3147  2600                      LD      H,0
  8846  3149  29                        ADD     HL,HL
  8847  314a  eb                        EX      DE,HL
  8848  314b  2a60f8                    LD      HL,(FILTAB)
  8849  314e  19                        ADD     HL,DE
  8850  314f  7e                        LD      A,(HL)
  8851  3150  23                        INC     HL
  8852  3151  66                        LD      H,(HL)
  8853  3152  6f                        LD      L,A
  8854  3153  3a7cf8                    LD      A,(NLONLY)
  8855  3156  3c                        INC     A                       ; NLONLY $FF ?
  8856  3157  c8                        RET     Z                       ; yep, quit
  8857  3158  7e                        LD      A,(HL)
  8858  3159  b7                        OR      A                       ; i/o channel open ?
  8859  315a  c8                        RET     Z                       ; nope, quit
  8860  315b  e5                        PUSH    HL
  8861  315c  110400                    LD      DE,4
  8862  315f  19                        ADD     HL,DE
  8863  3160  7e                        LD      A,(HL)
  8864  3161  fe09                      CP      9                       ; device i/o channel a diskdrive ?
  8865  3163  3006                      JR      NC,J6A99                ; nope, not a diskdrive device
  8866  3165  cd4efe                    CALL    H_GETP                  ; hook for disk
  8867  3168  c35235                    JP      J6E80                   ; internal error (should not return to here)
  8868                          
  8869  316b  e1                J6A99:  POP     HL
  8870  316c  7e                        LD      A,(HL)
  8871  316d  b7                        OR      A
  8872  316e  37                        SCF
  8873  316f  c9                        RET
  8874                          
  8875                          
  8876                          ;       Subroutine      __________________________
  8877                          ;       Inputs          ________________________
  8878                          ;       Outputs         ________________________
  8879                          
  8880  3170  2b                C6A9E:  DEC     HL
  8881  3171  d7                        RST     CHRGTR                  ; get next BASIC character
  8882  3172  fe23                      CP      '#'
  8883  3174  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  8884  3177  cdee18                    CALL    C521C                   ; evaluate byte operand
  8885  317a  e3                        EX      (SP),HL
  8886  317b  e5                        PUSH    HL
  8887                          
  8888                          ;       Subroutine      redirect interpreter input/output to file
  8889                          ;       Inputs          ________________________
  8890                          ;       Outputs         ________________________
  8891                          
  8892  317c  cd3f31            C6AAA:  CALL    C6A6D                   ; get i/o channel control block
  8893  317f  ca4935                    JP      Z,J6E77                 ; i/o channel not open, file not open error
  8894  3182  2264f8                    LD      (PTRFIL),HL             ; interpreter input/output device = i/o channel
  8895  3185  cd53fe                    CALL    H_SETF
  8896  3188  c9                        RET
  8897                          
  8898                          ;       Subroutine      OPEN statement
  8899                          ;       Inputs          ________________________
  8900                          ;       Outputs         ________________________
  8901                          
  8902  3189  01d111            C6AB7:  LD      BC,C4AFF
  8903  318c  c5                        PUSH    BC
  8904  318d  cde030                    CALL    C6A0E                   ; evaluate filespecification
  8905  3190  7e                        LD      A,(HL)
  8906  3191  fe82                      CP      $82                     ; FOR token ?
  8907  3193  1e04                      LD      E,4                     ; random file mode
  8908  3195  201f                      JR      NZ,J6AE4                ; nope, open in random mode
  8909  3197  d7                        RST     CHRGTR                  ; get next BASIC character
  8910  3198  fe85                      CP      $85                     ; INPUT token ?
  8911  319a  1e01                      LD      E,1                     ; input file mode
  8912  319c  2817                      JR      Z,J6AE3                 ; yep, open in input mode
  8913  319e  fe9c                      CP      $9C                     ; OUT token ?
  8914  31a0  280c                      JR      Z,J6ADC                 ; yep, may be OUTPUT
  8915  31a2  cf                        RST     SYNCHR
  8916  31a3  41                        DEFB    'A'
  8917  31a4  cf                        RST     SYNCHR
  8918  31a5  50                        DEFB    'P'
  8919  31a6  cf                        RST     SYNCHR
  8920  31a7  50                        DEFB    'P'
  8921  31a8  cf                        RST     SYNCHR
  8922  31a9  81                        DEFB    $81                    ; check for APPEND
  8923  31aa  1e08                      LD      E,8                     ; append file mode
  8924  31ac  1808                      JR      J6AE4                   ; open in append mode
  8925                          
  8926  31ae  d7                J6ADC:  RST     CHRGTR                  ; get next BASIC character
  8927  31af  cf                        RST     SYNCHR
  8928  31b0  b3                        DEFB    $B3                    ; check for PUT token
  8929  31b1  1e02                      LD      E,2                     ; output file mode
  8930  31b3  1801                      JR      J6AE4                   ; open in output mode
  8931                          
  8932  31b5  d7                J6AE3:  RST     CHRGTR                  ; get next BASIC character
  8933  31b6  cf                J6AE4:  RST     SYNCHR
  8934  31b7  41                        DEFB    'A'
  8935  31b8  cf                        RST     SYNCHR
  8936  31b9  53                        DEFB    'S'                     ; check for AS
  8937  31ba  d5                        PUSH    DE
  8938  31bb  7e                        LD      A,(HL)
  8939  31bc  fe23                      CP      '#'
  8940  31be  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  8941  31c1  cdee18                    CALL    C521C                   ; evaluate byte operand
  8942  31c4  b7                        OR      A                       ; i/o channel 0 ?
  8943  31c5  ca4f35                    JP      Z,J6E7D                 ; yep, bad filenumber
  8944  31c8  cd58fe                    CALL    H_NOFO                  ; open statement extension hook
  8945  31cb  1e                        DEFB    $1E                    ; LD E,xx, skip next instruction
  8946                          
  8947                          ;       Subroutine      open i/o channel
  8948                          ;       Inputs          A = i/o channel number, E = filemode
  8949                          ;       Outputs         ________________________
  8950                          
  8951  31cc  d5                C6AFA:  PUSH    DE
  8952  31cd  2b                        DEC     HL
  8953  31ce  5f                        LD      E,A
  8954  31cf  d7                        RST     CHRGTR                  ; end of statement ?
  8955  31d0  c22707                    JP      NZ,J4055                ; nope, syntax error
  8956  31d3  e3                        EX      (SP),HL
  8957  31d4  7b                        LD      A,E
  8958  31d5  f5                        PUSH    AF
  8959  31d6  e5                        PUSH    HL
  8960  31d7  cd3f31                    CALL    C6A6D                   ; get i/o channel control block
  8961  31da  c24035                    JP      NZ,J6E6E                ; i/o channel already open, file already open
  8962  31dd  d1                        POP     DE
  8963  31de  7a                        LD      A,D
  8964  31df  fe09                      CP      9                       ; diskdrive device ?
  8965  31e1  cd5dfe                    CALL    H_NULO                  ; open for disk hook
  8966  31e4  da5235                    JP      C,J6E80                 ; internal error
  8967  31e7  e5                        PUSH    HL
  8968  31e8  010400                    LD      BC,4
  8969  31eb  09                        ADD     HL,BC
  8970  31ec  72                        LD      (HL),D
  8971  31ed  3e00                      LD      A,0                     ; function open
  8972  31ef  e1                        POP     HL
  8973  31f0  cd6136                    CALL    C6F8F                   ; i/o function dispatcher
  8974  31f3  f1                        POP     AF
  8975  31f4  e1                        POP     HL
  8976  31f5  c9                        RET
  8977                          
  8978                          ;       Subroutine      close i/o channel
  8979                          ;       Inputs          A = i/o channel number
  8980                          ;       Outputs         ________________________
  8981                          
  8982  31f6  e5                C6B24:  PUSH    HL
  8983  31f7  b7                        OR      A                       ; i/o channel 0 ?
  8984  31f8  2008                      JR      NZ,J6B30                ; nope, skip check
  8985  31fa  3a7cf8                    LD      A,(NLONLY)
  8986  31fd  e601                      AND     $1                     ; loading basic program ?
  8987  31ff  c2c533                    JP      NZ,J6CF3                ; yep, do not close i/o channel
  8988  3202  cd3f31            J6B30:  CALL    C6A6D                   ; get i/o channel control block
  8989  3205  2815                      JR      Z,J6B4A                 ; i/o channel not open,
  8990  3207  2264f8                    LD      (PTRFIL),HL             ; interpreter input/output device = i/o channel (only temporary)
  8991  320a  e5                        PUSH    HL
  8992  320b  3806                      JR      C,J6B41                 ; not a diskdrive device,
  8993  320d  cd62fe                    CALL    H_NTFL                  ; close for disk hook
  8994  3210  c35235                    JP      J6E80                   ; internal error (should not return to here)
  8995                          
  8996  3213  3e02              J6B41:  LD      A,2                     ; function close
  8997  3215  cd6136                    CALL    C6F8F                   ; i/o function dispatcher
  8998  3218  cdbc33                    CALL    C6CEA
  8999  321b  e1                        POP     HL
  9000  321c  e5                J6B4A:  PUSH    HL
  9001  321d  110700                    LD      DE,7
  9002  3220  19                        ADD     HL,DE
  9003  3221  77                        LD      (HL),A
  9004  3222  67                        LD      H,A
  9005  3223  6f                        LD      L,A
  9006  3224  2264f8                    LD      (PTRFIL),HL             ; interpreter input/output device = keyboard/screen
  9007  3227  e1                        POP     HL
  9008  3228  86                        ADD     A,(HL)
  9009  3229  3600                      LD      (HL),0
  9010  322b  e1                        POP     HL
  9011  322c  c9                        RET
  9012                          
  9013                          ;       Subroutine      RUN statement (with filespecification)
  9014                          ;       Inputs          ________________________
  9015                          ;       Outputs         ________________________
  9016                          
  9017  322d  37                J6B5B:  SCF                             ; Cx=1 (RUN flag set)
  9018  322e  11                        DEFB    $11                    ; skip to 6B5F
  9019                          
  9020                          ;       Subroutine      LOAD statement
  9021                          ;       Inputs          ________________________
  9022                          ;       Outputs         ________________________
  9023                          
  9024  322f  f6                C6B5D:  DEFB    $F6                    ; OR xx, so A<>0 and Cx=0 (RUN flag not set)
  9025                          
  9026                          ;       Subroutine      MERGE statement
  9027                          ;       Inputs          ________________________
  9028                          ;       Outputs         ________________________
  9029                          
  9030  3230  af                C6B5E:  XOR     A                       ; A=0 and Cx=0 (RUN flag not set)
  9031  3231  f5                        PUSH    AF                      ; save flags
  9032  3232  cde030                    CALL    C6A0E                   ; evaluate filespecification
  9033  3235  cd67fe                    CALL    H_MERG
  9034  3238  f1                        POP     AF
  9035  3239  f5                        PUSH    AF
  9036  323a  280c                      JR      Z,J6B76                 ; MERGE statement, no ,R option
  9037  323c  7e                        LD      A,(HL)
  9038  323d  d62c                      SUB     ','
  9039  323f  b7                        OR      A
  9040  3240  2006                      JR      NZ,J6B76                ; no ,R option
  9041  3242  d7                        RST     CHRGTR                  ; get next BASIC character
  9042  3243  cf                        RST     SYNCHR
  9043  3244  52                        DEFB    'R'                     ; check for R
  9044  3245  f1                        POP     AF
  9045  3246  37                        SCF                             ; set RUN flag
  9046  3247  f5                        PUSH    AF                      ; set do not close i/o channels flag
  9047  3248  f5                J6B76:  PUSH    AF
  9048  3249  af                        XOR     A                       ; i/o channel 0
  9049  324a  1e01                      LD      E,1                     ; input file mode
  9050  324c  cdcc31                    CALL    C6AFA                   ; open i/o channel
  9051  324f  2a64f8                    LD      HL,(PTRFIL)
  9052  3252  010700                    LD      BC,7
  9053  3255  09                        ADD     HL,BC
  9054  3256  f1                        POP     AF
  9055  3257  9f                        SBC     A,A
  9056  3258  e680                      AND     $80                     ; do not close i/o channels flag
  9057  325a  f601                      OR      $1                     ; set basic program loading flag
  9058  325c  327cf8                    LD      (NLONLY),A
  9059  325f  f1                        POP     AF
  9060  3260  f5                        PUSH    AF
  9061  3261  9f                        SBC     A,A
  9062  3262  3266f8                    LD      (FILNAM+0),A            ; $00 for LOAD only, $FF for LOAD and RUN
  9063  3265  7e                        LD      A,(HL)
  9064  3266  b7                        OR      A                       ; binairy load ?
  9065  3267  faa632                    JP      M,J6BD4                 ; yep,
  9066  326a  f1                        POP     AF
  9067  326b  c45929                    CALL    NZ,C6287                ; yep, clear basic program
  9068  326e  af                        XOR     A
  9069  326f  cd7c31                    CALL    C6AAA                   ; redirect interpreter input/output to i/o channel 0
  9070  3272  c30608                    JP      J4134                   ; mainloop
  9071                          
  9072                          ;       Subroutine      SAVE statement
  9073                          ;       Inputs          ________________________
  9074                          ;       Outputs         ________________________
  9075                          
  9076  3275  cde030            C6BA3:  CALL    C6A0E                   ; evaluate filespecification
  9077  3278  cd6cfe                    CALL    H_SAVE
  9078  327b  2b                        DEC     HL
  9079  327c  d7                        RST     CHRGTR                  ; get next BASIC character
  9080  327d  1e80                      LD      E,$80
  9081  327f  37                        SCF
  9082  3280  2807                      JR      Z,J6BB7                 ; no ,A option, use binairy save
  9083  3282  cf                        RST     SYNCHR
  9084  3283  2c                        DEFB    ','
  9085  3284  cf                        RST     SYNCHR
  9086  3285  41                        DEFB    'A'                     ; check for ,A
  9087  3286  b7                        OR      A
  9088  3287  1e02                      LD      E,2                     ; use ascii save
  9089  3289  f5                J6BB7:  PUSH    AF
  9090  328a  7a                        LD      A,D
  9091  328b  fe09                      CP      9                       ; diskdrive device ?
  9092  328d  3805                      JR      C,J6BC2                 ; yep,
  9093  328f  1e02                      LD      E,2                     ; output file mode
  9094  3291  f1                        POP     AF
  9095  3292  af                        XOR     A                       ; use ascii save
  9096  3293  f5                        PUSH    AF
  9097  3294  af                J6BC2:  XOR     A                       ; i/o channel 0
  9098  3295  cdcc31                    CALL    C6AFA                   ; open i/o channel
  9099  3298  f1                        POP     AF
  9100  3299  3805                      JR      C,J6BCE                 ; binairy save,
  9101  329b  2b                        DEC     HL
  9102  329c  d7                        RST     CHRGTR                  ; get next BASIC character
  9103  329d  c30019                    JP      C522E                   ; list statement
  9104                          
  9105  32a0  cd71fe            J6BCE:  CALL    H_BINS
  9106  32a3  c33d35                    JP      J6E6B                   ; bad filename
  9107                          
  9108  32a6  cd76fe            J6BD4:  CALL    H_BINL
  9109  32a9  c33d35                    JP      J6E6B                   ; bad filename
  9110                          
  9111                          ;       Subroutine      get i/o channel device
  9112                          ;       Inputs          (PTRFIL) = pointer to i/o channel control block
  9113                          ;       Outputs         ________________________
  9114                          ;       Unused Code
  9115                          ;       Not called from anywhere, leftover from a early Microsoft BASIC ?
  9116                          
  9117  32ac  e5                N6BDA:  PUSH    HL
  9118  32ad  d5                        PUSH    DE
  9119  32ae  2a64f8                    LD      HL,(PTRFIL)
  9120  32b1  110400                    LD      DE,4
  9121  32b4  19                        ADD     HL,DE
  9122  32b5  7e                        LD      A,(HL)
  9123  32b6  d1                        POP     DE
  9124  32b7  e1                        POP     HL
  9125  32b8  c9                        RET
  9126                          
  9127  32b9  2019              J6BE7:  JR      NZ,J6C02                ; not end of statement, evaluate channels
  9128  32bb  e5                        PUSH    HL                      ; save basic pointer
  9129  32bc  c5                J6BEA:  PUSH    BC
  9130  32bd  f5                        PUSH    AF
  9131  32be  11c532                    LD      DE,I6BF3
  9132  32c1  d5                        PUSH    DE
  9133  32c2  c5                        PUSH    BC
  9134  32c3  b7                        OR      A
  9135  32c4  c9                        RET                             ; close i/o channel
  9136                          
  9137  32c5  f1                I6BF3:  POP     AF
  9138  32c6  c1                        POP     BC
  9139  32c7  3d                        DEC     A
  9140  32c8  f2bc32                    JP      P,J6BEA                 ; next channel
  9141  32cb  e1                        POP     HL
  9142  32cc  c9                        RET
  9143                          
  9144  32cd  c1                I6BFB:  POP     BC                      ; close i/o channel routine
  9145  32ce  e1                        POP     HL                      ; basic pointer
  9146  32cf  7e                        LD      A,(HL)
  9147  32d0  fe2c                      CP      ','
  9148  32d2  c0                        RET     NZ
  9149  32d3  d7                        RST     CHRGTR                  ; get next BASIC character
  9150  32d4  c5                J6C02:  PUSH    BC
  9151  32d5  7e                        LD      A,(HL)
  9152  32d6  fe23                      CP      '#'
  9153  32d8  cc380d                    CALL    Z,C4666                 ; yep, get next BASIC character
  9154  32db  cdee18                    CALL    C521C                   ; evaluate byte operand
  9155  32de  e3                        EX      (SP),HL
  9156  32df  e5                        PUSH    HL
  9157  32e0  11cd32                    LD      DE,I6BFB
  9158  32e3  d5                        PUSH    DE
  9159  32e4  37                        SCF
  9160  32e5  e9                        JP      (HL)                    ; close i/o channel
  9161                          
  9162                          ;       Subroutine      CLOSE statement
  9163                          ;       Inputs          ________________________
  9164                          ;       Outputs         ________________________
  9165                          
  9166  32e6  01f631            C6C14:  LD      BC,C6B24                ; close i/o channel routine
  9167  32e9  3a5ff8                    LD      A,(MAXFIL)              ; default = all channels
  9168  32ec  18cb                      JR      J6BE7                   ; close i/o channel(s)
  9169                          
  9170                          ;       Subroutine      close all i/o channels
  9171                          ;       Inputs          ________________________
  9172                          ;       Outputs         ________________________
  9173                          
  9174  32ee  3a7cf8            C6C1C:  LD      A,(NLONLY)
  9175  32f1  b7                        OR      A                       ; do not close i/o channels flag set ?
  9176  32f2  f8                        RET     M                       ; yep, quit doing nothing
  9177  32f3  01f631                    LD      BC,C6B24                ; close i/o channel routine
  9178  32f6  af                        XOR     A                       ; 'end of statement' flag
  9179  32f7  3a5ff8                    LD      A,(MAXFIL)              ; all channels
  9180  32fa  18bd                      JR      J6BE7                   ; close i/o channels
  9181                          
  9182                          ;       Subroutine      LFILES statement
  9183                          ;       Inputs          ________________________
  9184                          ;       Outputs         ________________________
  9185                          
  9186  32fc  3e01              C6C2A:  LD      A,1
  9187  32fe  3216f4                    LD      (PRTFLG),A              ; interpreter output to printer
  9188                          
  9189                          ;       Subroutine      FILES statement
  9190                          ;       Inputs          ________________________
  9191                          ;       Outputs         ________________________
  9192                          
  9193  3301  cd7bfe            C6C2F:  CALL    H_FILE
  9194  3304  c32c0e                    JP      C475A                   ; illegal function call
  9195                          
  9196                          ;       Subroutine      do random input/output
  9197                          ;       Inputs          ________________________
  9198                          ;       Outputs         ________________________
  9199                          
  9200  3307  f5                J6C35:  PUSH    AF
  9201  3308  cd7031                    CALL    C6A9E
  9202  330b  3806                      JR      C,J6C41
  9203  330d  cd80fe                    CALL    H_DGET
  9204  3310  c33d35                    JP      J6E6B                   ; bad filename
  9205                          
  9206  3313  d1                J6C41:  POP     DE
  9207  3314  c1                        POP     BC
  9208  3315  3e04                      LD      A,4                     ; function random i/o
  9209  3317  c36136                    JP      C6F8F                   ; i/o function dispatcher
  9210                          
  9211                          ;       Subroutine      do sequential output
  9212                          ;       Inputs          ________________________
  9213                          ;       Outputs         ________________________
  9214                          
  9215  331a  e5                C6C48:  PUSH    HL
  9216  331b  d5                        PUSH    DE
  9217  331c  c5                        PUSH    BC
  9218  331d  f5                        PUSH    AF
  9219  331e  cd3433                    CALL    C6C62                   ; current i/o channel a diskdrive device ?
  9220  3321  3006                      JR      NC,J6C57                ; nope,
  9221  3323  cd85fe                    CALL    H_FILO                  ; sequential ouput for disk hook
  9222  3326  c33d35                    JP      J6E6B                   ; bad filename
  9223                          
  9224  3329  f1                J6C57:  POP     AF
  9225  332a  f5                        PUSH    AF
  9226  332b  4f                        LD      C,A
  9227  332c  3e06                      LD      A,6                     ; function sequential output
  9228  332e  cd6136                    CALL    C6F8F                   ; i/o function dispatcher
  9229  3331  c3d139                    JP      J72FF
  9230                          
  9231                          ;       Subroutine      current i/o channel a diskdrive device ?
  9232                          ;       Inputs          ________________________
  9233                          ;       Outputs         ________________________
  9234                          
  9235  3334  d5                C6C62:  PUSH    DE
  9236  3335  2a64f8                    LD      HL,(PTRFIL)
  9237  3338  eb                        EX      DE,HL
  9238  3339  210400                    LD      HL,4
  9239  333c  19                        ADD     HL,DE
  9240  333d  7e                        LD      A,(HL)
  9241  333e  eb                        EX      DE,HL
  9242  333f  d1                        POP     DE
  9243  3340  fe09                      CP      9
  9244  3342  c9                        RET
  9245                          
  9246                          ;       Subroutine      get sequential input
  9247                          ;       Inputs          ________________________
  9248                          ;       Outputs         ________________________
  9249                          
  9250  3343  e5                C6C71:  PUSH    HL
  9251  3344  d5                J6C72:  PUSH    DE
  9252  3345  c5                        PUSH    BC
  9253  3346  cd3433                    CALL    C6C62                   ; current i/o channel a diskdrive device ?
  9254  3349  3006                      JR      NC,J6C7F                ; nope,
  9255  334b  cd8afe            I6C79:  CALL    H_INDS                  ; sequential input for disk hook
  9256  334e  c35235                    JP      J6E80                   ; internal error (should not return to here)
  9257                          
  9258  3351  3e08              J6C7F:  LD      A,8                     ; function sequential input
  9259  3353  cd6136                    CALL    C6F8F                   ; i/o function dispatcher
  9260  3356  c3d239                    JP      J7300
  9261                          
  9262                          ;       Subroutine      INPUT$ function
  9263                          ;       Inputs          ________________________
  9264                          ;       Outputs         ________________________
  9265                          
  9266  3359  d7                J6C87:  RST     CHRGTR                  ; get next BASIC character
  9267  335a  cf                        RST     SYNCHR
  9268  335b  24                        DEFB    '$'
  9269  335c  cf                        RST     SYNCHR
  9270  335d  28                        DEFB    '('                     ; check for $(
  9271  335e  e5                        PUSH    HL
  9272  335f  2a64f8                    LD      HL,(PTRFIL)
  9273  3362  e5                        PUSH    HL                      ; save interpreter input/output device
  9274  3363  210000                    LD      HL,0
  9275  3366  2264f8                    LD      (PTRFIL),HL             ; interpreter input/output device = keyboard/screen
  9276  3369  e1                        POP     HL
  9277  336a  e3                        EX      (SP),HL
  9278  336b  cdee18                    CALL    C521C                   ; evaluate byte operand
  9279  336e  d5                        PUSH    DE
  9280  336f  7e                        LD      A,(HL)
  9281  3370  fe2c                      CP      ','
  9282  3372  2011                      JR      NZ,J6CB3
  9283  3374  d7                        RST     CHRGTR                  ; get next BASIC character
  9284  3375  cd7031                    CALL    C6A9E
  9285  3378  fe01                      CP      $1
  9286  337a  ca8233                    JP      Z,J6CB0
  9287  337d  fe04                      CP      $4
  9288  337f  c25535                    JP      NZ,J6E83
  9289  3382  e1                J6CB0:  POP     HL
  9290  3383  af                        XOR     A
  9291  3384  7e                        LD      A,(HL)
  9292  3385  f5                J6CB3:  PUSH    AF
  9293  3386  cf                        RST     SYNCHR
  9294  3387  29                        DEFB    ')'                     ; check for )
  9295  3388  f1                        POP     AF
  9296  3389  e3                        EX      (SP),HL
  9297  338a  f5                        PUSH    AF
  9298  338b  7d                        LD      A,L
  9299  338c  b7                        OR      A
  9300  338d  ca2c0e                    JP      Z,C475A                 ; illegal function call
  9301  3390  e5                        PUSH    HL
  9302  3391  cdf92c                    CALL    C6627                   ; allocate temporary string
  9303  3394  eb                        EX      DE,HL
  9304  3395  c1                        POP     BC
  9305  3396  f1                J6CC4:  POP     AF
  9306  3397  f5                        PUSH    AF
  9307  3398  281a                      JR      Z,J6CE2
  9308  339a  cd0000                    CALL    CHGET
  9309  339d  f5                        PUSH    AF
  9310  339e  cd0000                    CALL    CKCNTC
  9311  33a1  f1                        POP     AF
  9312  33a2  77                J6CD0:  LD      (HL),A
  9313  33a3  23                        INC     HL
  9314  33a4  0d                        DEC     C
  9315  33a5  20ef                      JR      NZ,J6CC4
  9316  33a7  f1                        POP     AF
  9317  33a8  c1                        POP     BC
  9318  33a9  e1                        POP     HL
  9319  33aa  cd8ffe                    CALL    H_RSLF
  9320  33ad  2264f8                    LD      (PTRFIL),HL             ; restore interpreter input/output device
  9321  33b0  c5                        PUSH    BC
  9322  33b1  c3262d                    JP      J6654                   ; push temporary descriptor to temporary desciptor heap and quit
  9323                          
  9324  33b4  cd4333            J6CE2:  CALL    C6C71                   ; get sequential input
  9325  33b7  da5535                    JP      C,J6E83
  9326  33ba  18e6                      JR      J6CD0
  9327                          
  9328                          ;       Subroutine      __________________________
  9329                          ;       Inputs          ________________________
  9330                          ;       Outputs         ________________________
  9331                          
  9332  33bc  cdcd33            C6CEA:  CALL    C6CFB
  9333  33bf  e5                        PUSH    HL
  9334  33c0  0600                      LD      B,$0
  9335  33c2  cdc733                    CALL    C6CF5
  9336  33c5  e1                J6CF3:  POP     HL
  9337  33c6  c9                        RET
  9338                          
  9339                          ;       Subroutine      __________________________
  9340                          ;       Inputs          ________________________
  9341                          ;       Outputs         ________________________
  9342                          
  9343  33c7  af                C6CF5:  XOR     A
  9344  33c8  77                J6CF6:  LD      (HL),A
  9345  33c9  23                        INC     HL
  9346  33ca  10fc                      DJNZ    J6CF6
  9347  33cc  c9                        RET
  9348                          
  9349                          ;       Subroutine      __________________________
  9350                          ;       Inputs          ________________________
  9351                          ;       Outputs         ________________________
  9352                          
  9353  33cd  2a64f8            C6CFB:  LD      HL,(PTRFIL)
  9354  33d0  110900                    LD      DE,9
  9355  33d3  19                        ADD     HL,DE
  9356  33d4  c9                        RET
  9357                          
  9358                          ;       Subroutine      LOC function
  9359                          ;       Inputs          ________________________
  9360                          ;       Outputs         ________________________
  9361                          
  9362  33d5  cd94fe            C6D03:  CALL    H_SAVD
  9363  33d8  cd3c31                    CALL    C6A6A                   ; get i/o channel control block (DAC)
  9364  33db  2820                      JR      Z,J6D2B                 ; i/o channel not open, file not open
  9365  33dd  3e0a                      LD      A,10                    ; function loc
  9366  33df  3821                      JR      C,J6D30                 ; not a diskdrive device, i/o function dispatcher and quit
  9367  33e1  cd99fe                    CALL    H_LOC                   ; LOC for disk
  9368  33e4  1822                      JR      J6D36                   ; internal error (should not return to here)
  9369                          
  9370                          ;       Subroutine      LOF function
  9371                          ;       Inputs          ________________________
  9372                          ;       Outputs         ________________________
  9373                          
  9374  33e6  cd94fe            C6D14:  CALL    H_SAVD
  9375  33e9  cd3c31                    CALL    C6A6A                   ; get i/o channel control block (DAC)
  9376  33ec  280f                      JR      Z,J6D2B                 ; i/o channel not open, file not open
  9377  33ee  3e0c                      LD      A,12                    ; function lof
  9378  33f0  3810                      JR      C,J6D30                 ; not a diskdrive device, i/o function dispatcher and quit
  9379  33f2  cd9efe                    CALL    H_LOF                   ; LOF for disk
  9380  33f5  1811                      JR      J6D36                   ; internal error (should not return to here)
  9381                          
  9382                          ;       Subroutine      EOF function
  9383                          ;       Inputs          ________________________
  9384                          ;       Outputs         ________________________
  9385                          
  9386  33f7  cd94fe            C6D25:  CALL    H_SAVD
  9387  33fa  cd3c31                    CALL    C6A6A                   ; get i/o channel control block (DAC)
  9388  33fd  ca4935            J6D2B:  JP      Z,J6E77                 ; i/o channel not open, file not open
  9389  3400  3e0e                      LD      A,14                    ; function close
  9390  3402  da6136            J6D30:  JP      C,C6F8F                 ; not a diskdrive device, i/o function dispatcher and quit
  9391  3405  cda3fe                    CALL    H_EOF                   ; EOF for disk
  9392  3408  c35235            J6D36:  JP      J6E80                   ; internal error (should not return to here)
  9393                          
  9394                          ;       Subroutine      FPOS function
  9395                          ;       Inputs          ________________________
  9396                          ;       Outputs         ________________________
  9397                          
  9398  340b  cd94fe            C6D39:  CALL    H_SAVD
  9399  340e  cd3c31                    CALL    C6A6A                   ; get i/o channel control block (DAC)
  9400  3411  3e10                      LD      A,16                    ; function fpos
  9401  3413  38ed                      JR      C,J6D30                 ; i/o channel open AND not a diskdrive device, i/o function dispatcher and quit
  9402  3415  cda8fe                    CALL    H_FPOS                  ; FPOS for disk
  9403  3418  18ee                      JR      J6D36                   ; internal error (should not return to here)
  9404                          
  9405                          ;       Subroutine      direct statement
  9406                          ;       Inputs          ________________________
  9407                          ;       Outputs         ________________________
  9408                          
  9409  341a  cd0000            J6D48:  CALL    ISFLIO                  ; interpreter input/output device = file ?
  9410  341d  ca120d                    JP      Z,J4640                 ; nope, execute direct statement
  9411  3420  af                        XOR     A
  9412  3421  cdf631                    CALL    C6B24                   ; close i/o channel 0
  9413  3424  c34335                    JP      J6E71                   ; direct statement in file error
  9414                          
  9415                          ;       Subroutine      redirect interpreter input if i/o channel specified
  9416                          ;       Inputs          ________________________
  9417                          ;       Outputs         ________________________
  9418                          
  9419  3427  0e01              C6D55:  LD      C,1
  9420                          
  9421                          ;       Subroutine      redirect interpreter input/output if i/o channel specified
  9422                          ;       Inputs          ________________________
  9423                          ;       Outputs         ________________________
  9424                          
  9425  3429  fe23              C6D57:  CP      '#'
  9426  342b  c0                        RET     NZ
  9427  342c  c5                        PUSH    BC
  9428  342d  cded18                    CALL    C521B                   ; skip basic char and evaluate byte operand
  9429  3430  cf                        RST     SYNCHR
  9430  3431  2c                        DEFB    ','                     ; check for ,
  9431  3432  7b                        LD      A,E
  9432  3433  e5                        PUSH    HL
  9433  3434  cd7c31                    CALL    C6AAA                   ; redirect interpreter input/output to i/o channel
  9434  3437  7e                        LD      A,(HL)
  9435  3438  e1                        POP     HL
  9436  3439  c1                        POP     BC
  9437  343a  b9                        CP      C                       ; correct filemode ?
  9438  343b  280e                      JR      Z,J6D79                 ; yep, quit
  9439  343d  fe04                      CP      4                       ; random mode ?
  9440  343f  280a                      JR      Z,J6D79                 ; yep, quit
  9441  3441  fe08                      CP      8                       ; append mode ?
  9442  3443  2003                      JR      NZ,J6D76                ; nope, bad filenumber error
  9443  3445  79                        LD      A,C
  9444  3446  fe02                      CP      2                       ; request output mode ?
  9445  3448  c24f35            J6D76:  JP      NZ,J6E7D                ; nope, bad filenumber
  9446  344b  7e                J6D79:  LD      A,(HL)
  9447  344c  c9                        RET
  9448                          
  9449                          ;       Subroutine      close i/o channel 0 and load HL from (TEMP)
  9450                          ;       Inputs          ________________________
  9451                          ;       Outputs         ________________________
  9452                          
  9453  344d  01e929            C6D7B:  LD      BC,I6317                ; load BASIC pointer from (TEMP)
  9454  3450  c5                        PUSH    BC
  9455  3451  af                        XOR     A
  9456  3452  c3f631                    JP      C6B24                   ; close i/o channel 0
  9457                          
  9458  3455  ef                J6D83:  RST     GETYPR                  ; get DAC type
  9459  3456  01c312                    LD      BC,I4BF1
  9460  3459  11202c                    LD      DE,$2C20
  9461  345c  2017                      JR      NZ,J6DA3                ; not a string,
  9462  345e  5a                        LD      E,D
  9463  345f  1814                      JR      J6DA3
  9464                          
  9465  3461  01d111            J6D8F:  LD      BC,C4AFF
  9466  3464  c5                        PUSH    BC
  9467  3465  cd2734                    CALL    C6D55                   ; redirect interpreter input if i/o channel specified
  9468  3468  cd7625                    CALL    C5EA4                   ; locate variable
  9469  346b  cd0000                    CALL    C3058                   ; check if string
  9470  346e  d5                        PUSH    DE
  9471  346f  014d0f                    LD      BC,J487B
  9472  3472  af                        XOR     A
  9473  3473  57                        LD      D,A
  9474  3474  5f                        LD      E,A
  9475  3475  f5                J6DA3:  PUSH    AF
  9476  3476  c5                        PUSH    BC
  9477  3477  e5                        PUSH    HL
  9478  3478  cd4333            J6DA6:  CALL    C6C71                   ; get sequential input
  9479  347b  da5535                    JP      C,J6E83
  9480  347e  fe20                      CP      $20
  9481  3480  2004                      JR      NZ,J6DB4
  9482  3482  14                        INC     D
  9483  3483  15                        DEC     D
  9484  3484  20f2                      JR      NZ,J6DA6
  9485  3486  fe22              J6DB4:  CP      $22
  9486  3488  200e                      JR      NZ,J6DC6
  9487  348a  7b                        LD      A,E
  9488  348b  fe2c                      CP      $2C
  9489  348d  3e22                      LD      A,$22
  9490  348f  2007                      JR      NZ,J6DC6
  9491  3491  57                        LD      D,A
  9492  3492  5f                        LD      E,A
  9493  3493  cd4333                    CALL    C6C71                   ; get sequential input
  9494  3496  3847                      JR      C,J6E0D
  9495  3498  215ef5            J6DC6:  LD      HL,BUF
  9496  349b  06ff                      LD      B,$FF
  9497  349d  4f                J6DCB:  LD      C,A
  9498  349e  7a                        LD      A,D
  9499  349f  fe22                      CP      $22
  9500  34a1  79                        LD      A,C
  9501  34a2  282a                      JR      Z,J6DFC
  9502  34a4  fe0d                      CP      $D
  9503  34a6  e5                        PUSH    HL
  9504  34a7  2850                      JR      Z,J6E27
  9505  34a9  e1                        POP     HL
  9506  34aa  fe0a                      CP      $A
  9507  34ac  2020                      JR      NZ,J6DFC
  9508  34ae  4f                J6DDC:  LD      C,A
  9509  34af  7b                        LD      A,E
  9510  34b0  fe2c                      CP      $2C
  9511  34b2  79                        LD      A,C
  9512  34b3  c43335                    CALL    NZ,C6E61
  9513  34b6  cd4333                    CALL    C6C71                   ; get sequential input
  9514  34b9  3824                      JR      C,J6E0D
  9515  34bb  fe0a                      CP      $A
  9516  34bd  28ef                      JR      Z,J6DDC
  9517  34bf  fe0d                      CP      $D
  9518  34c1  200b                      JR      NZ,J6DFC
  9519  34c3  7b                        LD      A,E
  9520  34c4  fe20                      CP      $20
  9521  34c6  2812                      JR      Z,J6E08
  9522  34c8  fe2c                      CP      $2C
  9523  34ca  3e0d                      LD      A,$D
  9524  34cc  280c                      JR      Z,J6E08
  9525  34ce  b7                J6DFC:  OR      A
  9526  34cf  2809                      JR      Z,J6E08
  9527  34d1  ba                        CP      D
  9528  34d2  280b                      JR      Z,J6E0D
  9529  34d4  bb                        CP      E
  9530  34d5  2808                      JR      Z,J6E0D
  9531  34d7  cd3335                    CALL    C6E61
  9532  34da  cd4333            J6E08:  CALL    C6C71                   ; get sequential input
  9533  34dd  30be                      JR      NC,J6DCB
  9534  34df  e5                J6E0D:  PUSH    HL
  9535  34e0  fe22                      CP      $22
  9536  34e2  2804                      JR      Z,J6E16
  9537  34e4  fe20                      CP      $20
  9538  34e6  202b                      JR      NZ,J6E41
  9539  34e8  cd4333            J6E16:  CALL    C6C71                   ; get sequential input
  9540  34eb  3826                      JR      C,J6E41
  9541  34ed  fe20                      CP      $20
  9542  34ef  28f7                      JR      Z,J6E16
  9543  34f1  fe2c                      CP      $2C
  9544  34f3  281e                      JR      Z,J6E41
  9545  34f5  fe0d                      CP      $D
  9546  34f7  2009                      JR      NZ,J6E30
  9547  34f9  cd4333            J6E27:  CALL    C6C71                   ; get sequential input
  9548  34fc  3815                      JR      C,J6E41
  9549  34fe  fe0a                      CP      $A
  9550  3500  2811                      JR      Z,J6E41
  9551  3502  4f                J6E30:  LD      C,A
  9552  3503  cd3433                    CALL    C6C62                   ; current i/o channel a diskdrive device ?
  9553  3506  3006                      JR      NC,J6E3C                ; nope,
  9554  3508  cdadfe                    CALL    H_BAKU                  ; backup for disk hook
  9555  350b  c35235                    JP      J6E80                   ; internal error (should not return to here)
  9556                          
  9557  350e  3e12              J6E3C:  LD      A,18                    ; function backup
  9558  3510  cd6136                    CALL    C6F8F                   ; i/o function dispatcher
  9559  3513  e1                J6E41:  POP     HL
  9560  3514  3600              J6E42:  LD      (HL),$0
  9561  3516  215df5                    LD      HL,BUFMIN
  9562  3519  7b                        LD      A,E
  9563  351a  d620                      SUB     $20
  9564  351c  2807                      JR      Z,J6E53
  9565  351e  0600                      LD      B,0
  9566  3520  cd0a2d                    CALL    C6638                   ; analyze string with specified endmaker (1st char is skipped) and create temporary stringdescriptor
  9567  3523  e1                        POP     HL
  9568  3524  c9                        RET
  9569                          
  9570  3525  ef                J6E53:  RST     GETYPR                  ; get DAC type
  9571  3526  f5                        PUSH    AF
  9572  3527  d7                        RST     CHRGTR                  ; get next BASIC character
  9573  3528  f1                        POP     AF
  9574  3529  f5                        PUSH    AF
  9575  352a  dc0000                    CALL    C,C3299                 ; not a double real, convert text to number
  9576  352d  f1                        POP     AF
  9577  352e  d40000                    CALL    NC,C3299                ; double real, convert text to number
  9578  3531  e1                        POP     HL
  9579  3532  c9                        RET
  9580                          
  9581                          ;       Subroutine      __________________________
  9582                          ;       Inputs          ________________________
  9583                          ;       Outputs         ________________________
  9584                          
  9585  3533  b7                C6E61:  OR      A
  9586  3534  c8                        RET     Z
  9587  3535  77                        LD      (HL),A
  9588  3536  23                        INC     HL
  9589  3537  05                        DEC     B
  9590  3538  c0                        RET     NZ
  9591  3539  f1                        POP     AF
  9592  353a  c31435                    JP      J6E42
  9593                          
  9594  353d  1e38              J6E6B:  LD      E,$38
  9595  353f  01                        DEFB    $01
  9596                          
  9597  3540  1e36              J6E6E:  LD      E,$36
  9598  3542  01                        DEFB    $01
  9599                          
  9600  3543  1e39              J6E71:  LD      E,$39
  9601  3545  01                        DEFB    $01
  9602                          
  9603  3546  1e35              J6E74:  LD      E,$35
  9604  3548  01                        DEFB    $01
  9605                          
  9606  3549  1e3b              J6E77:  LD      E,$3B
  9607  354b  01                        DEFB    $01
  9608                          
  9609  354c  1e32              J6E7A:  LD      E,$32
  9610  354e  01                        DEFB    $01
  9611                          
  9612  354f  1e34              J6E7D:  LD      E,$34
  9613  3551  01                        DEFB    $01
  9614                          
  9615  3552  1e33              J6E80:  LD      E,$33
  9616  3554  01                        DEFB    $01
  9617                          
  9618  3555  1e37              J6E83:  LD      E,$37
  9619  3557  01                        DEFB    $01
  9620                          
  9621  3558  1e3a              J6E86:  LD      E,$3A
  9622  355a  af                        XOR     A
  9623  355b  327cf8                    LD      (NLONLY),A              ; not loading basic program, close i/o channels when requested
  9624  355e  32aefc                    LD      (FLBMEM),A
  9625  3561  c34107                    JP      J406F
  9626                          
  9627                          ;       Subroutine      BSAVE statement
  9628                          ;       Inputs          ________________________
  9629                          ;       Outputs         ________________________
  9630                          
  9631                          
  9632  3564  cde030            C6E92:  CALL    C6A0E                   ; evaluate filespecification
  9633  3567  d5                        PUSH    DE                      ; save devicecode
  9634  3568  cf                        RST     SYNCHR
  9635  3569  2c                        DEFB    ','                     ; check for ,
  9636  356a  cddd35                    CALL    C6F0B                   ; evaluate BLOAD/BSAVE address operand
  9637  356d  eb                        EX      DE,HL
  9638  356e  22bffc                    LD      (SAVENT),HL
  9639  3571  eb                        EX      DE,HL                   ; assume start address = execute address
  9640  3572  d5                        PUSH    DE                      ; save start address
  9641  3573  cf                        RST     SYNCHR
  9642  3574  2c                        DEFB    ','                     ; check for ,
  9643  3575  cddd35                    CALL    C6F0B                   ; evaluate BLOAD/BSAVE address operand
  9644  3578  eb                        EX      DE,HL
  9645  3579  227df8                    LD      (SAVEND),HL
  9646  357c  eb                        EX      DE,HL                   ; save end address
  9647  357d  2b                        DEC     HL
  9648  357e  d7                        RST     CHRGTR                  ; end of statement ?
  9649  357f  280a                      JR      Z,J6EB9                 ; yep, skip execute address
  9650  3581  cf                        RST     SYNCHR
  9651  3582  2c                        DEFB    ','                     ; check for ,
  9652  3583  cddd35                    CALL    C6F0B                   ; evaluate BLOAD/BSAVE address operand
  9653  3586  eb                        EX      DE,HL
  9654  3587  22bffc                    LD      (SAVENT),HL
  9655  358a  eb                        EX      DE,HL                   ; save execute address
  9656  358b  c1                J6EB9:  POP     BC                      ; start address
  9657  358c  d1                        POP     DE                      ; devicecode
  9658  358d  e5                        PUSH    HL
  9659  358e  c5                        PUSH    BC
  9660  358f  7a                        LD      A,D
  9661  3590  feff                      CP      $FF                    ; device is cassette ?
  9662  3592  caa936                    JP      Z,J6FD7                 ; yep, BSAVE to cassette
  9663  3595  c33d35                    JP      J6E6B                   ; bad filename error
  9664                          
  9665                          ;       Subroutine      BLOAD statement
  9666                          ;       Inputs          ________________________
  9667                          ;       Outputs         ________________________
  9668                          
  9669  3598  cde030            C6EC6:  CALL    C6A0E                   ; evaluate filespecification
  9670  359b  d5                        PUSH    DE
  9671  359c  af                        XOR     A
  9672  359d  32befc                    LD      (RUNBNF),A              ; assume no execute after load
  9673  35a0  2b                        DEC     HL
  9674  35a1  d7                        RST     CHRGTR                  ; get next BASIC character
  9675  35a2  010000                    LD      BC,0                    ; assume offset 0
  9676  35a5  2813                      JR      Z,J6EE8                 ; end of statement, go
  9677  35a7  cf                        RST     SYNCHR
  9678  35a8  2c                        DEFB    ','                     ; check for ,
  9679  35a9  fe52                      CP      'R'                     ; run option ?
  9680  35ab  2008                      JR      NZ,J6EE3                ; nope, offset option
  9681  35ad  32befc                    LD      (RUNBNF),A              ; execute after load
  9682  35b0  d7                        RST     CHRGTR                  ; get next BASIC character
  9683  35b1  2807                      JR      Z,J6EE8                 ; end of statement, go
  9684  35b3  cf                        RST     SYNCHR
  9685  35b4  2c                        DEFB    ','                     ; check for ,
  9686  35b5  cddd35            J6EE3:  CALL    C6F0B                   ; evaluate BLOAD/BSAVE address operand (offset)
  9687  35b8  42                        LD      B,D
  9688  35b9  4b                        LD      C,E                     ; offset
  9689  35ba  d1                J6EE8:  POP     DE                      ; devicecode
  9690  35bb  e5                        PUSH    HL
  9691  35bc  c5                        PUSH    BC
  9692  35bd  7a                        LD      A,D
  9693  35be  feff                      CP      $FF                    ; device is cassette ?
  9694  35c0  cae636                    JP      Z,J7014                 ; BLOAD from cassette
  9695  35c3  c33d35                    JP      J6E6B                   ; bad filename
  9696                          
  9697                          ;       Subroutine      finish BLOAD
  9698                          ;       Inputs          ________________________
  9699                          ;       Outputs         ________________________
  9700                          
  9701  35c6  3abefc            J6EF4:  LD      A,(RUNBNF)
  9702  35c9  b7                        OR      A                       ; execute after load ?
  9703  35ca  280c                      JR      Z,J6F06                 ; nope, close channel and quit
  9704  35cc  af                        XOR     A
  9705  35cd  cdf631                    CALL    C6B24                   ; close i/o channel 0
  9706  35d0  21c533                    LD      HL,J6CF3
  9707  35d3  e5                        PUSH    HL                      ; after this, retore BASIC pointer and continue
  9708  35d4  2abffc                    LD      HL,(SAVENT)
  9709  35d7  e9                        JP      (HL)                    ; start code
  9710                          
  9711  35d8  e1                J6F06:  POP     HL                      ; restore BASIC pointer
  9712  35d9  af                        XOR     A
  9713  35da  c3f631                    JP      C6B24                   ; close i/o channel 0
  9714                          
  9715                          
  9716                          ;       Subroutine      evaluate BLOAD/BSAVE address operand
  9717                          ;       Inputs          ________________________
  9718                          ;       Outputs         ________________________
  9719                          
  9720  35dd  cd3613            C6F0B:  CALL    C4C64                   ; evaluate expression
  9721  35e0  e5                        PUSH    HL
  9722  35e1  cd0b1b                    CALL    C5439                   ; convert address to integer
  9723  35e4  d1                        POP     DE
  9724  35e5  eb                        EX      DE,HL
  9725  35e6  c9                        RET
  9726                          
  9727                          ;       Subroutine      devicename parser
  9728                          ;       Inputs          ________________________
  9729                          ;       Outputs         ________________________
  9730                          
  9731  35e7  cdb2fe            C6F15:  CALL    H_PARD                  ; hook devicename parser: start of parser
  9732  35ea  7e                        LD      A,(HL)
  9733  35eb  fe3a                      CP      $3A                     ; $0-$39 ?
  9734  35ed  381a                      JR      C,J6F37                 ; yep, bad filename
  9735  35ef  e5                        PUSH    HL
  9736  35f0  53                        LD      D,E
  9737  35f1  7e                        LD      A,(HL)
  9738  35f2  23                        INC     HL
  9739  35f3  1d                        DEC     E
  9740  35f4  280a                      JR      Z,J6F2E                 ; filespec has length 1, no device
  9741  35f6  fe3a              J6F24:  CP      ':'                     ; device seperator ?
  9742  35f8  2815                      JR      Z,J6F3D                 ; yep,
  9743  35fa  7e                        LD      A,(HL)
  9744  35fb  23                        INC     HL
  9745  35fc  1d                        DEC     E
  9746  35fd  f2f635                    JP      P,J6F24                 ; check for device
  9747  3600  5a                J6F2E:  LD      E,D
  9748  3601  e1                        POP     HL
  9749  3602  af                        XOR     A                       ; Zx set
  9750  3603  3eff                      LD      A,$FF                  ; devicecode for CAS
  9751  3605  cdb7fe                    CALL    H_NODE                  ; hook devicename parser: no device specified
  9752  3608  c9                        RET
  9753                          
  9754  3609  cdbcfe            J6F37:  CALL    H_POSD                  ; hook devicename parser: first character filespecification has code 00-$39
  9755  360c  c33d35                    JP      J6E6B                   ; bad filename
  9756                          
  9757  360f  7a                J6F3D:  LD      A,D
  9758  3610  93                        SUB     E
  9759  3611  3d                        DEC     A                       ; length of devicename
  9760  3612  c1                        POP     BC
  9761  3613  d5                        PUSH    DE
  9762  3614  c5                        PUSH    BC
  9763  3615  4f                        LD      C,A
  9764  3616  47                        LD      B,A
  9765  3617  114836                    LD      DE,I6F76                ; internal devicename table
  9766  361a  e3                        EX      (SP),HL
  9767  361b  e5                        PUSH    HL
  9768  361c  cd7b15            J6F4A:  CALL    C4EA9                   ; get char uppercase
  9769  361f  c5                        PUSH    BC
  9770  3620  47                        LD      B,A
  9771  3621  1a                        LD      A,(DE)
  9772  3622  23                        INC     HL
  9773  3623  13                        INC     DE
  9774  3624  b8                        CP      B                       ; match ?
  9775  3625  c1                        POP     BC
  9776  3626  200d                      JR      NZ,J6F63                ; nope,
  9777  3628  0d                        DEC     C
  9778  3629  20f1                      JR      NZ,J6F4A                ; next
  9779  362b  1a                J6F59:  LD      A,(DE)
  9780  362c  b7                        OR      A                       ; name in table also ends ?
  9781  362d  f23536                    JP      P,J6F63                 ; nope, this is not it!
  9782  3630  e1                        POP     HL                      ; yep, A=devicecode
  9783  3631  e1                        POP     HL
  9784  3632  d1                        POP     DE
  9785  3633  b7                        OR      A                       ; Zx reset
  9786  3634  c9                        RET
  9787                          
  9788  3635  b7                J6F63:  OR      A                       ; already at devicecode ?
  9789  3636  fa2b36                    JP      M,J6F59                 ; yep, found device!
  9790  3639  1a                J6F67:  LD      A,(DE)
  9791  363a  87                        ADD     A,A
  9792  363b  13                        INC     DE
  9793  363c  30fb                      JR      NC,J6F67                ; skip to next devicename in table
  9794  363e  48                        LD      C,B
  9795  363f  e1                        POP     HL
  9796  3640  e5                        PUSH    HL
  9797  3641  1a                        LD      A,(DE)
  9798  3642  b7                        OR      A
  9799  3643  20d7                      JR      NZ,J6F4A                ; try next devicename
  9800  3645  c3ca1c                    JP      J55F8                   ; try external devices (in expansion roms)
  9801                          
  9802  3648  434153ff          I6F76:  DEFB    "CAS",$FF
  9803  364c  4c5054fe                  DEFB    "LPT",$FE
  9804  3650  435254fd                  DEFB    "CRT",$FD
  9805  3654  475250fc                  DEFB    "GRP",$FC
  9806  3658  00                        DEFB    0
  9807                          
  9808  3659  9938              I6F87:  DEFW    C71C7                   ; CAS jumptable
  9809  365b  7839                      DEFW    C72A6                   ; LPT jumptable
  9810  365d  7438                      DEFW    C71A2                   ; CRT jumptable
  9811  365f  5438                      DEFW    C7182                   ; GRP jumptable
  9812                          
  9813                          ;       Subroutine      i/o function dispatcher
  9814                          ;       Inputs          A = function
  9815                          ;       Outputs         ________________________
  9816                          
  9817  3661  cdc6fe            C6F8F:  CALL    H_GEND
  9818  3664  e5                        PUSH    HL
  9819  3665  d5                        PUSH    DE
  9820  3666  f5                        PUSH    AF
  9821  3667  110400                    LD      DE,4
  9822  366a  19                        ADD     HL,DE
  9823  366b  7e                        LD      A,(HL)
  9824  366c  fefc                      CP      $FC                    ; i/o channel device a internal device ?
  9825  366e  da1c1d                    JP      C,J564A                 ; nope, start i/o function in expansion ROM
  9826  3671  3eff                      LD      A,$FF
  9827  3673  96                        SUB     (HL)
  9828  3674  87                        ADD     A,A
  9829  3675  5f                        LD      E,A
  9830  3676  215936                    LD      HL,I6F87
  9831  3679  19                        ADD     HL,DE
  9832  367a  5e                        LD      E,(HL)
  9833  367b  23                        INC     HL
  9834  367c  56                        LD      D,(HL)
  9835  367d  f1                        POP     AF                      ; functioncode
  9836  367e  6f                        LD      L,A
  9837  367f  2600                      LD      H,0
  9838  3681  19                        ADD     HL,DE
  9839  3682  5e                        LD      E,(HL)
  9840  3683  23                        INC     HL
  9841  3684  56                        LD      D,(HL)
  9842  3685  eb                        EX      DE,HL
  9843  3686  d1                        POP     DE                      ; filemode
  9844  3687  e3                        EX      (SP),HL                 ; i/o channel control block
  9845  3688  c9                        RET
  9846                          
  9847                          ;       Subroutine      CSAVE statement
  9848                          ;       Inputs          ________________________
  9849                          ;       Outputs         ________________________
  9850                          
  9851  3689  cd6a37            C6FB7:  call    A7098
  9852  368c  2b                        dec     hl
  9853  368d  d7                        rst     CHRGTR
  9854  368e  2805                      jr      z,A6FC3
  9855  3690  cf                        rst     SYNCHR
  9856  3691  2c                        db      ','
  9857  3692  cdff40                    call    A7A2D
  9858  3695  e5                A6FC3:  push    hl
  9859  3696  3ed3                      ld      a,$D3
  9860  3698  cdf737                    call    A7125
  9861  369b  2ac2f6                    ld      hl,(VARTAB)
  9862  369e  227df8                    ld      (SAVEND),hl
  9863  36a1  2a76f6                    ld      hl,(TXTTAB)
  9864  36a4  cd1038                    call    A713E
  9865  36a7  e1                        pop     hl
  9866  36a8  c9                        ret
  9867                          ;
  9868  36a9  3ed0              J6FD7:  ld      a,$D0
  9869  36ab  cdf737                    call    A7125
  9870  36ae  af                        xor     a
  9871  36af  cdca39                    call    C72F8
  9872  36b2  e1                        pop     hl
  9873  36b3  e5                        push    hl
  9874  36b4  cdd536                    call    A7003
  9875  36b7  2a7df8                    ld      hl,(SAVEND)
  9876  36ba  e5                        push    hl
  9877  36bb  cdd536                    call    A7003
  9878  36be  2abffc                    ld      hl,(SAVENT)
  9879  36c1  cdd536                    call    A7003
  9880  36c4  d1                        pop     de
  9881  36c5  e1                        pop     hl
  9882  36c6  7e                A6FF4:  ld      a,(hl)
  9883  36c7  cdb039                    call    C72DE
  9884  36ca  e7                        rst     DCOMPR
  9885  36cb  3003                      jr      nc,A6FFE
  9886  36cd  23                        inc     hl
  9887  36ce  18f6                      jr      A6FF4
  9888                          ;
  9889  36d0  cd0000            A6FFE:  call    TAPOOF
  9890  36d3  e1                        pop     hl
  9891  36d4  c9                        ret
  9892                          ;
  9893  36d5  7d                A7003:  ld      a,l
  9894  36d6  cdb039                    call    C72DE
  9895  36d9  7c                        ld      a,h
  9896  36da  c3b039                    jp      C72DE
  9897                          ;
  9898  36dd  cda639            A700B:  call    C72D4
  9899  36e0  6f                        ld      l,a
  9900  36e1  cda639                    call    C72D4
  9901  36e4  67                        ld      h,a
  9902  36e5  c9                        ret
  9903                          ;
  9904  36e6  0ed0              J7014:  ld      c,$D0
  9905  36e8  cd8a37                    call    A70B8
  9906  36eb  cdbb39                    call    C72E9
  9907  36ee  c1                        pop     bc
  9908  36ef  cddd36                    call    A700B
  9909  36f2  09                        add     hl,bc
  9910  36f3  eb                        ex      de,hl
  9911  36f4  cddd36                    call    A700B
  9912  36f7  09                        add     hl,bc
  9913  36f8  e5                        push    hl
  9914  36f9  cddd36                    call    A700B
  9915  36fc  22bffc                    ld      (SAVENT),hl
  9916  36ff  eb                        ex      de,hl
  9917  3700  d1                        pop     de
  9918  3701  cda639            A702F:  call    C72D4
  9919  3704  77                        ld      (hl),a
  9920  3705  e7                        rst     DCOMPR
  9921  3706  2803                      jr      z,A7039
  9922  3708  23                        inc     hl
  9923  3709  18f6                      jr      A702F
  9924                          ;
  9925  370b  cd0000            A7039:  call    TAPIOF
  9926  370e  c3c635                    jp      J6EF4
  9927                          ;
  9928  3711  d691              C703F:  sub     $91
  9929  3713  2802                      jr      z,A7045
  9930  3715  af                        xor     a
  9931  3716  01                        db      $01
  9932  3717  2f                A7045:  cpl
  9933  3718  23                        inc     hl
  9934  3719  fe01                      cp      $01
  9935  371b  f5                        push    af
  9936  371c  cd5e37                    call    A708C                   ; evaluate filename
  9937  371f  0ed3                      ld      c,$D3
  9938  3721  cd8a37                    call    A70B8                   ; search BINBAS file
  9939  3724  f1                        pop     af
  9940  3725  32f8f7                    ld      (DAC+2),a
  9941  3728  dc5929                    call    c,C6287                 ; CLOAD, do a NEW
  9942  372b  3af8f7                    ld      a,(DAC+2)
  9943  372e  fe01                      cp      $01
  9944  3730  32f5f3                    ld      (FRCNEW),a
  9945  3733  f5                        push    af
  9946  3734  cdbc1b                    call    C54EA                   ; force linenumbers
  9947  3737  f1                        pop     af
  9948  3738  2a76f6                    ld      hl,(TXTTAB)
  9949  373b  cd2f38                    call    A715D                   ; load/compare basicprogram
  9950  373e  2010                      jr      nz,A707E                ; not equal
  9951  3740  22c2f6                    ld      (VARTAB),hl             ; start of vararea
  9952                          A7071:
  9953  3743  21a906                    ld      hl,I3FD7                ; prompt message
  9954  3746  cd4a2d                    CALL    C6678                   ; message to interpreter output
  9955  3749  2a76f6                    ld      hl,(TXTTAB)
  9956  374c  e5                        push    hl
  9957  374d  c30909                    jp      J4237                   ; manage pointers & vars, headloop
  9958                          
  9959  3750  23                A707E:  inc     hl
  9960  3751  eb                        ex      de,hl
  9961  3752  2ac2f6                    ld      hl,(VARTAB)
  9962  3755  e7                        rst     DCOMPR                  ; difference in programarea ?
  9963  3756  da4337                    jp      c,A7071                 ; nop, then it is ok
  9964  3759  1e14                      ld      e,$14
  9965  375b  c34107                    jp      J406F                   ; Verify error
  9966                          
  9967  375e  2b                A708C:  dec     hl
  9968  375f  d7                        rst     CHRGTR
  9969  3760  2008                      jr      nz,A7098
  9970  3762  e5                        push    hl
  9971  3763  2166f8                    ld      hl,FILNAM
  9972  3766  0606                      ld      b,$06
  9973  3768  1819                      jr      A70B1
  9974                          
  9975  376a  cd3613            A7098:  call    C4C64                   ; eval expression
  9976  376d  e5                        push    hl
  9977  376e  cde12e                    call    C680F                   ; free if temp
  9978  3771  2b                        dec     hl
  9979  3772  2b                        dec     hl
  9980  3773  46                        ld      b,(hl)                  ; length of string
  9981  3774  0e06                      ld      c,$06
  9982  3776  2166f8                    ld      hl,FILNAM
  9983  3779  1a                A70A7:  ld      a,(de)
  9984  377a  77                        ld      (hl),a
  9985  377b  23                        inc     hl
  9986  377c  13                        inc     de
  9987  377d  0d                        dec     c
  9988  377e  2808                      jr      z,A70B6                 ; FILNAM filled, quit
  9989  3780  10f7                      djnz    A70A7
  9990  3782  41                        ld      b,c
  9991  3783  3620              A70B1:  ld      (hl),' '
  9992  3785  23                        inc     hl
  9993  3786  10fb                      djnz    A70B1                   ; fill remainer with spaces
  9994  3788  e1                A70B6:  pop     hl
  9995  3789  c9                        ret
  9996                          ;
  9997  378a  cdbb39            A70B8:  call    C72E9                   ; Check until header
  9998  378d  060a                      ld      b,10
  9999  378f  cda639            A70BD:  call    C72D4                   ; read byte
 10000  3792  b9                        cp      c
 10001  3793  20f5                      jr      nz,A70B8                ; other filetype, try again
 10002  3795  10f8                      djnz    A70BD
 10003  3797  2171f8                    ld      hl,FILNM2
 10004  379a  e5                        push    hl
 10005  379b  0606                      ld      b,6
 10006  379d  cda639            A70CB:  call    C72D4
 10007  37a0  77                        ld      (hl),a
 10008  37a1  23                        inc     hl
 10009  37a2  10f9                      djnz    A70CB                   ; read filename
 10010  37a4  e1                        pop     hl
 10011  37a5  1166f8                    ld      de,FILNAM
 10012  37a8  0606                      ld      b,$06
 10013  37aa  1a                A70D8:  ld      a,(de)
 10014  37ab  13                        inc     de
 10015  37ac  fe20                      cp      ' '
 10016  37ae  2004                      jr      nz,A70E2
 10017  37b0  10f8                      djnz    A70D8                   ; FILNAM all spaces ?
 10018  37b2  180d                      jr      A70EF                   ; yep, found
 10019                          ;
 10020  37b4  1166f8            A70E2:  ld      de,FILNAM
 10021  37b7  0606                      ld      b,$06
 10022  37b9  1a                A70E7:  ld      a,(de)
 10023  37ba  be                        cp      (hl)
 10024  37bb  200a                      jr      nz,A70F5                ; not the same, skip
 10025  37bd  23                        inc     hl
 10026  37be  13                        inc     de
 10027  37bf  10f8                      djnz    A70E7                   ; compare next
 10028  37c1  21d137            A70EF:  ld      hl,T70FF
 10029  37c4  c3df37                    jp      A710D                   ; found
 10030                          ;
 10031  37c7  c5                A70F5:  push    bc
 10032  37c8  21d837                    ld      hl,T7106
 10033  37cb  cddf37                    call    A710D                   ; print Skip
 10034  37ce  c1                        pop     bc
 10035  37cf  18b9                      jr      A70B8                   ; try again
 10036                          ;
 10037  37d1  466f756e643a00    T70FF:  db      "Found:",0
 10038                          
 10039  37d8  536b6970203a00    T7106:  db      "Skip :",0
 10040                          
 10041  37df  ed5b1cf4          A710D:  ld      de,(CURLIN)
 10042  37e3  13                        inc     de
 10043  37e4  7a                        ld      a,d
 10044  37e5  b3                        or      e
 10045  37e6  c0                        ret     nz
 10046  37e7  cd4a2d                    call    C6678
 10047  37ea  2171f8                    ld      hl,FILNM2
 10048  37ed  0606                      ld      b,$06
 10049  37ef  7e                A711D:  ld      a,(hl)
 10050  37f0  23                        inc     hl
 10051  37f1  df                        rst     OUTDO
 10052  37f2  10fb                      djnz    A711D
 10053  37f4  c3fa39                    jp      C7328                   ; OUTDO next line
 10054                          ;
 10055  37f7  cdca39            A7125:  call    C72F8
 10056  37fa  060a                      ld      b,$0A
 10057  37fc  cdb039            A712A:  call    C72DE
 10058  37ff  10fb                      djnz    A712A
 10059  3801  0606                      ld      b,$06
 10060  3803  2166f8                    ld      hl,FILNAM
 10061  3806  7e                A7134:  ld      a,(hl)
 10062  3807  23                        inc     hl
 10063  3808  cdb039                    call    C72DE
 10064  380b  10f9                      djnz    A7134
 10065  380d  c30000                    jp      TAPOOF
 10066                          ;
 10067  3810  e5                A713E:  push    hl
 10068  3811  cdbc1b                    call    C54EA                   ; force linenumbers
 10069  3814  af                        xor     a
 10070  3815  cdca39                    call    C72F8
 10071  3818  d1                        pop     de
 10072  3819  2a7df8                    ld      hl,(SAVEND)
 10073  381c  1a                A714A:  ld      a,(de)
 10074  381d  13                        inc     de
 10075  381e  cdb039                    call    C72DE
 10076  3821  e7                        rst     DCOMPR
 10077  3822  20f8                      jr      nz,A714A
 10078  3824  2e07                      ld      l,$07
 10079  3826  cdb039            A7154:  call    C72DE
 10080  3829  2d                        dec     l
 10081  382a  20fa                      jr      nz,A7154
 10082  382c  c30000                    jp      TAPOOF
 10083                          ;
 10084  382f  cdbb39            A715D:  call    C72E9
 10085  3832  9f                        sbc     a,a
 10086  3833  2f                        cpl
 10087  3834  57                        ld      d,a
 10088  3835  060a              A7163:  ld      b,$0A
 10089  3837  cda639            A7165:  call    C72D4
 10090  383a  5f                        ld      e,a
 10091  383b  cd3929                    call    C6267
 10092  383e  7b                        ld      a,e
 10093  383f  96                        sub     (hl)
 10094  3840  a2                        and     d
 10095  3841  c20000                    jp      nz,TAPIOF
 10096  3844  73                        ld      (hl),e
 10097  3845  7e                        ld      a,(hl)
 10098  3846  b7                        or      a
 10099  3847  23                        inc     hl
 10100  3848  20eb                      jr      nz,A7163
 10101  384a  10eb                      djnz    A7165
 10102  384c  01faff                    ld      bc,-6
 10103  384f  09                        add     hl,bc
 10104  3850  af                        xor     a
 10105  3851  c30000                    jp      TAPIOF
 10106                          ;
 10107                          ;       Table GRP device
 10108                          
 10109  3854  8838              C7182:  DEFW    J71B6                   ; open, check if output/append and open
 10110  3856  9438                      DEFW    J71C2                   ; close, quit
 10111  3858  5835                      DEFW    J6E86                   ; random, sequential i/o only error
 10112  385a  6838                      DEFW    J7196                   ; output, output char to screen
 10113  385c  2c0e                      DEFW    C475A                   ; input, illegal function call
 10114  385e  2c0e                      DEFW    C475A                   ; illegal function call
 10115  3860  2c0e                      DEFW    C475A                   ; illegal function call
 10116  3862  2c0e                      DEFW    C475A                   ; illegal function call
 10117  3864  2c0e                      DEFW    C475A                   ; illegal function call
 10118  3866  2c0e                      DEFW    C475A                   ; illegal function call
 10119                          
 10120  3868  3aaffc            J7196:  LD      A,(SCRMOD)
 10121  386b  fe02                      CP      2                       ; in graphic screenmode ?
 10122  386d  da2c0e                    JP      C,C475A                 ; nope, illegal function call
 10123  3870  79                        LD      A,C
 10124  3871  c30000                    JP      GRPPRT                  ; output char to graphic screen
 10125                          
 10126                          ;       Table CRT device
 10127                          
 10128  3874  8838              C71A2:  DEFW    J71B6                   ; open, check if output/append and open
 10129  3876  9438                      DEFW    J71C2                   ; close, quit
 10130  3878  5835                      DEFW    J6E86                   ; random, sequential i/o only error
 10131  387a  9538                      DEFW    J71C3                   ; output, output char to screen
 10132  387c  2c0e                      DEFW    C475A                   ; input, illegal function call
 10133  387e  2c0e                      DEFW    C475A                   ; illegal function call
 10134  3880  2c0e                      DEFW    C475A                   ; illegal function call
 10135  3882  2c0e                      DEFW    C475A                   ; illegal function call
 10136  3884  2c0e                      DEFW    C475A                   ; illegal function call
 10137  3886  2c0e                      DEFW    C475A                   ; illegal function call
 10138                          
 10139  3888  cd9f39            J71B6:  CALL    C72CD                   ; bad filename error if random mode
 10140  388b  fe01                      CP      1
 10141  388d  ca3d35                    JP      Z,J6E6B                 ; input mode, bad filename error
 10142  3890  2264f8            J71BE:  LD      (PTRFIL),HL             ; interpreter input/output device
 10143  3893  73                        LD      (HL),E
 10144  3894  c9                J71C2:  RET
 10145                          
 10146  3895  79                J71C3:  LD      A,C
 10147  3896  c30000                    JP      CHPUT
 10148                          
 10149                          ;       Table CAS device
 10150                          
 10151  3899  ad38              C71C7:  DEFW    C71DB                   ; open,
 10152  389b  d738                      DEFW    J7205                   ; close,
 10153  389d  5835                      DEFW    J6E86                   ; random, sequential i/o only error
 10154  389f  fc38                      DEFW    J722A                   ; output,
 10155  38a1  1139                      DEFW    C723F                   ; input,
 10156  38a3  2c0e                      DEFW    C475A                   ; illegal function call
 10157  38a5  2c0e                      DEFW    C475A                   ; illegal function call
 10158  38a7  3f39                      DEFW    J726D                   ;
 10159  38a9  2c0e                      DEFW    C475A                   ; illegal function call
 10160  38ab  4e39                      DEFW    J727C                   ;
 10161                          
 10162  38ad  e5                C71DB:  push    hl
 10163  38ae  d5                        push    de
 10164  38af  010600                    ld      bc,6
 10165  38b2  09                        add     hl,bc
 10166  38b3  af                        xor     a
 10167  38b4  77                        ld      (hl),a
 10168  38b5  32b1fc                    ld      (CASPRV),a
 10169  38b8  cd9f39                    call    C72CD
 10170  38bb  fe04                      cp      $04
 10171  38bd  ca3d35                    jp      z,J6E6B
 10172  38c0  fe01                      cp      $01
 10173  38c2  2809                      jr      z,A71FB
 10174  38c4  3eea                      ld      a,$EA
 10175  38c6  cdf737                    call    A7125
 10176  38c9  d1                A71F7:  pop     de
 10177  38ca  e1                        pop     hl
 10178  38cb  18c3                      jr      J71BE
 10179                          ;
 10180  38cd  0eea              A71FB:  ld      c,$EA
 10181  38cf  cd8a37                    call    A70B8
 10182  38d2  cd0000                    call    TAPIOF
 10183  38d5  18f2                      jr      A71F7
 10184                          
 10185  38d7  7e                J7205:  ld      a,(hl)
 10186  38d8  fe01                      cp      $01
 10187  38da  281b                      jr      z,A7225
 10188  38dc  3e1a                      ld      a,$1A
 10189  38de  e5                        push    hl
 10190  38df  cd5d39                    call    A728B
 10191  38e2  cc0139                    call    z,A722F
 10192  38e5  e1                        pop     hl
 10193  38e6  cd5339                    call    A7281
 10194  38e9  280c                      jr      z,A7225
 10195  38eb  e5                        push    hl
 10196  38ec  09                        add     hl,bc
 10197  38ed  361a              A721B:  ld      (hl),$1A
 10198  38ef  23                        inc     hl
 10199  38f0  0c                        inc     c
 10200  38f1  20fa                      jr      nz,A721B
 10201  38f3  e1                        pop     hl
 10202  38f4  cd0139                    call    A722F
 10203  38f7  af                A7225:  xor     a
 10204  38f8  32b1fc                    ld      (CASPRV),a
 10205  38fb  c9                        ret
 10206                          
 10207  38fc  79                J722A:  ld      a,c
 10208  38fd  cd5d39                    call    A728B
 10209  3900  c0                        ret     nz
 10210  3901  af                A722F:  xor     a
 10211  3902  cdca39                    call    C72F8
 10212  3905  0600                      ld      b,$00
 10213  3907  7e                A7235:  ld      a,(hl)
 10214  3908  cdb039                    call    C72DE
 10215  390b  23                        inc     hl
 10216  390c  10f9                      djnz    A7235
 10217  390e  c30000                    jp      TAPOOF
 10218                          ;
 10219  3911  eb                C723F:  ex      de,hl
 10220  3912  21b1fc                    ld      hl,CASPRV
 10221  3915  cd9039                    call    C72BE
 10222  3918  eb                        ex      de,hl
 10223  3919  cd6d39                    call    A729B
 10224  391c  2014                      jr      nz,A7260
 10225  391e  e5                        push    hl
 10226  391f  cdbb39                    call    C72E9
 10227  3922  e1                        pop     hl
 10228  3923  0600                      ld      b,$00
 10229  3925  cda639            A7253:  call    C72D4
 10230  3928  77                        ld      (hl),a
 10231  3929  23                        inc     hl
 10232  392a  10f9                      djnz    A7253
 10233  392c  cd0000                    call    TAPIOF
 10234  392f  25                        dec     h
 10235  3930  af                        xor     a
 10236  3931  47                        ld      b,a
 10237  3932  4f                A7260:  ld      c,a
 10238  3933  09                        add     hl,bc
 10239  3934  7e                        ld      a,(hl)
 10240  3935  fe1a                      cp      $1A
 10241  3937  37                        scf
 10242  3938  3f                        ccf
 10243  3939  c0                        ret     nz
 10244  393a  32b1fc                    ld      (CASPRV),a
 10245  393d  37                        scf
 10246  393e  c9                        ret
 10247                          
 10248  393f  cd1139            J726D:  call    C723F
 10249  3942  21b1fc                    ld      hl,CASPRV
 10250  3945  77                        ld      (hl),a
 10251  3946  d61a                      sub     $1A
 10252  3948  d601                      sub     $01
 10253  394a  9f                        sbc     a,a
 10254  394b  c30000                    jp      C2E9A
 10255                          
 10256  394e  21b1fc            J727C:  ld      hl,CASPRV
 10257  3951  71                        ld      (hl),c
 10258  3952  c9                        ret
 10259                          ;
 10260  3953  010600            A7281:  ld      bc,6
 10261  3956  09                        add     hl,bc
 10262  3957  7e                        ld      a,(hl)
 10263  3958  4f                        ld      c,a
 10264  3959  3600                      ld      (hl),$00
 10265  395b  1816                      jr      A72A1
 10266                          ;
 10267  395d  5f                A728B:  ld      e,a
 10268  395e  010600                    ld      bc,6
 10269  3961  09                        add     hl,bc
 10270  3962  7e                        ld      a,(hl)
 10271  3963  34                        inc     (hl)
 10272  3964  23                        inc     hl
 10273  3965  23                        inc     hl
 10274  3966  23                        inc     hl
 10275  3967  e5                        push    hl
 10276  3968  4f                        ld      c,a
 10277  3969  09                        add     hl,bc
 10278  396a  73                        ld      (hl),e
 10279  396b  e1                        pop     hl
 10280  396c  c9                        ret
 10281                          ;
 10282  396d  010600            A729B:  ld      bc,6
 10283  3970  09                        add     hl,bc
 10284  3971  7e                        ld      a,(hl)
 10285  3972  34                        inc     (hl)
 10286  3973  23                A72A1:  inc     hl
 10287  3974  23                        inc     hl
 10288  3975  23                        inc     hl
 10289  3976  a7                        and     a
 10290  3977  c9                        ret
 10291                          
 10292                          
 10293                          ;       Table LPT device
 10294                          
 10295  3978  8838              C72A6:  DEFW    J71B6                   ; open, check if output/append and open
 10296  397a  9438                      DEFW    J71C2                   ; close, quit
 10297  397c  5835                      DEFW    J6E86                   ; random, sequential i/o only error
 10298  397e  8c39                      DEFW    J72BA                   ; output, output char to printer
 10299  3980  2c0e                      DEFW    C475A                   ; input, illegal function call
 10300  3982  2c0e                      DEFW    C475A                   ; illegal function call
 10301  3984  2c0e                      DEFW    C475A                   ; illegal function call
 10302  3986  2c0e                      DEFW    C475A                   ; illegal function call
 10303  3988  2c0e                      DEFW    C475A                   ; illegal function call
 10304  398a  2c0e                      DEFW    C475A                   ; illegal function call
 10305                          
 10306  398c  79                J72BA:  LD      A,C
 10307  398d  c30000                    JP      OUTDLP
 10308                          
 10309                          ;       Subroutine      get cassette putback character if any
 10310                          ;       Inputs          ________________________
 10311                          ;       Outputs         ________________________
 10312                          
 10313  3990  7e                C72BE:  LD      A,(HL)
 10314  3991  3600                      LD      (HL),0
 10315  3993  a7                        AND     A
 10316  3994  c8                        RET     Z
 10317  3995  33                        INC     SP
 10318  3996  33                        INC     SP
 10319  3997  fe1a                      CP      $1A
 10320  3999  37                        SCF
 10321  399a  3f                        CCF
 10322  399b  c0                        RET     NZ
 10323  399c  77                        LD      (HL),A
 10324  399d  37                        SCF
 10325  399e  c9                        RET
 10326                          
 10327                          ;       Subroutine      bad filename error if random mode
 10328                          ;       Inputs          ________________________
 10329                          ;       Outputs         ________________________
 10330                          
 10331  399f  7b                C72CD:  LD      A,E
 10332  39a0  fe08                      CP      8
 10333  39a2  ca3d35                    JP      Z,J6E6B                 ; bad filename
 10334  39a5  c9                        RET
 10335                          
 10336                          ;       Subroutine      read character from cassette
 10337                          ;       Inputs          ________________________
 10338                          ;       Outputs         ________________________
 10339                          
 10340  39a6  e5                C72D4:  PUSH    HL
 10341  39a7  d5                        PUSH    DE
 10342  39a8  c5                        PUSH    BC
 10343  39a9  cd0000                    CALL    TAPIN
 10344  39ac  3024                      JR      NC,J7300
 10345  39ae  1814                      JR      J72F2
 10346                          
 10347                          ;       Subroutine      write character to cassette
 10348                          ;       Inputs          ________________________
 10349                          ;       Outputs         ________________________
 10350                          
 10351  39b0  e5                C72DE:  PUSH    HL
 10352  39b1  d5                        PUSH    DE
 10353  39b2  c5                        PUSH    BC
 10354  39b3  f5                        PUSH    AF
 10355  39b4  cd0000                    CALL    TAPOUT
 10356  39b7  3018                      JR      NC,J72FF
 10357  39b9  1809                      JR      J72F2
 10358                          
 10359                          ;       Subroutine      start cassette input
 10360                          ;       Inputs          ________________________
 10361                          ;       Outputs         ________________________
 10362                          
 10363  39bb  e5                C72E9:  PUSH    HL
 10364  39bc  d5                        PUSH    DE
 10365  39bd  c5                        PUSH    BC
 10366  39be  f5                        PUSH    AF
 10367  39bf  cd0000                    CALL    TAPION
 10368  39c2  300d                      JR      NC,J72FF
 10369  39c4  cd0000            J72F2:  CALL    TAPIOF
 10370  39c7  c3843a                    JP      J73B2                   ; device I/O error
 10371                          
 10372                          ;       Subroutine      start cassette output
 10373                          ;       Inputs          ________________________
 10374                          ;       Outputs         ________________________
 10375                          
 10376  39ca  e5                C72F8:  PUSH    HL
 10377  39cb  d5                        PUSH    DE
 10378  39cc  c5                        PUSH    BC
 10379  39cd  f5                        PUSH    AF
 10380  39ce  cd0000                    CALL    TAPOON
 10381  39d1  f1                J72FF:  POP     AF
 10382  39d2  c1                J7300:  POP     BC
 10383  39d3  d1                        POP     DE
 10384  39d4  e1                        POP     HL
 10385  39d5  c9                        RET
 10386                          
 10387                          ;       Subroutine      end printeroutput
 10388                          ;       Inputs          ________________________
 10389                          ;       Outputs         ________________________
 10390                          
 10391  39d6  af                C7304:  XOR     A
 10392  39d7  3216f4                    LD      (PRTFLG),A              ; interpreter output to screen
 10393  39da  3a15f4                    LD      A,(LPTPOS)
 10394  39dd  b7                        OR      A
 10395  39de  c8                        RET     Z
 10396  39df  3e0d                      LD      A,$D
 10397  39e1  cdee39                    CALL    C731C
 10398  39e4  3e0a                      LD      A,$A
 10399  39e6  cdee39                    CALL    C731C
 10400  39e9  af                        XOR     A
 10401  39ea  3215f4                    LD      (LPTPOS),A
 10402  39ed  c9                        RET
 10403                          
 10404                          ;       Subroutine      __________________________
 10405                          ;       Inputs          ________________________
 10406                          ;       Outputs         ________________________
 10407                          
 10408                          
 10409  39ee  cd0000            C731C:  CALL    LPTOUT
 10410  39f1  d0                        RET     NC
 10411  39f2  c3843a                    JP      J73B2                   ; device I/O error
 10412                          
 10413                          ;       Subroutine      fresh line to interpreter output
 10414                          ;       Inputs          ________________________
 10415                          ;       Outputs         ________________________
 10416                          
 10417  39f5  3a61f6            C7323:  LD      A,(TTYPOS)
 10418  39f8  b7                        OR      A
 10419  39f9  c8                        RET     Z
 10420                          
 10421                          ;       Subroutine      newline to interpreter output
 10422                          ;       Inputs          ________________________
 10423                          ;       Outputs         ________________________
 10424                          
 10425  39fa  cde9fe            C7328:  CALL    H_CRDO
 10426  39fd  3e0d                      LD      A,$D
 10427  39ff  df                        RST     OUTDO
 10428  3a00  3e0a                      LD      A,$A
 10429  3a02  df                        RST     OUTDO
 10430                          
 10431                          ;       Subroutine      interpreter output pos = 0
 10432                          ;       Inputs          ________________________
 10433                          ;       Outputs         ________________________
 10434                          
 10435  3a03  cd0000            C7331:  CALL    ISFLIO                  ; interpreter input/output device = file ?
 10436  3a06  2802                      JR      Z,J7338                 ; nope,
 10437  3a08  af                        XOR     A
 10438  3a09  c9                        RET
 10439                          
 10440  3a0a  3a16f4            J7338:  LD      A,(PRTFLG)
 10441  3a0d  b7                        OR      A                       ; interpreter output to screen ?
 10442  3a0e  2805                      JR      Z,J7343                 ; yep, ttypos = 0
 10443  3a10  af                        XOR     A
 10444  3a11  3215f4                    LD      (LPTPOS),A              ; nope, lptpos = 0
 10445  3a14  c9                        RET
 10446                          
 10447  3a15  3261f6            J7343:  LD      (TTYPOS),A
 10448  3a18  c9                        RET
 10449                          
 10450                          ;       Subroutine      INKEY$ function
 10451                          ;       Inputs          ________________________
 10452                          ;       Outputs         ________________________
 10453                          
 10454  3a19  d7                J7347:  RST     CHRGTR                  ; get next BASIC character
 10455  3a1a  e5                        PUSH    HL
 10456  3a1b  cd0000                    CALL    CHSNS
 10457  3a1e  280c                      JR      Z,J735A
 10458  3a20  cd0000                    CALL    CHGET
 10459  3a23  f5                        PUSH    AF
 10460  3a24  cdf72c                    CALL    C6625                   ; allocate temporary string of 1 char
 10461  3a27  f1                        POP     AF
 10462  3a28  5f                        LD      E,A
 10463  3a29  cdf32e                    CALL    C6821                   ; set first character of temporary string and put on heap and quit
 10464  3a2c  21a806            J735A:  LD      HL,I3FD6
 10465  3a2f  22f8f7                    LD      (DAC+2),HL
 10466  3a32  3e03                      LD      A,3
 10467  3a34  3263f6                    LD      (VALTYP),A              ; empty string
 10468  3a37  e1                        POP     HL
 10469  3a38  c9                        RET
 10470                          
 10471                          ;       Subroutine      char to interpreter output, LF expanded
 10472                          ;       Inputs          ________________________
 10473                          ;       Outputs         ________________________
 10474                          
 10475  3a39  df                C7367:  RST     OUTDO
 10476  3a3a  fe0a                      CP      $A
 10477  3a3c  c0                        RET     NZ
 10478  3a3d  3e0d                      LD      A,$D
 10479  3a3f  df                        RST     OUTDO
 10480  3a40  cd033a                    CALL    C7331                   ; interpreter output pos = 0
 10481  3a43  3e0a                      LD      A,$A
 10482  3a45  c9                        RET
 10483                          
 10484                          ;       Subroutine      get line from interpreter input file
 10485                          ;       Inputs          ________________________
 10486                          ;       Outputs         ________________________
 10487                          
 10488  3a46  cdeefe            C7374:  CALL    H_DSKC
 10489  3a49  06ff                      LD      B,255
 10490  3a4b  215ef5                    LD      HL,BUF
 10491  3a4e  cd4333            J737C:  CALL    C6C71                   ; get sequential input
 10492  3a51  3816                      JR      C,J7397
 10493  3a53  77                        LD      (HL),A
 10494  3a54  fe0d                      CP      $D                     ; CR ?
 10495  3a56  280b                      JR      Z,J7391                 ; yep, stop input
 10496  3a58  fe09                      CP      $9                     ; TAB ?
 10497  3a5a  2804                      JR      Z,J738E                 ; yep, continue
 10498  3a5c  fe0a                      CP      $A                     ; LF ?
 10499  3a5e  28ee                      JR      Z,J737C                 ; yep, ignore
 10500  3a60  23                J738E:  INC     HL
 10501  3a61  10eb                      DJNZ    J737C                   ; next
 10502  3a63  af                J7391:  XOR     A
 10503  3a64  77                        LD      (HL),A                  ; endmarker
 10504  3a65  215df5                    LD      HL,BUFMIN
 10505  3a68  c9                        RET
 10506                          
 10507  3a69  04                J7397:  INC     B                       ; empty line ?
 10508  3a6a  20f7                      JR      NZ,J7391                ; nope, return line
 10509  3a6c  3a7cf8            C739A:  LD      A,(NLONLY)
 10510  3a6f  e680                      AND     $80
 10511  3a71  327cf8                    LD      (NLONLY),A              ; basic program not loading
 10512  3a74  cd4d34                    CALL    C6D7B                   ; close i/o channel 0 and load HL from (TEMP)
 10513  3a77  3a66f8                    LD      A,(FILNAM)
 10514  3a7a  a7                        AND     A                       ; RUN after LOAD ?
 10515  3a7b  caf007                    JP      Z,J411E                 ; nope, ok and mainloop (+POP)
 10516  3a7e  cd6c29                    CALL    C629A                   ; initialize interpreter, basic pointer at start of program
 10517  3a81  c3d30c                    JP      C4601                   ; execute new statement
 10518                          
 10519                          ;       Subroutine      device I/O error
 10520                          ;       Inputs          ________________________
 10521                          ;       Outputs         ________________________
 10522                          
 10523  3a84  1e13              J73B2:  LD      E,19
 10524  3a86  c34107                    JP      J406F                   ; device i/o error
 10525                          
 10526                          ;       Subroutine      MOTOR statement
 10527                          ;       Inputs          ________________________
 10528                          ;       Outputs         ________________________
 10529                          
 10530  3a89  1eff              C73B7:  ld      e,$FF
 10531  3a8b  280b                      jr      z,A73C6                 ; end of statement, toggle
 10532  3a8d  d6eb                      sub     $EB
 10533  3a8f  5f                        ld      e,a                     ; OFF token ?
 10534  3a90  2805                      jr      z,A73C5                 ; yep, off
 10535  3a92  cf                        rst     SYNCHR
 10536  3a93  95                        db      $95                    ; ON must follow
 10537  3a94  1e01                      ld      e,$01                  ; on
 10538  3a96  3e                        db      $3E
 10539  3a97  d7                A73C5:  rst     CHRGTR
 10540  3a98  7b                A73C6:  ld      a,e
 10541  3a99  c30000                    jp      STMOTR
 10542                          
 10543                          ;       Subroutine      SOUND statement
 10544                          ;       Inputs          ________________________
 10545                          ;       Outputs         ________________________
 10546                          
 10547  3a9c  cdee18            C73CA:  CALL    C521C                   ; evaluate byte operand
 10548  3a9f  fe0e                      CP      14                      ; register 0-13 ?
 10549  3aa1  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 10550  3aa4  f5                        PUSH    AF
 10551  3aa5  cf                        RST     SYNCHR
 10552  3aa6  2c                        DEFB    ','                     ; check for ,
 10553  3aa7  cdee18                    CALL    C521C                   ; evaluate byte operand
 10554  3aaa  f1                        POP     AF
 10555  3aab  fe07                      CP      7                       ; register 7 ?
 10556  3aad  2004                      JR      NZ,J73E1                ; nope, write PSG register
 10557  3aaf  cbb3                      RES     6,E
 10558  3ab1  cbfb                      SET     7,E                     ; make sure PSG I/O port definition is not changed
 10559  3ab3  c30000            J73E1:  JP      WRTPSG                  ; write PSG register
 10560                          
 10561  3ab6  20                I73E4:  DEFB    ' '
 10562                          
 10563                          ;       Subroutine      PLAY statement
 10564                          ;       Inputs          ________________________
 10565                          ;       Outputs         ________________________
 10566                          
 10567                          
 10568  3ab7  cdc5ff            C73E5:  CALL    H_PLAY
 10569  3aba  e5                        PUSH    HL
 10570  3abb  21003c                    LD      HL,I752E
 10571  3abe  2256f9                    LD      (MCLTAB),HL
 10572  3ac1  3e00                      LD      A,0
 10573  3ac3  3235fb                    LD      (PRSCNT),A
 10574  3ac6  21f6ff                    LD      HL,-10
 10575  3ac9  39                        ADD     HL,SP
 10576  3aca  2236fb                    LD      (SAVSP),HL
 10577  3acd  e1                        POP     HL
 10578  3ace  f5                        PUSH    AF
 10579  3acf  cd3613            J73FD:  CALL    C4C64                   ; evaluate expression
 10580  3ad2  e3                        EX      (SP),HL
 10581  3ad3  e5                        PUSH    HL
 10582  3ad4  cda22e                    CALL    C67D0                   ; free temporary string with type check
 10583  3ad7  cd0000                    CALL    C2EDF                   ; load from HL
 10584  3ada  7b                        LD      A,E
 10585  3adb  b7                        OR      A                       ; stringsize zero ?
 10586  3adc  2007                      JR      NZ,J7413                ; nope,
 10587  3ade  1e01                      LD      E,1
 10588  3ae0  01b63a                    LD      BC,I73E4
 10589  3ae3  51                        LD      D,C
 10590  3ae4  48                        LD      C,B
 10591  3ae5  f1                J7413:  POP     AF
 10592  3ae6  f5                        PUSH    AF
 10593  3ae7  cd0000                    CALL    GETVCP
 10594  3aea  73                        LD      (HL),E                  ; stringsize
 10595  3aeb  23                        INC     HL
 10596  3aec  72                        LD      (HL),D
 10597  3aed  23                        INC     HL
 10598  3aee  71                        LD      (HL),C                  ; pointer
 10599  3aef  23                        INC     HL
 10600  3af0  54                        LD      D,H
 10601  3af1  5d                        LD      E,L
 10602  3af2  011c00                    LD      BC,$001C
 10603  3af5  09                        ADD     HL,BC
 10604  3af6  eb                        EX      DE,HL
 10605  3af7  73                        LD      (HL),E
 10606  3af8  23                        INC     HL
 10607  3af9  72                        LD      (HL),D
 10608  3afa  c1                        POP     BC
 10609  3afb  e1                        POP     HL
 10610  3afc  04                        INC     B
 10611  3afd  78                        LD      A,B
 10612  3afe  fe03                      CP      $3
 10613  3b00  3016                      JR      NC,J7446
 10614  3b02  2b                        DEC     HL
 10615  3b03  d7                        RST     CHRGTR                  ; get next BASIC character
 10616  3b04  2805                      JR      Z,J7439
 10617  3b06  c5                        PUSH    BC
 10618  3b07  cf                        RST     SYNCHR
 10619  3b08  2c                        DEFB    ','                     ; check for ,
 10620  3b09  18c4                      JR      J73FD
 10621                          
 10622  3b0b  78                J7439:  LD      A,B
 10623  3b0c  3238fb                    LD      (VOICEN),A
 10624  3b0f  cdd93b                    CALL    C7507
 10625  3b12  04                        INC     B
 10626  3b13  78                        LD      A,B
 10627  3b14  fe03                      CP      $3
 10628  3b16  38f3                      JR      C,J7439
 10629  3b18  2b                J7446:  DEC     HL
 10630  3b19  d7                        RST     CHRGTR                  ; end of statement ?
 10631  3b1a  c22707                    JP      NZ,J4055                ; nope, syntax error
 10632  3b1d  e5                        PUSH    HL
 10633  3b1e  af                J744C:  XOR     A
 10634  3b1f  f5                J744D:  PUSH    AF
 10635  3b20  3238fb                    LD      (VOICEN),A
 10636  3b23  47                        LD      B,A
 10637  3b24  cdf33b                    CALL    C7521
 10638  3b27  daa83b                    JP      C,J74D6
 10639  3b2a  78                        LD      A,B
 10640  3b2b  cd0000                    CALL    GETVCP
 10641  3b2e  7e                        LD      A,(HL)
 10642  3b2f  b7                        OR      A
 10643  3b30  caa83b                    JP      Z,J74D6
 10644  3b33  323bfb                    LD      (MCLLEN),A
 10645  3b36  23                        INC     HL
 10646  3b37  5e                        LD      E,(HL)
 10647  3b38  23                        INC     HL
 10648  3b39  56                        LD      D,(HL)
 10649  3b3a  23                        INC     HL
 10650  3b3b  ed533cfb                  LD      (MCLPTR),DE
 10651  3b3f  5e                        LD      E,(HL)
 10652  3b40  23                        INC     HL
 10653  3b41  56                        LD      D,(HL)
 10654  3b42  23                        INC     HL
 10655  3b43  e5                        PUSH    HL
 10656  3b44  2e24                      LD      L,$24
 10657  3b46  cd0000                    CALL    GETVC2
 10658  3b49  e5                        PUSH    HL
 10659  3b4a  2a36fb                    LD      HL,(SAVSP)
 10660  3b4d  2b                        DEC     HL
 10661  3b4e  c1                        POP     BC
 10662  3b4f  f3                        DI
 10663  3b50  cd2529                    CALL    C6253                   ; move data
 10664  3b53  d1                        POP     DE
 10665  3b54  60                        LD      H,B
 10666  3b55  69                        LD      L,C
 10667  3b56  f9                        LD      SP,HL
 10668  3b57  fb                        EI
 10669  3b58  3eff                      LD      A,$FF
 10670  3b5a  3258f9                    LD      (MCLFLG),A
 10671  3b5d  c3741d                    JP      J56A2
 10672                          
 10673  3b60  3a3bfb            J748E:  LD      A,(MCLLEN)
 10674  3b63  b7                        OR      A
 10675  3b64  2003                      JR      NZ,J7497
 10676  3b66  cdd93b            J7494:  CALL    C7507
 10677  3b69  3a38fb            J7497:  LD      A,(VOICEN)
 10678  3b6c  cd0000                    CALL    GETVCP
 10679  3b6f  3a3bfb                    LD      A,(MCLLEN)
 10680  3b72  77                        LD      (HL),A
 10681  3b73  23                        INC     HL
 10682  3b74  ed5b3cfb                  LD      DE,(MCLPTR)
 10683  3b78  73                        LD      (HL),E
 10684  3b79  23                        INC     HL
 10685  3b7a  72                        LD      (HL),D
 10686  3b7b  210000                    LD      HL,0
 10687  3b7e  39                        ADD     HL,SP
 10688  3b7f  eb                        EX      DE,HL
 10689  3b80  2a36fb                    LD      HL,(SAVSP)
 10690  3b83  f3                        DI
 10691  3b84  f9                        LD      SP,HL
 10692  3b85  c1                        POP     BC
 10693  3b86  c1                        POP     BC
 10694  3b87  c1                        POP     BC
 10695  3b88  e5                        PUSH    HL
 10696  3b89  b7                        OR      A
 10697  3b8a  ed52                      SBC     HL,DE
 10698  3b8c  2818                      JR      Z,J74D4
 10699  3b8e  3ef0                      LD      A,$F0
 10700  3b90  a5                        AND     L
 10701  3b91  b4                        OR      H
 10702  3b92  c22c0e                    JP      NZ,C475A                ; illegal function call
 10703  3b95  2e24                      LD      L,$24
 10704  3b97  cd0000                    CALL    GETVC2
 10705  3b9a  c1                        POP     BC
 10706  3b9b  0b                        DEC     BC
 10707  3b9c  cd2529                    CALL    C6253                   ; move data
 10708  3b9f  e1                        POP     HL
 10709  3ba0  2b                        DEC     HL
 10710  3ba1  70                        LD      (HL),B
 10711  3ba2  2b                        DEC     HL
 10712  3ba3  71                        LD      (HL),C
 10713  3ba4  1802                      JR      J74D6
 10714                          
 10715  3ba6  c1                J74D4:  POP     BC
 10716  3ba7  c1                        POP     BC
 10717  3ba8  fb                J74D6:  EI
 10718  3ba9  f1                        POP     AF
 10719  3baa  3c                        INC     A
 10720  3bab  fe03                      CP      $3
 10721  3bad  da1f3b                    JP      C,J744D
 10722  3bb0  f3                        DI
 10723  3bb1  3a9bfc                    LD      A,(INTFLG)
 10724  3bb4  fe03                      CP      $3
 10725  3bb6  281c                      JR      Z,J7502
 10726  3bb8  3a35fb                    LD      A,(PRSCNT)
 10727  3bbb  07                        RLCA
 10728  3bbc  3807                      JR      C,J74F3
 10729  3bbe  2140fb                    LD      HL,PLYCNT
 10730  3bc1  34                        INC     (HL)
 10731  3bc2  cd0000                    CALL    STRTMS
 10732  3bc5  fb                J74F3:  EI
 10733  3bc6  2135fb                    LD      HL,PRSCNT
 10734  3bc9  7e                        LD      A,(HL)
 10735  3bca  f680                      OR      $80
 10736  3bcc  77                        LD      (HL),A
 10737  3bcd  fe83                      CP      $83
 10738  3bcf  c21e3b                    JP      NZ,J744C
 10739  3bd2  e1                J7500:  POP     HL
 10740  3bd3  c9                        RET
 10741                          
 10742  3bd4  cd0000            J7502:  CALL    GICINI
 10743  3bd7  18f9                      JR      J7500
 10744                          
 10745                          
 10746                          ;       Subroutine      __________________________
 10747                          ;       Inputs          ________________________
 10748                          ;       Outputs         ________________________
 10749                          
 10750                          
 10751  3bd9  3a35fb            C7507:  LD      A,(PRSCNT)
 10752  3bdc  3c                        INC     A
 10753  3bdd  3235fb                    LD      (PRSCNT),A
 10754  3be0  1eff                      LD      E,$FF
 10755                          
 10756                          
 10757                          ;       Subroutine      __________________________
 10758                          ;       Inputs          ________________________
 10759                          ;       Outputs         ________________________
 10760                          
 10761                          
 10762  3be2  e5                C7510:  PUSH    HL
 10763  3be3  c5                        PUSH    BC
 10764  3be4  d5                J7512:  PUSH    DE
 10765  3be5  3a38fb                    LD      A,(VOICEN)
 10766  3be8  f3                        DI
 10767  3be9  cd0000                    CALL    PUTQ
 10768  3bec  fb                        EI
 10769  3bed  d1                        POP     DE
 10770  3bee  28f4                      JR      Z,J7512
 10771  3bf0  c1                        POP     BC
 10772  3bf1  e1                        POP     HL
 10773  3bf2  c9                        RET
 10774                          
 10775                          
 10776                          ;       Subroutine      __________________________
 10777                          ;       Inputs          ________________________
 10778                          ;       Outputs         ________________________
 10779                          
 10780                          
 10781  3bf3  3a38fb            C7521:  LD      A,(VOICEN)
 10782  3bf6  c5                        PUSH    BC
 10783  3bf7  f3                        DI
 10784  3bf8  cd0000                    CALL    LFTQ
 10785  3bfb  fb                        EI
 10786  3bfc  c1                        POP     BC
 10787  3bfd  fe08                      CP      8
 10788  3bff  c9                        RET
 10789                          
 10790  3c00  41                I752E:  DEFB    'A'
 10791  3c01  103d                      DEFW    C763E
 10792  3c03  42                        DEFB    'B'
 10793  3c04  103d                      DEFW    C763E
 10794  3c06  43                        DEFB    'C'
 10795  3c07  103d                      DEFW    C763E
 10796  3c09  44                        DEFB    'D'
 10797  3c0a  103d                      DEFW    C763E
 10798  3c0c  45                        DEFB    'E'
 10799  3c0d  103d                      DEFW    C763E
 10800  3c0f  46                        DEFB    'F'
 10801  3c10  103d                      DEFW    C763E
 10802  3c12  47                        DEFB    'G'
 10803  3c13  103d                      DEFW    C763E
 10804  3c15  cd                        DEFB    'M'+128
 10805  3c16  703c                      DEFW    C759E
 10806  3c18  d6                        DEFB    'V'+128
 10807  3c19  583c                      DEFW    C7586
 10808  3c1b  d3                        DEFB    'S'+128
 10809  3c1c  903c                      DEFW    C75BE
 10810  3c1e  ce                        DEFB    'N'+128
 10811  3c1f  f33c                      DEFW    C7621
 10812  3c21  cf                        DEFB    'O'+128
 10813  3c22  c13c                      DEFW    C75EF
 10814  3c24  d2                        DEFB    'R'+128
 10815  3c25  ce3c                      DEFW    C75FC
 10816  3c27  d4                        DEFB    'T'+128
 10817  3c28  b43c                      DEFW    C75E2
 10818  3c2a  cc                        DEFB    'L'+128
 10819  3c2b  9a3c                      DEFW    C75C8
 10820  3c2d  58                        DEFB    'X'
 10821  3c2e  541e                      DEFW    C5782
 10822  3c30  00                        DEFB    0
 10823                          
 10824  3c31  1012141600000204  I755F:  DEFB    $10,$12,$14,$16,$00,$00,$02,$04
 10825  3c39  06080a0a0c0e10            DEFB    $06,$08,$0A,$0A,$0C,$0E,$10
 10826                          
 10827  3c40  5d0d              I756E:  DEFW    $0D5D
 10828  3c42  9c0c                      DEFW    $0C9C
 10829  3c44  e70b                      DEFW    $0BE7
 10830  3c46  3c0b                      DEFW    $0B3C
 10831  3c48  9b0a                      DEFW    $0A9B
 10832  3c4a  020a                      DEFW    $0A02
 10833  3c4c  7309                      DEFW    $0973
 10834  3c4e  eb08                      DEFW    $08EB
 10835  3c50  6b08                      DEFW    $086B
 10836  3c52  f207                      DEFW    $07F2
 10837  3c54  8007                      DEFW    $0780
 10838  3c56  1407                      DEFW    $0714
 10839                          
 10840  3c58  3802              C7586:  JR      C,J758A
 10841  3c5a  1e08                      LD      E,$8
 10842  3c5c  3e0f              J758A:  LD      A,$F
 10843  3c5e  bb                        CP      E
 10844  3c5f  3850                      JR      C,J75DF
 10845  3c61  af                J758F:  XOR     A
 10846  3c62  b2                        OR      D
 10847  3c63  204c                      JR      NZ,J75DF
 10848  3c65  2e12                      LD      L,$12
 10849  3c67  cd0000                    CALL    GETVC2
 10850  3c6a  3e40                      LD      A,$40
 10851  3c6c  a6                        AND     (HL)
 10852  3c6d  b3                        OR      E
 10853  3c6e  77                        LD      (HL),A
 10854  3c6f  c9                        RET
 10855                          
 10856                          
 10857                          ;       Subroutine      __________________________
 10858                          ;       Inputs          ________________________
 10859                          ;       Outputs         ________________________
 10860                          
 10861                          
 10862  3c70  7b                C759E:  LD      A,E
 10863  3c71  3803                      JR      C,J75A4
 10864  3c73  2f                        CPL
 10865  3c74  3c                        INC     A
 10866  3c75  5f                        LD      E,A
 10867  3c76  b2                J75A4:  OR      D
 10868  3c77  2838                      JR      Z,J75DF
 10869  3c79  2e13                      LD      L,$13
 10870  3c7b  cd0000                    CALL    GETVC2
 10871  3c7e  e5                        PUSH    HL
 10872  3c7f  7e                        LD      A,(HL)
 10873  3c80  23                        INC     HL
 10874  3c81  66                        LD      H,(HL)
 10875  3c82  6f                        LD      L,A
 10876  3c83  e7                        RST     DCOMPR
 10877  3c84  e1                        POP     HL
 10878  3c85  c8                        RET     Z
 10879  3c86  73                        LD      (HL),E
 10880  3c87  23                        INC     HL
 10881  3c88  72                        LD      (HL),D
 10882  3c89  2b                        DEC     HL
 10883  3c8a  2b                        DEC     HL
 10884  3c8b  3e40                      LD      A,$40
 10885  3c8d  b6                        OR      (HL)
 10886  3c8e  77                        LD      (HL),A
 10887  3c8f  c9                        RET
 10888                          
 10889  3c90  7b                C75BE:  LD      A,E
 10890  3c91  fe10                      CP      $10
 10891  3c93  301c                      JR      NC,J75DF
 10892  3c95  f610                      OR      $10
 10893  3c97  5f                        LD      E,A
 10894  3c98  18c7                      JR      J758F
 10895                          
 10896                          
 10897                          ;       Subroutine      __________________________
 10898                          ;       Inputs          ________________________
 10899                          ;       Outputs         ________________________
 10900                          
 10901                          
 10902  3c9a  3802              C75C8:  JR      C,J75CC
 10903  3c9c  1e04                      LD      E,4
 10904  3c9e  7b                J75CC:  LD      A,E
 10905  3c9f  fe41                      CP      64+1
 10906  3ca1  300e                      JR      NC,J75DF
 10907  3ca3  2e10                      LD      L,$10
 10908  3ca5  cd0000            J75D3:  CALL    GETVC2
 10909  3ca8  af                        XOR     A
 10910  3ca9  b2                        OR      D
 10911  3caa  2005                      JR      NZ,J75DF
 10912  3cac  b3                        OR      E
 10913  3cad  2802                      JR      Z,J75DF
 10914  3caf  77                        LD      (HL),A
 10915  3cb0  c9                        RET
 10916                          
 10917  3cb1  cd2c0e            J75DF:  CALL    C475A                   ; illegal function call
 10918                          
 10919                          ;       Subroutine      __________________________
 10920                          ;       Inputs          ________________________
 10921                          ;       Outputs         ________________________
 10922                          
 10923  3cb4  3802              C75E2:  JR      C,J75E6
 10924  3cb6  1e78                      LD      E,120
 10925  3cb8  7b                J75E6:  LD      A,E
 10926  3cb9  fe20                      CP      32
 10927  3cbb  38f4                      JR      C,J75DF
 10928  3cbd  2e11                      LD      L,$11
 10929  3cbf  18e4                      JR      J75D3
 10930                          
 10931  3cc1  3802              C75EF:  JR      C,J75F3
 10932  3cc3  1e04                      LD      E,4
 10933  3cc5  7b                J75F3:  LD      A,E
 10934  3cc6  fe09                      CP      8+1
 10935  3cc8  30e7                      JR      NC,J75DF
 10936  3cca  2e0f                      LD      L,$F
 10937  3ccc  18d7                      JR      J75D3
 10938                          
 10939  3cce  3802              C75FC:  JR      C,J7600
 10940  3cd0  1e04                      LD      E,4
 10941  3cd2  af                J7600:  XOR     A
 10942  3cd3  b2                        OR      D
 10943  3cd4  20db                      JR      NZ,J75DF
 10944  3cd6  b3                        OR      E
 10945  3cd7  28d8                      JR      Z,J75DF
 10946  3cd9  fe41                      CP      64+1
 10947  3cdb  30d4                      JR      NC,J75DF
 10948  3cdd  210000            J760B:  LD      HL,0
 10949  3ce0  e5                        PUSH    HL
 10950  3ce1  2e10                      LD      L,$10
 10951  3ce3  cd0000                    CALL    GETVC2
 10952  3ce6  e5                        PUSH    HL
 10953  3ce7  23                        INC     HL
 10954  3ce8  23                        INC     HL
 10955  3ce9  7e                        LD      A,(HL)
 10956  3cea  3239fb                    LD      (SAVVOL),A
 10957  3ced  3680                      LD      (HL),$80
 10958  3cef  2b                        DEC     HL
 10959  3cf0  2b                        DEC     HL
 10960  3cf1  187b                      JR      J769C
 10961                          
 10962  3cf3  30bc              C7621:  JR      NC,J75DF
 10963  3cf5  af                        XOR     A
 10964  3cf6  b2                        OR      D
 10965  3cf7  20b8                      JR      NZ,J75DF
 10966  3cf9  b3                        OR      E
 10967  3cfa  28e1                      JR      Z,J760B
 10968  3cfc  fe61                      CP      96+1
 10969  3cfe  30b1                      JR      NC,J75DF
 10970  3d00  7b                        LD      A,E
 10971  3d01  0600                      LD      B,$0
 10972  3d03  58                        LD      E,B
 10973  3d04  d60c              J7632:  SUB     12
 10974  3d06  1c                        INC     E
 10975  3d07  30fb                      JR      NC,J7632
 10976  3d09  c60c                      ADD     A,12
 10977  3d0b  87                        ADD     A,A
 10978  3d0c  4f                        LD      C,A
 10979  3d0d  c3453d                    JP      J7673
 10980                          
 10981  3d10  41                C763E:  LD      B,C
 10982  3d11  79                        LD      A,C
 10983  3d12  d640                      SUB     $40
 10984  3d14  87                        ADD     A,A
 10985  3d15  4f                        LD      C,A
 10986  3d16  cdc01d                    CALL    C56EE
 10987  3d19  281c                      JR      Z,J7665
 10988  3d1b  fe23                      CP      '#'
 10989  3d1d  2819                      JR      Z,J7666
 10990  3d1f  fe2b                      CP      '+'
 10991  3d21  2815                      JR      Z,J7666
 10992  3d23  fe2d                      CP      '-'
 10993  3d25  2805                      JR      Z,J765A
 10994  3d27  cddd1d                    CALL    C570B
 10995  3d2a  180b                      JR      J7665
 10996                          
 10997  3d2c  0d                J765A:  DEC     C
 10998  3d2d  78                        LD      A,B
 10999  3d2e  fe43                      CP      'C'
 11000  3d30  2804                      JR      Z,J7664
 11001  3d32  fe46                      CP      'F'
 11002  3d34  2001                      JR      NZ,J7665
 11003  3d36  0d                J7664:  DEC     C
 11004  3d37  0d                J7665:  DEC     C
 11005  3d38  2e0f              J7666:  LD      L,$F
 11006  3d3a  cd0000                    CALL    GETVC2
 11007  3d3d  5e                        LD      E,(HL)
 11008  3d3e  0600                      LD      B,$0
 11009  3d40  21313c                    LD      HL,I755F
 11010  3d43  09                        ADD     HL,BC
 11011  3d44  4e                        LD      C,(HL)
 11012  3d45  21403c            J7673:  LD      HL,I756E
 11013  3d48  09                        ADD     HL,BC
 11014  3d49  7b                        LD      A,E
 11015  3d4a  5e                        LD      E,(HL)
 11016  3d4b  23                        INC     HL
 11017  3d4c  56                        LD      D,(HL)
 11018  3d4d  3d                J767B:  DEC     A
 11019  3d4e  2809                      JR      Z,J7687
 11020  3d50  cb3a                      SRL     D
 11021  3d52  cb1b                      RR      E
 11022  3d54  18f7                      JR      J767B
 11023                          
 11024  3d56  cd2c0e            J7684:  CALL    C475A                   ; illegal function call
 11025  3d59  8b                J7687:  ADC     A,E
 11026  3d5a  5f                        LD      E,A
 11027  3d5b  8a                        ADC     A,D
 11028  3d5c  93                        SUB     E
 11029  3d5d  57                        LD      D,A
 11030  3d5e  d5                        PUSH    DE
 11031  3d5f  2e10                      LD      L,$10
 11032  3d61  cd0000                    CALL    GETVC2
 11033  3d64  4e                        LD      C,(HL)
 11034  3d65  e5                        PUSH    HL
 11035  3d66  cdc01d                    CALL    C56EE
 11036  3d69  2810                      JR      Z,J76A9
 11037  3d6b  cd011e                    CALL    C572F
 11038  3d6e  3e40              J769C:  LD      A,$40
 11039  3d70  bb                        CP      E
 11040  3d71  38e3                      JR      C,J7684
 11041  3d73  af                        XOR     A
 11042  3d74  b2                        OR      D
 11043  3d75  20df                      JR      NZ,J7684
 11044  3d77  b3                        OR      E
 11045  3d78  2801                      JR      Z,J76A9
 11046  3d7a  4b                        LD      C,E
 11047  3d7b  e1                J76A9:  POP     HL
 11048  3d7c  1600                      LD      D,$0
 11049  3d7e  42                        LD      B,D
 11050  3d7f  23                        INC     HL
 11051  3d80  5e                        LD      E,(HL)
 11052  3d81  e5                        PUSH    HL
 11053  3d82  cd0000                    CALL    C314A                   ; unsigned integer multiply
 11054  3d85  eb                        EX      DE,HL
 11055  3d86  cd0000                    CALL    C2FCB                   ; convert to single precision real
 11056  3d89  cd0000                    CALL    C2F0D                   ; ARG = DAC
 11057  3d8c  21263e                    LD      HL,I7754
 11058  3d8f  cd0000                    CALL    C2EBE                   ; DAC = (single)
 11059  3d92  cd0000                    CALL    C289F                   ; DAC / ARG
 11060  3d95  cd0000                    CALL    C2F8A                   ; convert DAC to integer
 11061  3d98  54                        LD      D,H
 11062  3d99  5d                        LD      E,L
 11063  3d9a  cdc01d            J76C8:  CALL    C56EE
 11064  3d9d  2816                      JR      Z,J76E3
 11065  3d9f  fe2e                      CP      '.'
 11066  3da1  200f                      JR      NZ,J76E0
 11067  3da3  cb3a                      SRL     D
 11068  3da5  cb1b                      RR      E
 11069  3da7  ed5a                      ADC     HL,DE
 11070  3da9  3ee0                      LD      A,$E0
 11071  3dab  a4                        AND     H
 11072  3dac  28ec                      JR      Z,J76C8
 11073  3dae  ac                        XOR     H
 11074  3daf  67                        LD      H,A
 11075  3db0  1803                      JR      J76E3
 11076                          
 11077  3db2  cddd1d            J76E0:  CALL    C570B
 11078  3db5  110500            J76E3:  LD      DE,5
 11079  3db8  e7                        RST     DCOMPR
 11080  3db9  3801                      JR      C,J76EA
 11081  3dbb  eb                        EX      DE,HL
 11082  3dbc  01f7ff            J76EA:  LD      BC,-9
 11083  3dbf  e1                        POP     HL
 11084  3dc0  e5                        PUSH    HL
 11085  3dc1  09                        ADD     HL,BC
 11086  3dc2  72                        LD      (HL),D
 11087  3dc3  23                        INC     HL
 11088  3dc4  73                        LD      (HL),E
 11089  3dc5  23                        INC     HL
 11090  3dc6  0e02                      LD      C,$2
 11091  3dc8  e3                        EX      (SP),HL
 11092  3dc9  23                        INC     HL
 11093  3dca  5e                        LD      E,(HL)
 11094  3dcb  7b                        LD      A,E
 11095  3dcc  e6bf                      AND     $BF
 11096  3dce  77                        LD      (HL),A
 11097  3dcf  e3                        EX      (SP),HL
 11098  3dd0  3e80                      LD      A,$80
 11099  3dd2  b3                        OR      E
 11100  3dd3  77                        LD      (HL),A
 11101  3dd4  23                        INC     HL
 11102  3dd5  0c                        INC     C
 11103  3dd6  e3                        EX      (SP),HL
 11104  3dd7  7b                        LD      A,E
 11105  3dd8  e640                      AND     $40
 11106  3dda  280c                      JR      Z,J7716
 11107  3ddc  23                        INC     HL
 11108  3ddd  5e                        LD      E,(HL)
 11109  3dde  23                        INC     HL
 11110  3ddf  56                        LD      D,(HL)
 11111  3de0  e1                        POP     HL
 11112  3de1  72                        LD      (HL),D
 11113  3de2  23                        INC     HL
 11114  3de3  73                        LD      (HL),E
 11115  3de4  23                        INC     HL
 11116  3de5  0c                        INC     C
 11117  3de6  0c                        INC     C
 11118  3de7  fe                        DEFB    $FE                    ; CP xx, skip next instruction
 11119  3de8  e1                J7716:  POP     HL
 11120  3de9  d1                        POP     DE
 11121  3dea  7a                        LD      A,D
 11122  3deb  b3                        OR      E
 11123  3dec  2805                      JR      Z,J7721
 11124  3dee  72                        LD      (HL),D
 11125  3def  23                        INC     HL
 11126  3df0  73                        LD      (HL),E
 11127  3df1  0c                        INC     C
 11128  3df2  0c                        INC     C
 11129  3df3  2e07              J7721:  LD      L,$7
 11130  3df5  cd0000                    CALL    GETVC2
 11131  3df8  71                        LD      (HL),C
 11132  3df9  79                        LD      A,C
 11133  3dfa  d602                      SUB     $2
 11134  3dfc  0f                        RRCA
 11135  3dfd  0f                        RRCA
 11136  3dfe  0f                        RRCA
 11137  3dff  23                        INC     HL
 11138  3e00  b6                        OR      (HL)
 11139  3e01  77                        LD      (HL),A
 11140  3e02  2b                        DEC     HL
 11141  3e03  7a                        LD      A,D
 11142  3e04  b3                        OR      E
 11143  3e05  200c                      JR      NZ,J7741
 11144  3e07  e5                        PUSH    HL
 11145  3e08  3a39fb                    LD      A,(SAVVOL)
 11146  3e0b  f680                      OR      $80
 11147  3e0d  010b00                    LD      BC,11
 11148  3e10  09                        ADD     HL,BC
 11149  3e11  77                        LD      (HL),A
 11150  3e12  e1                        POP     HL
 11151  3e13  d1                J7741:  POP     DE
 11152  3e14  46                        LD      B,(HL)
 11153  3e15  23                        INC     HL
 11154  3e16  5e                J7744:  LD      E,(HL)
 11155  3e17  23                        INC     HL
 11156  3e18  cde23b                    CALL    C7510
 11157  3e1b  10f9                      DJNZ    J7744
 11158  3e1d  cdf33b                    CALL    C7521
 11159  3e20  da603b                    JP      C,J748E
 11160  3e23  c3741d                    JP      J56A2
 11161                          
 11162                          
 11163                                  IF INTHZ = 60
 11164                          
 11165  3e26  40004514          I7754:  DEFB    $40,$00,$45,$14             ; 14400
 11166                          
 11167                                  ELSE
 11168                          
 11169                          I7754:  DEFB    $00,$00,$45,$12             ; 12000
 11170                          
 11171                                  ENDIF
 11172                          
 11173                          
 11174                          ;       Subroutine      PUT statement
 11175                          ;       Inputs          ________________________
 11176                          ;       Outputs         ________________________
 11177                          
 11178                          
 11179  3e2a  0680              C7758:  LD      B,$80                   ; PUT flag
 11180  3e2c  11                        DEFB    $11                    ; skip next instruction
 11181                          
 11182                          ;       Subroutine      GET statement
 11183                          ;       Inputs          ________________________
 11184                          ;       Outputs         ________________________
 11185                          
 11186                          
 11187  3e2d  0600              C775B:  LD      B,0
 11188  3e2f  fec7                      CP      $C7                    ; SPRITE token follows ?
 11189  3e31  ca8141                    JP      Z,J7AAF
 11190  3e34  78                J7762:  LD      A,B
 11191  3e35  c30733                    JP      J6C35                   ; do random input/output
 11192                          
 11193                          ;       Subroutine      LOCATE statement
 11194                          ;       Inputs          ________________________
 11195                          ;       Outputs         ________________________
 11196                          
 11197  3e38  ed5bdcf3          C7766:  LD      DE,(CSRY)
 11198  3e3c  d5                        PUSH    DE                      ; use current coordinates as default
 11199  3e3d  fe2c                      CP      ','                     ; x coordinate not specified ?
 11200  3e3f  280b                      JR      Z,J777A                 ; yep, use current
 11201  3e41  cdee18                    CALL    C521C                   ; evaluate byte operand
 11202  3e44  3c                        INC     A                       ; x coordinate (1 based)
 11203  3e45  d1                        POP     DE
 11204  3e46  57                        LD      D,A
 11205  3e47  d5                        PUSH    DE
 11206  3e48  2b                        DEC     HL
 11207  3e49  d7                        RST     CHRGTR                  ; end of statement ?
 11208  3e4a  2825                      JR      Z,J779F                 ; yep, set cursor position and quit
 11209  3e4c  cf                J777A:  RST     SYNCHR
 11210  3e4d  2c                        DEFB    ','                     ; check for ,
 11211  3e4e  fe2c                      CP      ','                     ; y coordinate not specified ?
 11212  3e50  280b                      JR      Z,J778B                 ; yep, use current
 11213  3e52  cdee18                    CALL    C521C                   ; evaluate byte operand
 11214  3e55  3c                        INC     A                       ; y coordinate (1 based)
 11215  3e56  d1                        POP     DE
 11216  3e57  5f                        LD      E,A
 11217  3e58  d5                        PUSH    DE                      ; save coordinates
 11218  3e59  2b                        DEC     HL
 11219  3e5a  d7                        RST     CHRGTR                  ; end of statement ?
 11220  3e5b  2814                      JR      Z,J779F                 ; yep, set cursor position and quit
 11221  3e5d  cf                J778B:  RST     SYNCHR
 11222  3e5e  2c                        DEFB    ','                     ; check for ,
 11223  3e5f  cdee18                    CALL    C521C                   ; evaluate byte operand
 11224  3e62  a7                        AND     A
 11225  3e63  3e79                      LD      A,'y'
 11226  3e65  2001                      JR      NZ,J7796                ; <>0, cursor on (ESC y 5)
 11227  3e67  3d                        DEC     A                       ; =0, cursor off (ESC x 5)
 11228  3e68  f5                J7796:  PUSH    AF
 11229  3e69  3e1b                      LD      A,$1B
 11230  3e6b  df                        RST     OUTDO                   ; ESC to interpreter output
 11231  3e6c  f1                        POP     AF
 11232  3e6d  df                        RST     OUTDO                   ; 'x' or 'y' to interpreter output
 11233  3e6e  3e35                      LD      A,'5'
 11234  3e70  df                        RST     OUTDO                   ; '5' to interpreter output
 11235  3e71  e3                J779F:  EX      (SP),HL
 11236  3e72  cd0000                    CALL    POSIT                   ; set cursor position
 11237  3e75  e1                        POP     HL
 11238  3e76  c9                        RET
 11239                          
 11240                          ;       Subroutine      STOP statement (trap)
 11241                          ;       Inputs          ________________________
 11242                          ;       Outputs         ________________________
 11243                          
 11244  3e77  e5                J77A5:  PUSH    HL
 11245  3e78  216afc                    LD      HL,TRPTBL+30
 11246  3e7b  1824                      JR      J77CF
 11247                          
 11248                          ;       Subroutine      SPRITE statement (trap)
 11249                          ;       Inputs          ________________________
 11250                          ;       Outputs         ________________________
 11251                          
 11252  3e7d  e5                J77AB:  PUSH    HL
 11253  3e7e  216dfc                    LD      HL,TRPTBL+33
 11254  3e81  181e                      JR      J77CF
 11255                          
 11256                          ;       Subroutine      INTERVAL statement
 11257                          ;       Inputs          ________________________
 11258                          ;       Outputs         ________________________
 11259                          
 11260  3e83  cf                J77B1:  RST     SYNCHR
 11261  3e84  45                        DEFB    'E'
 11262  3e85  cf                        RST     SYNCHR
 11263  3e86  52                        DEFB    'R'
 11264  3e87  cf                        RST     SYNCHR
 11265  3e88  ff                        DEFB    $FF
 11266  3e89  cf                        RST     SYNCHR
 11267  3e8a  94                        DEFB    $94                    ; check for ERVAL
 11268  3e8b  e5                        PUSH    HL
 11269  3e8c  217ffc                    LD      HL,TRPTBL+51
 11270  3e8f  1810                      JR      J77CF
 11271                          
 11272                          ;       Subroutine      STRIG statement
 11273                          ;       Inputs          ________________________
 11274                          ;       Outputs         ________________________
 11275                          
 11276  3e91  3e04              J77BF:  LD      A,3+1                   ; max is 4
 11277  3e93  cdda42                    CALL    C7C08                   ; evaluate parenthesized byte operand with a maximum
 11278  3e96  2b                        DEC     HL
 11279  3e97  d7                        RST     CHRGTR                  ; get next BASIC character
 11280  3e98  e5                        PUSH    HL
 11281  3e99  1600                      LD      D,$0
 11282  3e9b  2170fc                    LD      HL,TRPTBL+36
 11283  3e9e  19                        ADD     HL,DE
 11284  3e9f  19                        ADD     HL,DE
 11285  3ea0  19                        ADD     HL,DE
 11286  3ea1  cdd03e            J77CF:  CALL    C77FE                   ; check for trap tokens and act upon
 11287  3ea4  180e                      JR      J77E2                   ; new statement without CTRL-STOP and trap check
 11288                          
 11289                          ;       Subroutine      KEY statement (trap)
 11290                          ;       Inputs          ________________________
 11291                          ;       Outputs         ________________________
 11292                          
 11293  3ea6  cdee18            J77D4:  CALL    C521C                   ; evaluate byte operand
 11294  3ea9  3d                        DEC     A
 11295  3eaa  fe0a                      CP      10                      ; functionkeynumber 1-10 ?
 11296  3eac  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 11297  3eaf  7e                        LD      A,(HL)                  ; ?? function key number already in A ??
 11298  3eb0  e5                        PUSH    HL
 11299  3eb1  cdba3e                    CALL    C77E8                   ; set trapentry of functionkey
 11300  3eb4  e1                J77E2:  POP     HL
 11301  3eb5  f1                        POP     AF
 11302  3eb6  d7                        RST     CHRGTR                  ; get next BASIC character
 11303  3eb7  c3e40c                    JP      J4612                   ; new statement without CTRL-STOP and trap check
 11304                          
 11305                          ;       Subroutine      set trapentry of functionkey
 11306                          ;       Inputs          ________________________
 11307                          ;       Outputs         ________________________
 11308                          
 11309  3eba  1600              C77E8:  LD      D,0
 11310  3ebc  21cdfb                    LD      HL,FNKFLG-1
 11311  3ebf  19                        ADD     HL,DE
 11312  3ec0  e5                        PUSH    HL
 11313  3ec1  2149fc                    LD      HL,TRPTBL-3
 11314  3ec4  19                        ADD     HL,DE
 11315  3ec5  19                        ADD     HL,DE
 11316  3ec6  19                        ADD     HL,DE
 11317  3ec7  cdd03e                    CALL    C77FE                   ; check for trap tokens and act upon
 11318  3eca  7e                        LD      A,(HL)
 11319  3ecb  e601                      AND     $1                     ; functionkey trap enabled
 11320  3ecd  e1                        POP     HL
 11321  3ece  77                        LD      (HL),A                  ; set FNKFLG if trap enabled
 11322  3ecf  c9                        RET
 11323                          
 11324                          ;       Subroutine      check for trap tokens and act upon
 11325                          ;       Inputs          ________________________
 11326                          ;       Outputs         ________________________
 11327                          
 11328  3ed0  fe95              C77FE:  CP      $95                     ; ON token ?
 11329  3ed2  caed29                    JP      Z,J631B                 ; yep, enable trap
 11330  3ed5  feeb                      CP      $EB                    ; OFF token ?
 11331  3ed7  cafd29                    JP      Z,J632B                 ; yep, disable trap
 11332  3eda  fe90                      CP      $90                     ; STOP token ?
 11333  3edc  ca032a                    JP      Z,C6331                 ; yep, pause trap
 11334  3edf  c32707                    JP      J4055                   ; syntax error
 11335                          
 11336                          ;       Subroutine      __________________________
 11337                          ;       Inputs          ________________________
 11338                          ;       Outputs         ________________________
 11339                          
 11340  3ee2  cdeafd            C7810:  CALL    H_ONGO
 11341  3ee5  010a00                    LD      BC,10
 11342  3ee8  fecc                      CP      $CC
 11343  3eea  c8                        RET     Z
 11344  3eeb  01010a                    LD      BC,$0A01
 11345  3eee  fe90                      CP      $90
 11346  3ef0  c8                        RET     Z
 11347  3ef1  04                        INC     B
 11348  3ef2  fec7                      CP      $C7
 11349  3ef4  c8                        RET     Z
 11350  3ef5  feff                      CP      $FF
 11351  3ef7  d8                        RET     C
 11352  3ef8  e5                        PUSH    HL
 11353  3ef9  d7                        RST     CHRGTR                  ; get next BASIC character
 11354  3efa  fea3                      CP      $A3
 11355  3efc  2807                      JR      Z,J7833
 11356  3efe  fe85                      CP      $85
 11357  3f00  2808                      JR      Z,J7838
 11358  3f02  e1                J7830:  POP     HL
 11359  3f03  37                        SCF
 11360  3f04  c9                        RET
 11361                          
 11362  3f05  c1                J7833:  POP     BC
 11363  3f06  01050c                    LD      BC,$0C05
 11364  3f09  c9                        RET
 11365                          
 11366  3f0a  d7                J7838:  RST     CHRGTR                  ; get next BASIC character
 11367  3f0b  fe45                      CP      'E'
 11368  3f0d  20f3                      JR      NZ,J7830
 11369  3f0f  c1                        POP     BC
 11370  3f10  d7                        RST     CHRGTR                  ; get next BASIC character
 11371  3f11  cf                        RST     SYNCHR
 11372  3f12  52                        DEFB    'R'
 11373  3f13  cf                        RST     SYNCHR
 11374  3f14  ff                        DEFB    $FF
 11375  3f15  cf                        RST     SYNCHR
 11376  3f16  94                        DEFB    $94
 11377  3f17  cf                        RST     SYNCHR
 11378  3f18  ef                        DEFB    $EF                    ; check for RVAL=
 11379  3f19  cd011b                    CALL    C542F                   ; evaluate address operand
 11380  3f1c  7a                        LD      A,D
 11381  3f1d  b3                        OR      E
 11382  3f1e  ca2c0e                    JP      Z,C475A                 ; illegal function call
 11383  3f21  eb                        EX      DE,HL
 11384  3f22  22a0fc                    LD      (INTVAL),HL
 11385  3f25  22a2fc                    LD      (INTCNT),HL
 11386  3f28  eb                        EX      DE,HL
 11387  3f29  010111                    LD      BC,$1101
 11388  3f2c  2b                        DEC     HL
 11389  3f2d  c9                        RET
 11390                          
 11391                          
 11392                          ;       Subroutine      __________________________
 11393                          ;       Inputs          ________________________
 11394                          ;       Outputs         ________________________
 11395                          
 11396                          
 11397  3f2e  e5                C785C:  PUSH    HL
 11398  3f2f  47                        LD      B,A
 11399  3f30  87                        ADD     A,A
 11400  3f31  80                        ADD     A,B
 11401  3f32  6f                        LD      L,A
 11402  3f33  2600                      LD      H,$0
 11403  3f35  014dfc                    LD      BC,TRPTBL+1
 11404  3f38  09                        ADD     HL,BC
 11405  3f39  73                        LD      (HL),E
 11406  3f3a  23                        INC     HL
 11407  3f3b  72                        LD      (HL),D
 11408  3f3c  e1                        POP     HL
 11409  3f3d  c9                        RET
 11410                          
 11411                          ;       Subroutine      KEY statement
 11412                          ;       Inputs          ________________________
 11413                          ;       Outputs         ________________________
 11414                          
 11415  3f3e  fe93              C786C:  CP      $93                     ; LIST token ?
 11416  3f40  203e                      JR      NZ,J78AE                ; nope, other KEY statement variant
 11417  3f42  d7                        RST     CHRGTR                  ; get next BASIC character
 11418  3f43  e5                        PUSH    HL
 11419  3f44  217ff8                    LD      HL,FNKSTR
 11420  3f47  0e0a                      LD      C,$A
 11421  3f49  0610              J7877:  LD      B,$10
 11422  3f4b  7e                J7879:  LD      A,(HL)
 11423  3f4c  23                        INC     HL
 11424  3f4d  cd0000                    CALL    CNVCHR
 11425  3f50  3811                      JR      C,J7891
 11426  3f52  05                        DEC     B
 11427  3f53  281b                      JR      Z,J789E
 11428  3f55  7e                        LD      A,(HL)
 11429  3f56  23                        INC     HL
 11430  3f57  5f                        LD      E,A
 11431  3f58  cd0000                    CALL    CNVCHR
 11432  3f5b  2806                      JR      Z,J7891
 11433  3f5d  3e01                      LD      A,1
 11434  3f5f  df                        RST     OUTDO                   ; MSX to interpreter output
 11435  3f60  7b                        LD      A,E
 11436  3f61  180a                      JR      J789B
 11437                          
 11438  3f63  fe7f              J7891:  CP      $7F
 11439  3f65  2804                      JR      Z,J7899
 11440  3f67  fe20                      CP      $20
 11441  3f69  3002                      JR      NC,J789B
 11442  3f6b  3e20              J7899:  LD      A,' '
 11443  3f6d  df                J789B:  RST     OUTDO                   ; char to interpreter output
 11444  3f6e  10db                      DJNZ    J7879
 11445  3f70  cdfa39            J789E:  CALL    C7328                   ; newline to interpreter output
 11446  3f73  0d                        DEC     C
 11447  3f74  20d3                      JR      NZ,J7877
 11448  3f76  e1                        POP     HL
 11449  3f77  c9                        RET
 11450                          
 11451  3f78  d7                J78A6:  RST     CHRGTR                  ; get next BASIC character
 11452  3f79  c30000                    JP      DSPFNK
 11453                          
 11454  3f7c  d7                J78AA:  RST     CHRGTR                  ; get next BASIC character
 11455  3f7d  c30000                    JP      ERAFNK
 11456                          
 11457  3f80  fe28              J78AE:  CP      '('
 11458  3f82  caa63e                    JP      Z,J77D4                 ; KEY statement (trap)
 11459  3f85  fe95                      CP      $95                     ; ON token ?
 11460  3f87  28ef                      JR      Z,J78A6                 ; yep, enable display functionkeys
 11461  3f89  feeb                      CP      $EB                    ; OFF token ?
 11462  3f8b  28ef                      JR      Z,J78AA                 ; yep, disable display functionkeys
 11463  3f8d  cdee18                    CALL    C521C                   ; evaluate byte operand
 11464  3f90  3d                        DEC     A
 11465  3f91  fe0a                      CP      10                      ; functionkeynumber 1-10 ?
 11466  3f93  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 11467  3f96  eb                        EX      DE,HL
 11468  3f97  6f                        LD      L,A
 11469  3f98  2600                      LD      H,0
 11470  3f9a  29                        ADD     HL,HL
 11471  3f9b  29                        ADD     HL,HL
 11472  3f9c  29                        ADD     HL,HL
 11473  3f9d  29                        ADD     HL,HL                   ; * 16
 11474  3f9e  017ff8                    LD      BC,FNKSTR
 11475  3fa1  09                        ADD     HL,BC
 11476  3fa2  e5                        PUSH    HL
 11477  3fa3  eb                        EX      DE,HL
 11478  3fa4  cf                        RST     SYNCHR
 11479  3fa5  2c                        DEFB    ','                     ; check for ,
 11480  3fa6  cd3613                    CALL    C4C64                   ; evaluate expression
 11481  3fa9  e5                        PUSH    HL
 11482  3faa  cda22e                    CALL    C67D0                   ; free temporary string with type check
 11483  3fad  46                        LD      B,(HL)
 11484  3fae  23                        INC     HL
 11485  3faf  5e                        LD      E,(HL)
 11486  3fb0  23                        INC     HL
 11487  3fb1  56                        LD      D,(HL)
 11488  3fb2  e1                        POP     HL
 11489  3fb3  e3                        EX      (SP),HL
 11490  3fb4  0e0f                      LD      C,$F
 11491  3fb6  78                        LD      A,B
 11492  3fb7  a7                        AND     A
 11493  3fb8  280d                      JR      Z,J78F5
 11494  3fba  1a                J78E8:  LD      A,(DE)
 11495  3fbb  a7                        AND     A
 11496  3fbc  ca2c0e                    JP      Z,C475A                 ; illegal function call
 11497  3fbf  77                        LD      (HL),A
 11498  3fc0  13                        INC     DE
 11499  3fc1  23                        INC     HL
 11500  3fc2  0d                        DEC     C
 11501  3fc3  2807                      JR      Z,J78FA
 11502  3fc5  10f3                      DJNZ    J78E8
 11503  3fc7  70                J78F5:  LD      (HL),B
 11504  3fc8  23                        INC     HL
 11505  3fc9  0d                        DEC     C
 11506  3fca  20fb                      JR      NZ,J78F5
 11507  3fcc  71                J78FA:  LD      (HL),C
 11508  3fcd  cd0000                    CALL    FNKSB
 11509  3fd0  e1                        POP     HL
 11510  3fd1  c9                        RET
 11511                          
 11512                          ;       Subroutine      TIME function
 11513                          ;       Inputs          ________________________
 11514                          ;       Outputs         ________________________
 11515                          
 11516  3fd2  d7                J7900:  RST     CHRGTR                  ; get next BASIC character
 11517  3fd3  e5                        PUSH    HL
 11518  3fd4  2a9efc                    LD      HL,(JIFFY)
 11519  3fd7  cd0000                    CALL    C3236                   ; convert unsigned integer to single real
 11520  3fda  e1                        POP     HL
 11521  3fdb  c9                        RET
 11522                          
 11523                          ;       Subroutine      CSRLIN function
 11524                          ;       Inputs          ________________________
 11525                          ;       Outputs         ________________________
 11526                          
 11527  3fdc  d7                J790A:  RST     CHRGTR                  ; get next BASIC character
 11528  3fdd  e5                        PUSH    HL
 11529  3fde  3adcf3                    LD      A,(CSRY)
 11530  3fe1  1821                      JR      J7932
 11531                          
 11532                          ;       Subroutine      TIME statement
 11533                          ;       Inputs          ________________________
 11534                          ;       Outputs         ________________________
 11535                          
 11536  3fe3  cf                C7911:  RST     SYNCHR
 11537  3fe4  ef                        DEFB    $EF                    ; check for =
 11538  3fe5  cd011b                    CALL    C542F                   ; evaluate address operand
 11539  3fe8  ed539efc                  LD      (JIFFY),DE
 11540  3fec  c9                        RET
 11541                          
 11542                          ;       Subroutine      PLAY function
 11543                          ;       Inputs          ________________________
 11544                          ;       Outputs         ________________________
 11545                          
 11546  3fed  d7                J791B:  RST     CHRGTR                  ; get next BASIC character
 11547  3fee  3e03                      LD      A,2+1                   ; max is 3
 11548  3ff0  cdda42                    CALL    C7C08                   ; evaluate parenthesized byte operand with a maximum
 11549  3ff3  e5                        PUSH    HL
 11550  3ff4  3a3ffb                    LD      A,(MUSICF)
 11551  3ff7  1d                        DEC     E
 11552  3ff8  fa0a40                    JP      M,J7938
 11553  3ffb  0f                J7929:  RRCA
 11554  3ffc  1d                        DEC     E
 11555  3ffd  f2fb3f                    JP      P,J7929
 11556  4000  3e00                      LD      A,$0
 11557  4002  3001                      JR      NC,J7933
 11558  4004  3d                J7932:  DEC     A
 11559  4005  cd0000            J7933:  CALL    C2E9A
 11560  4008  e1                        POP     HL
 11561  4009  c9                        RET
 11562                          
 11563  400a  e607              J7938:  AND     $7
 11564  400c  28f7                      JR      Z,J7933
 11565  400e  3eff                      LD      A,$FF
 11566  4010  18f3                      JR      J7933
 11567                          
 11568                          ;       Subroutine      STICK function
 11569                          ;       Inputs          ________________________
 11570                          ;       Outputs         ________________________
 11571                          
 11572                          
 11573  4012  cdf118            C7940:  CALL    C521F                   ; check for byte value
 11574  4015  fe03                      CP      $3
 11575  4017  300a                      JR      NC,J7951
 11576  4019  cd0000                    CALL    GTSTCK
 11577  401c  181a                      JR      J7966
 11578                          
 11579                          ;       Subroutine      TRIG function
 11580                          ;       Inputs          ________________________
 11581                          ;       Outputs         ________________________
 11582                          
 11583  401e  cdf118            C794C:  CALL    C521F                   ; check for byte value
 11584  4021  fe05                      CP      $5
 11585  4023  d22c0e            J7951:  JP      NC,C475A                ; illegal function call
 11586  4026  cd0000                    CALL    GTTRIG
 11587  4029  c30000            J7957:  JP      C2E9A
 11588                          
 11589                          ;       Subroutine      PDL function
 11590                          ;       Inputs          ________________________
 11591                          ;       Outputs         ________________________
 11592                          
 11593  402c  cdf118            C795A:  CALL    C521F                   ; check for byte value
 11594  402f  3d                        DEC     A
 11595  4030  fe0c                      CP      $C
 11596  4032  30ef                      JR      NC,J7951
 11597  4034  3c                        INC     A
 11598  4035  cd0000                    CALL    GTPDL
 11599  4038  c3a116            J7966:  JP      C4FCF                   ; byte to DAC
 11600                          
 11601                          ;       Subroutine      PAD function
 11602                          ;       Inputs          ________________________
 11603                          ;       Outputs         ________________________
 11604                          
 11605  403b  cdf118            C7969:  CALL    C521F                   ; check for byte value
 11606  403e  fe08                      CP      8
 11607  4040  30e1                      JR      NC,J7951
 11608  4042  f5                        PUSH    AF
 11609  4043  cd0000                    CALL    GTPAD
 11610  4046  47                        LD      B,A
 11611  4047  f1                        POP     AF
 11612  4048  e603                      AND     $3                     ; ignore port bit
 11613  404a  3d                        DEC     A                       ; 0 and 3 are boolean
 11614  404b  fe02                      CP      2
 11615  404d  78                        LD      A,B
 11616  404e  38e8                      JR      C,J7966
 11617  4050  18d7                      JR      J7957           ; 0 or -1
 11618                          
 11619                          ;       Subroutine      COLOR statement
 11620                          ;       Inputs          ________________________
 11621                          ;       Outputs         ________________________
 11622                          
 11623  4052  012c0e            C7980:  ld      bc,C475A
 11624  4055  c5                        push    bc
 11625  4056  ed5be9f3                  ld      de,(FORCLR)
 11626  405a  d5                        push    de
 11627  405b  fe2c                      cp      $2C
 11628  405d  280d                      jr      z,A799A
 11629  405f  cdee18                    call    C521C
 11630  4062  d1                        pop     de
 11631  4063  fe10                      cp      $10
 11632  4065  d0                        ret     nc
 11633  4066  5f                        ld      e,a
 11634  4067  d5                        push    de
 11635  4068  2b                        dec     hl
 11636  4069  d7                        rst     CHRGTR
 11637  406a  2822                      jr      z,A79BC
 11638  406c  cf                A799A:  rst     SYNCHR
 11639  406d  2c                        db      ','
 11640  406e  281e                      jr      z,A79BC
 11641  4070  fe2c                      cp      $2C
 11642  4072  280d                      jr      z,A79AF
 11643  4074  cdee18                    call    C521C
 11644  4077  d1                        pop     de
 11645  4078  fe10                      cp      $10
 11646  407a  d0                        ret     nc
 11647  407b  57                        ld      d,a
 11648  407c  d5                        push    de
 11649  407d  2b                        dec     hl
 11650  407e  d7                        rst     CHRGTR
 11651  407f  280d                      jr      z,A79BC
 11652  4081  cf                A79AF:  rst     SYNCHR
 11653  4082  2c                        db      ','
 11654  4083  cdee18                    call    C521C
 11655  4086  d1                        pop     de
 11656  4087  fe10                      cp      $10
 11657  4089  d0                        ret     nc
 11658  408a  32ebf3                    ld      (BDRCLR),a
 11659  408d  d5                        push    de
 11660  408e  d1                A79BC:  pop     de
 11661  408f  f1                        pop     af
 11662  4090  e5                        push    hl
 11663  4091  eb                        ex      de,hl
 11664  4092  22e9f3                    ld      (FORCLR),hl
 11665  4095  7d                        ld      a,l
 11666  4096  32f2f3                    ld      (ATRBYT),a
 11667  4099  cd0000                    call    CHGCLR
 11668  409c  e1                        pop     hl
 11669  409d  c9                        ret
 11670                          
 11671                          ;       Subroutine      SCREEN statement
 11672                          ;       Inputs          ________________________
 11673                          ;       Outputs         ________________________
 11674                          
 11675  409e  cdc0ff            C79CC:  call    H_SCRE
 11676  40a1  fe2c                      cp      $2C
 11677  40a3  2817                      jr      z,A79EA
 11678  40a5  cdee18                    call    C521C
 11679  40a8  fe04                      cp      $04
 11680  40aa  d22c0e                    jp      nc,C475A
 11681  40ad  e5                        push    hl
 11682  40ae  cd0000                    call    CHGMOD
 11683  40b1  3ab0f3                    ld      a,(LINLEN)
 11684  40b4  5f                        ld      e,a
 11685  40b5  cdd318                    call    A5201
 11686  40b8  e1                        pop     hl
 11687  40b9  2b                        dec     hl
 11688  40ba  d7                        rst     CHRGTR
 11689  40bb  c8                        ret     z
 11690  40bc  cf                A79EA:  rst     SYNCHR
 11691  40bd  2c                        db      ','
 11692  40be  fe2c                      cp      $2C
 11693  40c0  2819                      jr      z,A7A09
 11694  40c2  cdee18                    call    C521C
 11695  40c5  fe04                      cp      $04
 11696  40c7  d22c0e                    jp      nc,C475A
 11697  40ca  3ae0f3                    ld      a,(RG1SAV)
 11698  40cd  e6fc                      and     $FC
 11699  40cf  b3                        or      e
 11700  40d0  32e0f3                    ld      (RG1SAV),a
 11701  40d3  e5                        push    hl
 11702  40d4  cd0000                    call    CLRSPR
 11703  40d7  e1                        pop     hl
 11704  40d8  2b                        dec     hl
 11705  40d9  d7                        rst     CHRGTR
 11706  40da  c8                        ret     z
 11707  40db  cf                A7A09:  rst     SYNCHR
 11708  40dc  2c                        db      ','
 11709  40dd  fe2c                      cp      $2C
 11710  40df  2809                      jr      z,A7A18
 11711  40e1  cdee18                    call    C521C
 11712  40e4  32dbf3                    ld      (CLIKSW),a
 11713  40e7  2b                        dec     hl
 11714  40e8  d7                        rst     CHRGTR
 11715  40e9  c8                        ret     z
 11716  40ea  cf                A7A18:  rst     SYNCHR
 11717  40eb  2c                        db      ','
 11718  40ec  fe2c                      cp      $2C
 11719  40ee  2806                      jr      z,A7A24
 11720  40f0  cdff40                    call    A7A2D
 11721  40f3  2b                        dec     hl
 11722  40f4  d7                        rst     CHRGTR
 11723  40f5  c8                        ret     z
 11724  40f6  cf                A7A24:  rst     SYNCHR
 11725  40f7  2c                        db      ','
 11726  40f8  cdee18                    call    C521C
 11727  40fb  3217f4                    ld      (NTMSXP),a
 11728  40fe  c9                        ret
 11729                          
 11730  40ff  cdee18            A7A2D:  call    C521C
 11731  4102  3d                        dec     a
 11732  4103  fe02                      cp      $02
 11733  4105  d22c0e                    jp      nc,C475A
 11734  4108  e5                        push    hl
 11735  4109  010500                    ld      bc,5
 11736  410c  a7                        and     a
 11737  410d  21fcf3                    ld      hl,CS1200
 11738  4110  2801                      jr      z,A7A41
 11739  4112  09                        add     hl,bc
 11740  4113  1106f4            A7A41:  ld      de,LOW_
 11741  4116  edb0                      ldir
 11742  4118  e1                        pop     hl
 11743  4119  c9                        ret
 11744                          
 11745                          ;       Subroutine      SPRITE statement
 11746                          ;       Inputs          ________________________
 11747                          ;       Outputs         ________________________
 11748                          
 11749  411a  fe24              C7A48:  CP      '$'
 11750  411c  c27d3e                    JP      NZ,J77AB
 11751  411f  3aaffc                    LD      A,(SCRMOD)
 11752  4122  a7                        AND     A
 11753  4123  ca2c0e                    JP      Z,C475A                 ; illegal function call
 11754  4126  cd7241                    CALL    C7AA0
 11755  4129  d5                        PUSH    DE
 11756  412a  cd3113                    CALL    C4C5F                   ; evaluate = expression
 11757  412d  e3                        EX      (SP),HL
 11758  412e  e5                        PUSH    HL
 11759  412f  cda22e                    CALL    C67D0                   ; free temporary string with type check
 11760  4132  23                        INC     HL
 11761  4133  5e                        LD      E,(HL)
 11762  4134  23                        INC     HL
 11763  4135  56                        LD      D,(HL)
 11764  4136  cd0000                    CALL    GSPSIZ
 11765  4139  4f                        LD      C,A
 11766  413a  0600                      LD      B,$0
 11767  413c  2b                        DEC     HL
 11768  413d  2b                        DEC     HL
 11769  413e  3d                        DEC     A
 11770  413f  be                        CP      (HL)
 11771  4140  7e                        LD      A,(HL)
 11772  4141  380c                      JR      C,J7A7D
 11773  4143  e1                        POP     HL
 11774  4144  e5                        PUSH    HL
 11775  4145  f5                        PUSH    AF
 11776  4146  af                        XOR     A
 11777  4147  cd0000                    CALL    FILVRM
 11778  414a  f1                        POP     AF
 11779  414b  a7                        AND     A
 11780  414c  4f                        LD      C,A
 11781  414d  0600                      LD      B,$0
 11782  414f  eb                J7A7D:  EX      DE,HL
 11783  4150  d1                        POP     DE
 11784  4151  c40000                    CALL    NZ,LDIRVM
 11785  4154  e1                        POP     HL
 11786  4155  c9                        RET
 11787                          
 11788                          ;       Subroutine      SPRITE function
 11789                          ;       Inputs          ________________________
 11790                          ;       Outputs         ________________________
 11791                          
 11792  4156  cd7141            J7A84:  CALL    C7A9F
 11793  4159  e5                        PUSH    HL
 11794  415a  d5                        PUSH    DE
 11795  415b  cd0000                    CALL    GSPSIZ
 11796  415e  4f                        LD      C,A
 11797  415f  0600                      LD      B,$0
 11798  4161  c5                        PUSH    BC
 11799  4162  cdf92c                    CALL    C6627                   ; allocate temporary string
 11800  4165  2a99f6                    LD      HL,(DSCTMP+1)
 11801  4168  eb                        EX      DE,HL
 11802  4169  c1                        POP     BC
 11803  416a  e1                        POP     HL
 11804  416b  cd0000                    CALL    LDIRMV
 11805  416e  c3262d                    JP      J6654                   ; push temporary descriptor to temporary desciptor heap and quit
 11806                          
 11807                          ;       Subroutine      __________________________
 11808                          ;       Inputs          ________________________
 11809                          ;       Outputs         ________________________
 11810                          
 11811  4171  d7                C7A9F:  RST     CHRGTR                  ; get next BASIC character
 11812                          
 11813                          ;       Subroutine      __________________________
 11814                          ;       Inputs          ________________________
 11815                          ;       Outputs         ________________________
 11816                          
 11817  4172  cf                C7AA0:  RST     SYNCHR
 11818  4173  24                        DEFB    '$'                     ; check for $
 11819  4174  3eff                      LD      A,256-1                 ; max is 255
 11820  4176  cdda42                    CALL    C7C08                   ; evaluate parenthesized byte operand with a maximum
 11821  4179  e5                        PUSH    HL
 11822  417a  7b                        LD      A,E
 11823  417b  cd0000                    CALL    CALPAT
 11824  417e  eb                        EX      DE,HL
 11825  417f  e1                        POP     HL
 11826  4180  c9                        RET
 11827                          
 11828                          ;       Subroutine      PUT/GET SPRITE
 11829                          ;       Inputs          ________________________
 11830                          ;       Outputs         ________________________
 11831                          
 11832  4181  05                J7AAF:  DEC     B                       ; PUT ?
 11833  4182  fa2c0e                    JP      M,C475A                 ; nope, illegal function call
 11834  4185  3aaffc                    ld      a,(SCRMOD)
 11835  4188  a7                J7AB6:  AND     A
 11836  4189  ca2c0e                    JP      Z,C475A                 ; illegal function call
 11837  418c  d7                        RST     CHRGTR                  ; get next BASIC character
 11838  418d  cdee18                    CALL    C521C                   ; evaluate byte operand
 11839  4190  fe20                      CP      32                      ; planenumber 0-31 ?
 11840  4192  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 11841  4195  e5                        PUSH    HL
 11842  4196  cd0000                    CALL    CALATR
 11843  4199  e3                        EX      (SP),HL
 11844  419a  cf                        RST     SYNCHR
 11845  419b  2c                        DEFB    ','                     ; check for ,
 11846  419c  fe2c                      CP      ','
 11847  419e  282b                      JR      Z,J7AF9
 11848  41a0  cd6e1e                    CALL    C579C                   ; evaluate complex graphic coordinatepair
 11849  41a3  e3                        EX      (SP),HL
 11850  41a4  7b                        LD      A,E
 11851  41a5  cd0000                    CALL    WRTVRM
 11852  41a8  78                        LD      A,B
 11853  41a9  87                        ADD     A,A
 11854  41aa  79                        LD      A,C
 11855  41ab  0600                      LD      B,$0
 11856  41ad  3004                      JR      NC,J7AE1
 11857  41af  c620                      ADD     A,$20
 11858  41b1  0680                      LD      B,$80
 11859  41b3  23                J7AE1:  INC     HL
 11860  41b4  cd0000                    CALL    WRTVRM
 11861  41b7  23                        INC     HL
 11862  41b8  23                        INC     HL
 11863  41b9  cd0000                    CALL    RDVRM
 11864  41bc  e60f                      AND     $F
 11865  41be  b0                        OR      B
 11866  41bf  cd0000                    CALL    WRTVRM
 11867  41c2  2b                        DEC     HL
 11868  41c3  2b                        DEC     HL
 11869  41c4  2b                        DEC     HL
 11870  41c5  e3                        EX      (SP),HL
 11871  41c6  2b                        DEC     HL
 11872  41c7  d7                        RST     CHRGTR                  ; get next BASIC character
 11873  41c8  c1                        POP     BC
 11874  41c9  c8                        RET     Z
 11875  41ca  c5                        PUSH    BC
 11876  41cb  cf                J7AF9:  RST     SYNCHR
 11877  41cc  2c                        DEFB    ','                     ; check for ,
 11878  41cd  fe2c                      CP      ','
 11879  41cf  281e                      JR      Z,J7B1D
 11880  41d1  cdee18                    CALL    C521C                   ; evaluate byte operand
 11881  41d4  fe10                      CP      16                      ; colornumber 0-15 ?
 11882  41d6  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 11883  41d9  e3                        EX      (SP),HL
 11884  41da  23                        INC     HL
 11885  41db  23                        INC     HL
 11886  41dc  23                        INC     HL
 11887  41dd  cd0000                    CALL    RDVRM
 11888  41e0  e680                      AND     $80
 11889  41e2  b3                        OR      E
 11890  41e3  cd0000                    CALL    WRTVRM
 11891  41e6  2b                        DEC     HL
 11892  41e7  2b                        DEC     HL
 11893  41e8  2b                        DEC     HL
 11894  41e9  e3                        EX      (SP),HL
 11895  41ea  2b                        DEC     HL
 11896  41eb  d7                        RST     CHRGTR                  ; get next BASIC character
 11897  41ec  c1                        POP     BC
 11898  41ed  c8                        RET     Z
 11899  41ee  c5                        PUSH    BC
 11900  41ef  cf                J7B1D:  RST     SYNCHR
 11901  41f0  2c                        DEFB    ','                     ; check for ,
 11902  41f1  cdee18                    CALL    C521C                   ; evaluate byte operand
 11903  41f4  cd0000                    CALL    GSPSIZ
 11904  41f7  7b                        LD      A,E
 11905  41f8  3007                      JR      NC,J7B2F                ; 8x8 sprite, spritenumber ok
 11906  41fa  fe40                      CP      64                      ; 16x16 sprite, sprite number 0-63 ?
 11907  41fc  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 11908  41ff  87                        ADD     A,A
 11909  4200  87                        ADD     A,A                     ; *4 = spritenumber used by the VDP
 11910  4201  e3                J7B2F:  EX      (SP),HL
 11911  4202  23                        INC     HL
 11912  4203  23                        INC     HL
 11913  4204  cd0000                    CALL    WRTVRM
 11914  4207  e1                        POP     HL
 11915  4208  c9                        RET
 11916                          
 11917                          ;       Subroutine      VDP statement
 11918                          ;       Inputs          ________________________
 11919                          ;       Outputs         ________________________
 11920                          
 11921  4209  3e07              C7B37:  ld      a,$07
 11922  420b  cdda42                    call    C7C08
 11923  420e  d5                        push    de
 11924  420f  cf                        rst     SYNCHR
 11925  4210  ef                        db      $EF
 11926  4211  cdee18                    call    C521C
 11927  4214  c1                        pop     bc
 11928  4215  47                        ld      b,a
 11929  4216  c30000                    jp      WRTVDP
 11930                          
 11931                          ;       Subroutine      VDP function
 11932                          ;       Inputs          ________________________
 11933                          ;       Outputs         ________________________
 11934                          
 11935  4219  d7                J7B47:  rst     CHRGTR
 11936  421a  3e08                      ld      a,$08
 11937  421c  cdda42                    call    C7C08
 11938  421f  e5                        push    hl
 11939  4220  1600                      ld      d,$00
 11940  4222  21dff3                    ld      hl,RG0SAV
 11941  4225  19                        add     hl,de
 11942  4226  7e                        ld      a,(hl)
 11943  4227  cda116                    call    C4FCF
 11944  422a  e1                        pop     hl
 11945  422b  c9                        ret
 11946                          
 11947                          ;       Subroutine      BASE statement
 11948                          ;       Inputs          ________________________
 11949                          ;       Outputs         ________________________
 11950                          
 11951  422c  3e13              C7B5A:  ld      a,$13
 11952  422e  cdda42                    call    C7C08
 11953  4231  1600                      ld      d,$00
 11954  4233  d5                        push    de
 11955  4234  cf                        rst     SYNCHR
 11956  4235  ef                        db      $EF
 11957  4236  cd3613                    call    C4C64                   ; eval expression
 11958  4239  e3                        ex      (sp),hl
 11959  423a  e5                        push    hl
 11960  423b  cdd042                    call    A7BFE
 11961  423e  4d                        ld      c,l
 11962  423f  44                        ld      b,h
 11963  4240  e1                        pop     hl
 11964  4241  7d                        ld      a,l
 11965  4242  f5                        push    af
 11966  4243  29                        add     hl,hl
 11967  4244  eb                        ex      de,hl
 11968  4245  217542                    ld      hl,T7BA3
 11969  4248  19                        add     hl,de
 11970  4249  79                        ld      a,c
 11971  424a  a6                        and     (hl)
 11972  424b  2003                      jr      nz,A7B7E
 11973  424d  23                        inc     hl
 11974  424e  78                        ld      a,b
 11975  424f  a6                        and     (hl)
 11976  4250  c22c0e            A7B7E:  jp      nz,C475A
 11977  4253  21b3f3                    ld      hl,TXTNAM
 11978  4256  19                        add     hl,de
 11979  4257  71                        ld      (hl),c
 11980  4258  23                        inc     hl
 11981  4259  70                        ld      (hl),b
 11982  425a  f1                        pop     af
 11983  425b  1eff                      ld      e,$FF
 11984  425d  1c                A7B8B:  inc     e
 11985  425e  d605                      sub     $05
 11986  4260  30fb                      jr      nc,A7B8B
 11987  4262  3aaffc                    ld      a,(SCRMOD)
 11988  4265  bb                        cp      e
 11989  4266  cc6b42                    call    z,A7B99
 11990  4269  e1                        pop     hl
 11991  426a  c9                        ret
 11992                          
 11993  426b  3d                A7B99:  dec     a
 11994  426c  fa0000                    jp      m,SETTXT
 11995  426f  ca0000                    jp      z,SETGRP
 11996  4272  c30000                    jp      SETMLT
 11997                          
 11998  4275  ff03              T7BA3:  dw      $03FF
 11999  4277  3f00                      dw      $003F
 12000  4279  ff07                      dw      $07FF
 12001  427b  7f00                      dw      $007F
 12002  427d  ff07                      dw      $07FF
 12003  427f  ff03                      dw      $03FF
 12004  4281  3f00                      dw      $003F
 12005  4283  ff07                      dw      $07FF
 12006  4285  7f00                      dw      $007F
 12007  4287  ff07                      dw      $07FF
 12008  4289  ff03                      dw      $03FF
 12009  428b  ff1f                      dw      $1FFF
 12010  428d  ff1f                      dw      $1FFF
 12011  428f  7f00                      dw      $007F
 12012  4291  ff07                      dw      $07FF
 12013  4293  ff03                      dw      $03FF
 12014  4295  3f00                      dw      $003F
 12015  4297  ff07                      dw      $07FF
 12016  4299  7f00                      dw      $007F
 12017  429b  ff07                      dw      $07FF
 12018                          
 12019                          ;       Subroutine      BASE function
 12020                          ;       Inputs          ________________________
 12021                          ;       Outputs         ________________________
 12022                          
 12023  429d  d7                J7BCB:  rst     CHRGTR
 12024  429e  3e13                      ld      a,$13
 12025  42a0  cdda42                    call    C7C08
 12026  42a3  e5                        push    hl
 12027  42a4  1600                      ld      d,$00
 12028  42a6  21b3f3                    ld      hl,TXTNAM
 12029  42a9  19                        add     hl,de
 12030  42aa  19                        add     hl,de
 12031  42ab  7e                A7BD9:  ld      a,(hl)
 12032  42ac  23                        inc     hl
 12033  42ad  66                        ld      h,(hl)
 12034  42ae  6f                        ld      l,a
 12035  42af  cd0000                    call    C3236
 12036  42b2  e1                        pop     hl
 12037  42b3  c9                        ret
 12038                          
 12039                          ;       Subroutine      VPOKE statement
 12040                          ;       Inputs          ________________________
 12041                          ;       Outputs         ________________________
 12042                          
 12043  42b4  cd3613            C7BE2:  call    C4C64                   ; eval expression
 12044  42b7  e5                        push    hl
 12045  42b8  cdd042                    call    A7BFE
 12046  42bb  e3                        ex      (sp),hl
 12047  42bc  cf                        rst     SYNCHR
 12048  42bd  2c                        db      ','
 12049  42be  cdee18                    call    C521C
 12050  42c1  e3                        ex      (sp),hl
 12051  42c2  cd0000                    call    WRTVRM
 12052  42c5  e1                        pop     hl
 12053  42c6  c9                        ret
 12054                          
 12055                          ;       Subroutine      VPEEK function
 12056                          ;       Inputs          ________________________
 12057                          ;       Outputs         ________________________
 12058                          
 12059  42c7  cdd042            C7BF5:  call    A7BFE
 12060  42ca  cd0000                    call    RDVRM
 12061  42cd  c3a116                    jp      C4FCF
 12062                          
 12063  42d0  cd0000            A7BFE:  call    C2F8A
 12064  42d3  110040                    ld      de,$4000
 12065  42d6  e7                        rst     DCOMPR
 12066  42d7  d8                        ret     c
 12067  42d8  186b                      jr      J7C73
 12068                          
 12069                          ;       Subroutine      evaluate parenthesized byte operand with a maximum
 12070                          ;       Inputs          A = maximum
 12071                          ;       Outputs         A = value, E = value
 12072                          
 12073  42da  f5                C7C08:  PUSH    AF
 12074  42db  cf                        RST     SYNCHR
 12075  42dc  28                        DEFB    '('                     ; check for (
 12076  42dd  cdee18                    CALL    C521C                   ; evaluate byte operand
 12077  42e0  f1                        POP     AF
 12078  42e1  bb                        CP      E
 12079  42e2  3861                      JR      C,J7C73
 12080  42e4  cf                        RST     SYNCHR
 12081  42e5  29                        DEFB    ')'                     ; check for )
 12082  42e6  7b                        LD      A,E
 12083  42e7  c9                        RET
 12084                          
 12085                          ;       Subroutine      DSKO$ statement
 12086                          ;       Inputs          ________________________
 12087                          ;       Outputs         ________________________
 12088                          
 12089  42e8  cdeffd            C7C16:  CALL    H_DSKO
 12090  42eb  1858                      JR      J7C73
 12091                          
 12092                          ;       Subroutine      SET statement
 12093                          ;       Inputs          ________________________
 12094                          ;       Outputs         ________________________
 12095                          
 12096  42ed  cdf4fd            C7C1B:  CALL    H_SETS
 12097  42f0  1853                      JR      J7C73
 12098                          
 12099                          ;       Subroutine      NAME statement
 12100                          ;       Inputs          ________________________
 12101                          ;       Outputs         ________________________
 12102                          
 12103  42f2  cdf9fd            C7C20:  CALL    H_NAME
 12104  42f5  184e                      JR      J7C73
 12105                          
 12106                          ;       Subroutine      KILL statement
 12107                          ;       Inputs          ________________________
 12108                          ;       Outputs         ________________________
 12109                          
 12110  42f7  cdfefd            C7C25:  CALL    H_KILL
 12111  42fa  1849                      JR      J7C73
 12112                          
 12113                          ;       Subroutine      IPL statement
 12114                          ;       Inputs          ________________________
 12115                          ;       Outputs         ________________________
 12116                          
 12117  42fc  cd03fe            C7C2A:  CALL    H_IPL
 12118  42ff  1844                      JR      J7C73
 12119                          
 12120                          ;       Subroutine      COPY statement
 12121                          ;       Inputs          ________________________
 12122                          ;       Outputs         ________________________
 12123                          
 12124  4301  cd08fe            C7C2F:  CALL    H_COPY
 12125  4304  183f                      JR      J7C73
 12126                          
 12127                          ;       Subroutine      CMD statement
 12128                          ;       Inputs          ________________________
 12129                          ;       Outputs         ________________________
 12130                          
 12131  4306  cd0dfe            C7C34:  CALL    H_CMD
 12132  4309  183a                      JR      J7C73
 12133                          
 12134                          ;       Subroutine      DSKF function
 12135                          ;       Inputs          ________________________
 12136                          ;       Outputs         ________________________
 12137                          
 12138  430b  cd12fe            C7C39:  CALL    H_DSKF
 12139  430e  1835                      JR      J7C73
 12140                          
 12141                          ;       Subroutine      DSKI$ function
 12142                          ;       Inputs          ________________________
 12143                          ;       Outputs         ________________________
 12144                          
 12145  4310  cd17fe            J7C3E:  CALL    H_DSKI
 12146  4313  1830                      JR      J7C73
 12147                          
 12148                          ;       Subroutine      ATTR$ function
 12149                          ;       Inputs          ________________________
 12150                          ;       Outputs         ________________________
 12151                          
 12152  4315  cd1cfe            J7C43:  CALL    H_ATTR
 12153  4318  182b                      JR      J7C73
 12154                          
 12155                          ;       Subroutine      LSET statement
 12156                          ;       Inputs          ________________________
 12157                          ;       Outputs         ________________________
 12158                          
 12159  431a  cd21fe            C7C48:  CALL    H_LSET
 12160  431d  1826                      JR      J7C73
 12161                          
 12162                          ;       Subroutine      RSET statement
 12163                          ;       Inputs          ________________________
 12164                          ;       Outputs         ________________________
 12165                          
 12166  431f  cd26fe            C7C4D:  CALL    H_RSET
 12167  4322  1821                      JR      J7C73
 12168                          
 12169                          ;       Subroutine      FIELD statement
 12170                          ;       Inputs          ________________________
 12171                          ;       Outputs         ________________________
 12172                          
 12173  4324  cd2bfe            C7C52:  CALL    H_FIEL
 12174  4327  181c                      JR      J7C73
 12175                          
 12176                          ;       Subroutine      MKI$ function
 12177                          ;       Inputs          ________________________
 12178                          ;       Outputs         ________________________
 12179                          
 12180  4329  cd30fe            C7C57:  CALL    H_MKI
 12181  432c  1817                      JR      J7C73
 12182                          
 12183                          ;       Subroutine      MKS$ function
 12184                          ;       Inputs          ________________________
 12185                          ;       Outputs         ________________________
 12186                          
 12187  432e  cd35fe            C7C5C:  CALL    H_MKS
 12188  4331  1812                      JR      J7C73
 12189                          
 12190                          ;       Subroutine      MKD$ function
 12191                          ;       Inputs          ________________________
 12192                          ;       Outputs         ________________________
 12193                          
 12194  4333  cd3afe            C7C61:  CALL    H_MKD
 12195  4336  180d                      JR      J7C73
 12196                          
 12197                          ;       Subroutine      CVI function
 12198                          ;       Inputs          ________________________
 12199                          ;       Outputs         ________________________
 12200                          
 12201  4338  cd3ffe            C7C66:  CALL    H_CVI
 12202  433b  1808                      JR      J7C73
 12203                          
 12204                          ;       Subroutine      CVS function
 12205                          ;       Inputs          ________________________
 12206                          ;       Outputs         ________________________
 12207                          
 12208  433d  cd44fe            C7C6B:  CALL    H_CVS
 12209  4340  1803                      JR      J7C73
 12210                          
 12211                          ;       Subroutine      CVD function
 12212                          ;       Inputs          ________________________
 12213                          ;       Outputs         ________________________
 12214                          
 12215  4342  cd49fe            C7C70:  CALL    H_CVD
 12216  4345  c32c0e            J7C73:  JP      C475A                   ; illegal function call
 12217                          
 12218                          ;       Subroutine      System initialization routine
 12219                          ;       Remark          RAM is invoked, EXPTBL and SLTTBL are initialized
 12220                          
 12221  4348  3176f3            C7C76:  LD      SP,VARWRK-10            ; temporary stack
 12222  434b  012f02                    LD      BC,$0230-1
 12223  434e  119bfd                    LD      DE,H_KEYI+1
 12224  4351  219afd                    LD      HL,H_KEYI
 12225  4354  36c9                      LD      (HL),$C9
 12226  4356  edb0                      LDIR                            ; initialize hooks, setting all them to $C9 (RET instruction).
 12227  4358  2180f3                    LD      HL,VARWRK
 12228  435b  224afc                    LD      (HIMEM),HL              ; highest BASIC RAM address
 12229  435e  cd2f44                    CALL    C7D5D                   ; search lowest BASIC RAM address
 12230  4361  2248fc                    LD      (BOTTOM),HL             ; save in BOTTOM
 12231  4364  019000                    LD      BC,$0090
 12232  4367  1180f3                    LD      DE,VARWRK
 12233  436a  21f945                    LD      HL,I7F27
 12234  436d  edb0                      LDIR                            ; initialize some systemvariables
 12235  436f  cd0000                    CALL    INIFNK                  ; initialize functionkeys
 12236  4372  af                        XOR     A
 12237  4373  3260f6                    LD      (ENDBUF),A              ; endmarker for BUF
 12238  4376  327cf8                    LD      (NLONLY),A              ; not loading basic program, close i/o channels when requested
 12239  4379  3e2c                      LD      A,','
 12240  437b  325df5                    LD      (BUFMIN),A              ; dummy prefix for BUF
 12241  437e  3e3a                      LD      A,':'
 12242  4380  321ef4                    LD      (KBFMIN),A              ; dummy prefix for KBUF
 12243  4383  2a0000                    LD      HL,(CGTABL)
 12244  4386  2220f9                    LD      (CGPNT+1),HL            ; address charactergenerator (but what about the slotid in CGPNT+0 ??)
 12245  4389  21e4f6                    LD      HL,PRMSTK
 12246  438c  224cf7                    LD      (PRMPRV),HL             ; initialize previous FN block pointer
 12247  438f  2274f6                    LD      (STKTOP),HL             ; Z80 stack temporary at PRMSTK
 12248  4392  01c800                    LD      BC,200
 12249  4395  09                        ADD     HL,BC
 12250  4396  2272f6                    LD      (MEMSIZ),HL             ; a fake string heap of 200 bytes
 12251  4399  3e01                      LD      A,1
 12252  439b  32c3f6                    LD      (VARTAB+1),A            ; a fake simple variable start at $0100
 12253  439e  cd3d45                    CALL    C7E6B                   ; allocate 1 i/o channel (also reinitialize STKTOP, MEMSIZ)
 12254  43a1  cdb729                    CALL    C62E5                   ; initialize stack
 12255  43a4  2a48fc                    LD      HL,(BOTTOM)
 12256  43a7  af                        XOR     A
 12257  43a8  77                        LD      (HL),A                  ; end of BASIC line token before BASIC text
 12258  43a9  23                        INC     HL
 12259  43aa  2276f6                    LD      (TXTTAB),HL             ; start of BASIC text
 12260  43ad  cd5929                    CALL    C6287                   ; clear BASIC program
 12261  43b0  cd0000                    CALL    INITIO                  ; initialize I/O devices (PSG and LPT)
 12262  43b3  cd0000                    call    INIT32                  ; screen 1
 12263  43b6  cd0000                    call    CLRSPR                  ; clear sprites
 12264  43b9  210b0a                    ld      hl,$0A0B
 12265  43bc  22dcf3                    ld      (CSRY),hl               ; cursor at 10,11
 12266  43bf  21aa45                    ld      hl,T7ED8
 12267  43c2  cd4a2d                    call    C6678                   ; print MSX system
 12268  43c5  210c0a                    ld      hl,$0A0C
 12269  43c8  22dcf3                    ld      (CSRY),hl               ; cursor at 10,12
 12270  43cb  21b645                    ld      hl,T7EE4
 12271  43ce  cd4a2d                    call    C6678                   ; print version 1.0
 12272  43d1  210e02                    ld      hl,$020E
 12273  43d4  22dcf3                    ld      (CSRY),hl               ; cursor at 2,14
 12274  43d7  21cf45                    ld      hl,T7EFD
 12275  43da  cd4a2d                    call    C6678                   ; print copyright 1983 by Microsoft
 12276  43dd  0606                      ld      b,$06
 12277  43df  2b                A7D0D:  dec     hl
 12278  43e0  7d                        ld      a,l
 12279  43e1  b4                        or      h
 12280  43e2  20fb                      jr      nz,A7D0D
 12281  43e4  10f9                      djnz    A7D0D                   ; wait 3 seconds
 12282  43e6  cd4744            J7D14:  CALL    C7D75                   ; do extension ROMs
 12283                          
 12284                          ; Entrypoint used by diskrom
 12285                          ; used when H_STKE was hooked by a extension ROM. BASIC programs in extension ROMs are NOT executed
 12286                          
 12287  43e9  2a48fc            J7D17:  LD      HL,(BOTTOM)
 12288  43ec  af                        XOR     A
 12289  43ed  77                        LD      (HL),A                  ; end of BASIC line before BASIC text
 12290  43ee  23                        INC     HL
 12291  43ef  2276f6                    LD      (TXTTAB),HL
 12292  43f2  cd5929                    CALL    C6287                   ; clear basic program
 12293  43f5  cdfb43                    CALL    C7D29                   ; display BASIC startscreen
 12294  43f8  c3f107                    JP      J411F                   ; ok and mainloop
 12295                          
 12296                          ;       Subroutine      display BASIC startscreen
 12297                          ;       Inputs          ________________________
 12298                          ;       Outputs         ________________________
 12299                          
 12300                          C7D29:
 12301  43fb  3eff                      ld      a,$FF
 12302  43fd  32def3                    ld      (CNSDFG),a              ; KEY ON
 12303                          M7D2E:
 12304                                  IF      CNTRY = 0
 12305                          
 12306                                  call    INIT32
 12307                          
 12308                                  ELSE
 12309                          
 12310  4400  cd0000                    call    INITXT                  ; text mode
 12311                          
 12312                                  ENDIF
 12313                          
 12314  4403  21c445            J7D31:  ld      hl,T7EF2
 12315  4406  cd4a2d                    call    C6678
 12316  4409  21b645                    ld      hl,T7EE4
 12317  440c  cd4a2d                    call    C6678
 12318  440f  21cf45            N7D3D:  LD      HL,T7EFD                ; copyright message
 12319  4412  cd4a2d                    CALL    C6678                   ; message to interpreter output
 12320  4415  2ac2f6                    LD      HL,(VARTAB)
 12321  4418  eb                        EX      DE,HL
 12322  4419  2a74f6                    LD      HL,(STKTOP)
 12323  441c  7d                        LD      A,L
 12324  441d  93                        SUB     E
 12325  441e  6f                        LD      L,A
 12326  441f  7c                        LD      A,H
 12327  4420  9a                        SBC     A,D
 12328  4421  67                        LD      H,A
 12329  4422  01f2ff                    LD      BC,-14
 12330  4425  09                        ADD     HL,BC
 12331  4426  cd0000                    CALL    C3412                   ; number to interpreter output
 12332  4429  21ed45                    LD      HL,I7F1B
 12333  442c  c34a2d                    JP      C6678                   ; message to interpreter output
 12334                          
 12335                          ;       Subroutine      search for start of ram $EFFF - $8000 area (downwards)
 12336                          ;       Inputs          ________________________
 12337                          ;       Outputs         ________________________
 12338                          
 12339  442f  2100ef            C7D5D:  LD      HL,$EF00
 12340  4432  7e                J7D60:  LD      A,(HL)
 12341  4433  2f                        CPL
 12342  4434  77                        LD      (HL),A
 12343  4435  be                        CP      (HL)
 12344  4436  2f                        CPL
 12345  4437  77                        LD      (HL),A
 12346  4438  2009                      JR      NZ,J7D71                ; no RAM, quit search
 12347  443a  2c                        INC     L
 12348  443b  20f5                      JR      NZ,J7D60
 12349  443d  7c                        LD      A,H
 12350  443e  3d                        DEC     A
 12351  443f  f0                        RET     P
 12352  4440  67                        LD      H,A
 12353  4441  18ef                      JR      J7D60
 12354                          
 12355  4443  2e00              J7D71:  LD      L,0
 12356  4445  24                        INC     H
 12357  4446  c9                        RET
 12358                          
 12359                          ;       Subroutine      do extension ROMs
 12360                          ;       Inputs          ________________________
 12361                          ;       Outputs         ________________________
 12362                          
 12363  4447  f3                C7D75:  DI
 12364  4448  0e00                      LD      C,0                     ; primairy slot
 12365  444a  11c1fc                    LD      DE,EXPTBL
 12366  444d  21c9fc                    LD      HL,SLTATR
 12367  4450  1a                J7D7E:  LD      A,(DE)
 12368  4451  b1                        OR      C
 12369  4452  4f                        LD      C,A
 12370  4453  d5                        PUSH    DE
 12371  4454  23                J7D82:  INC     HL
 12372  4455  e5                        PUSH    HL
 12373  4456  210040                    LD      HL,$4000
 12374  4459  cdec44            J7D87:  CALL    C7E1A
 12375  445c  e5                        PUSH    HL
 12376  445d  214142                    LD      HL,$4241
 12377  4460  e7                        RST     DCOMPR
 12378  4461  e1                        POP     HL                      ; expansion ROM ?
 12379  4462  0600                      LD      B,0
 12380  4464  202a                      JR      NZ,J7DBE                ; nope, next slot
 12381  4466  cdec44                    CALL    C7E1A                   ; read INIT entry
 12382  4469  e5                        PUSH    HL
 12383  446a  c5                        PUSH    BC
 12384  446b  d5                        PUSH    DE
 12385  446c  dde1                      POP     IX
 12386  446e  79                        LD      A,C
 12387  446f  f5                        PUSH    AF
 12388  4470  fde1                      POP     IY
 12389  4472  c40000                    CALL    NZ,CALSLT               ; if extension ROM has INIT, call INIT
 12390  4475  c1                        POP     BC
 12391  4476  e1                        POP     HL
 12392  4477  cdec44                    CALL    C7E1A                   ; read STATEMENT entry
 12393  447a  c6ff                      ADD     A,$FF
 12394  447c  cb18                      RR      B
 12395  447e  cdec44                    CALL    C7E1A                   ; read DEVICE entry
 12396  4481  c6ff                      ADD     A,$FF
 12397  4483  cb18                      RR      B
 12398  4485  cdec44                    CALL    C7E1A                   ; read BAS entry
 12399  4488  c6ff                      ADD     A,$FF
 12400  448a  cb18                      RR      B
 12401  448c  11f8ff                    LD      DE,-8
 12402  448f  19                        ADD     HL,DE
 12403  4490  e3                J7DBE:  EX      (SP),HL
 12404  4491  70                        LD      (HL),B                  ; adjust SLTATR
 12405  4492  23                        INC     HL
 12406  4493  e3                        EX      (SP),HL
 12407  4494  11fe3f                    LD      DE,$4000-2
 12408  4497  19                        ADD     HL,DE                   ; next page
 12409  4498  7c                        LD      A,H
 12410  4499  fec0                      CP      $C0
 12411  449b  38bc                      JR      C,J7D87                 ; we are doing only page 1 and 2
 12412  449d  e1                        POP     HL
 12413  449e  23                        INC     HL
 12414  449f  79                        LD      A,C
 12415  44a0  a7                        AND     A
 12416  44a1  110c00                    LD      DE,$000C
 12417  44a4  f2b244                    JP      P,J7DE0                 ; primary slot, next primary
 12418  44a7  c604                      ADD     A,$4
 12419  44a9  4f                        LD      C,A
 12420  44aa  fe90                      CP      $90
 12421  44ac  38a6                      JR      C,J7D82                 ; next secundair slot
 12422  44ae  e603                      AND     $3
 12423  44b0  4f                        LD      C,A
 12424  44b1  3e                        DEFB    $3E                    ; skip next instruction
 12425  44b2  19                J7DE0:  ADD     HL,DE
 12426  44b3  d1                        POP     DE
 12427  44b4  13                        INC     DE
 12428  44b5  0c                        INC     C
 12429  44b6  79                        LD      A,C
 12430  44b7  fe04                      CP      $4
 12431  44b9  3895                      JR      C,J7D7E                 ; next primary
 12432  44bb  21c9fc                    LD      HL,SLTATR
 12433  44be  0640                      LD      B,$40
 12434  44c0  7e                J7DEE:  LD      A,(HL)
 12435  44c1  87                        ADD     A,A
 12436  44c2  3804                      JR      C,J7DF6                 ; extension ROM has BAS entry, run it
 12437  44c4  23                        INC     HL
 12438  44c5  10f9                      DJNZ    J7DEE
 12439  44c7  c9                        RET
 12440                          
 12441                          ;       Subroutine      start basic program in extension ROM
 12442                          ;       Inputs          ________________________
 12443                          ;       Outputs         ________________________
 12444                          
 12445  44c8  cdfc44            J7DF6:  CALL    C7E2A                   ; translate SLTATR loopvar to address and slotid
 12446  44cb  cd0000                    CALL    ENASLT                  ; enable slot on page 2
 12447  44ce  2ac2f6                    LD      HL,(VARTAB)
 12448  44d1  1100c0                    LD      DE,$C000
 12449  44d4  e7                        RST     DCOMPR
 12450  44d5  3004                      JR      NC,J7E09                ; VARTAB is already in page 3, leave it alone
 12451  44d7  eb                        EX      DE,HL
 12452  44d8  22c2f6                    LD      (VARTAB),HL             ; VARTAB = $C000 (otherwise VARTAB would point into ROM)
 12453  44db  2a0880            J7E09:  LD      HL,($8000+8)
 12454  44de  23                        INC     HL
 12455  44df  2276f6                    LD      (TXTTAB),HL             ; start of basiccode
 12456  44e2  7c                        LD      A,H
 12457  44e3  32b1fb                    LD      (BASROM),A              ; flag execution of basic program in ROM (cannot be aborted)
 12458                          
 12459                          ; Entrypoint used by diskrom to start extension ROM with basic program
 12460                          
 12461  44e6  cd6c29            C7E14:  CALL    C629A                   ; initialize interpreter, basic pointer at start of program
 12462  44e9  c3d30c                    JP      C4601                   ; execute new statement
 12463                          
 12464                          ;       Subroutine      read word from extension ROM
 12465                          ;       Inputs          HL = address, C = slotid
 12466                          ;       Outputs         DE = word, Zx set if word is zero
 12467                          
 12468  44ec  cdf044            C7E1A:  CALL    C7E1E                   ; read byte from extension ROM
 12469  44ef  5a                        LD      E,D
 12470  44f0  79                C7E1E:  LD      A,C
 12471  44f1  c5                        PUSH    BC
 12472  44f2  d5                        PUSH    DE
 12473  44f3  cd0000                    CALL    RDSLT
 12474  44f6  d1                        POP     DE
 12475  44f7  c1                        POP     BC
 12476  44f8  57                        LD      D,A
 12477  44f9  b3                        OR      E
 12478  44fa  23                        INC     HL
 12479  44fb  c9                        RET
 12480                          
 12481                          ;       Subroutine      translate SLTATR loopvar to address and slotid
 12482                          ;       Inputs          ________________________
 12483                          ;       Outputs         ________________________
 12484                          
 12485  44fc  3e40              C7E2A:  LD      A,64
 12486  44fe  90                        SUB     B
 12487                          
 12488                          ;       Subroutine      translate SLTATR entrynumber to address and slotid
 12489                          ;       Inputs          ________________________
 12490                          ;       Outputs         ________________________
 12491                          
 12492  44ff  47                C7E2D:  LD      B,A
 12493  4500  2600                      LD      H,0
 12494  4502  1f                        RRA
 12495  4503  cb1c                      RR      H
 12496  4505  1f                        RRA
 12497  4506  cb1c                      RR      H                       ; highbyte address in page
 12498  4508  1f                        RRA
 12499  4509  1f                        RRA
 12500  450a  e603                      AND     $3                     ; primairy slot
 12501  450c  4f                        LD      C,A
 12502  450d  78                        LD      A,B
 12503  450e  0600                      LD      B,0
 12504  4510  e5                        PUSH    HL
 12505  4511  21c1fc                    LD      HL,EXPTBL
 12506  4514  09                        ADD     HL,BC
 12507  4515  e60c                      AND     $C                     ; secundairy slot
 12508  4517  b1                        OR      C                       ; + primairy slot
 12509  4518  4f                        LD      C,A
 12510  4519  7e                        LD      A,(HL)
 12511  451a  e1                        POP     HL
 12512  451b  b1                        OR      C                       ; + slot expanded flag
 12513  451c  c9                        RET
 12514                          
 12515                          ;       Subroutine      MAX statement
 12516                          ;       Inputs          ________________________
 12517                          ;       Outputs         ________________________
 12518                          
 12519  451d  cf                C7E4B:  RST     SYNCHR
 12520  451e  b7                        DEFB    $B7
 12521  451f  cf                        RST     SYNCHR
 12522  4520  ef                        DEFB    $EF                    ; check for FILES=
 12523  4521  cdee18                    CALL    C521C                   ; evaluate byte operand
 12524  4524  c22707                    JP      NZ,J4055                ; not end of statement, syntax error
 12525  4527  fe10                      CP      16                      ; number of i/o channels <16 ?
 12526  4529  d22c0e                    JP      NC,C475A                ; nope, illegal function call
 12527  452c  22a7f6                    LD      (TEMP),HL               ; save BASIC pointer in TEMP
 12528  452f  f5                        PUSH    AF
 12529  4530  cdee32                    CALL    C6C1C                   ; close all i/o channels
 12530  4533  f1                        POP     AF
 12531  4534  cd3d45                    CALL    C7E6B                   ; allocate i/o channels
 12532  4537  cd7929                    CALL    C62A7                   ; initialize interpreter, BASIC pointer from TEMP
 12533  453a  c3d30c                    JP      C4601                   ; execute new statement
 12534                          
 12535                          ;       Subroutine      allocate i/o channels
 12536                          ;       Inputs          A = number of user i/o channels
 12537                          ;       Outputs         ________________________
 12538                          
 12539  453d  f5                C7E6B:  PUSH    AF
 12540  453e  2a4afc                    LD      HL,(HIMEM)
 12541  4541  11f5fe                    LD      DE,-(256+9+2)
 12542  4544  19                J7E72:  ADD     HL,DE
 12543  4545  3d                        DEC     A
 12544  4546  f24445                    JP      P,J7E72
 12545  4549  eb                        EX      DE,HL                   ; calculate FILTAB address
 12546  454a  2a74f6                    LD      HL,(STKTOP)
 12547  454d  44                        LD      B,H
 12548  454e  4d                        LD      C,L
 12549  454f  2a72f6                    LD      HL,(MEMSIZ)
 12550  4552  7d                        LD      A,L
 12551  4553  91                        SUB     C
 12552  4554  6f                        LD      L,A
 12553  4555  7c                        LD      A,H
 12554  4556  98                        SBC     A,B
 12555  4557  67                        LD      H,A                     ; size of the string heap
 12556  4558  f1                        POP     AF
 12557  4559  e5                        PUSH    HL
 12558  455a  f5                        PUSH    AF
 12559  455b  018c00                    LD      BC,140
 12560  455e  09                        ADD     HL,BC
 12561  455f  44                        LD      B,H
 12562  4560  4d                        LD      C,L                     ; size of the string heap +140
 12563  4561  2ac2f6                    LD      HL,(VARTAB)             ; start of the simple variables
 12564  4564  09                        ADD     HL,BC                   ; + size
 12565  4565  e7                        RST     DCOMPR                  ; does this fit ?
 12566  4566  d24729                    JP      NC,J6275                ; nope, out of memory
 12567  4569  f1                        POP     AF
 12568  456a  325ff8                    LD      (MAXFIL),A              ; set number of i/o channels (excluding i/o channel 0)
 12569  456d  6b                        LD      L,E
 12570  456e  62                        LD      H,D
 12571  456f  2260f8                    LD      (FILTAB),HL             ; start of i/o channel pointers
 12572  4572  2b                        DEC     HL
 12573  4573  2b                        DEC     HL                      ; ?? why need a extra byte ??
 12574  4574  2272f6                    LD      (MEMSIZ),HL             ; start of the string heap
 12575  4577  c1                        POP     BC                      ; size of the string heap
 12576  4578  7d                        LD      A,L
 12577  4579  91                        SUB     C
 12578  457a  6f                        LD      L,A
 12579  457b  7c                        LD      A,H
 12580  457c  98                        SBC     A,B
 12581  457d  67                        LD      H,A
 12582  457e  2274f6                    LD      (STKTOP),HL             ; start of Z80 stack, end of string heap
 12583  4581  2b                        DEC     HL
 12584  4582  2b                        DEC     HL
 12585  4583  c1                        POP     BC                      ; return address
 12586  4584  f9                        LD      SP,HL                   ; new stack with dummy word on stack
 12587  4585  c5                        PUSH    BC                      ; return address on stack
 12588  4586  3a5ff8                    LD      A,(MAXFIL)
 12589  4589  6f                        LD      L,A
 12590  458a  2c                        INC     L                       ; number of i/o channels
 12591  458b  2600                      LD      H,0
 12592  458d  29                        ADD     HL,HL                   ; *2
 12593  458e  19                        ADD     HL,DE
 12594  458f  eb                        EX      DE,HL
 12595  4590  d5                        PUSH    DE                      ; start of i/o channel buffers
 12596  4591  010901                    LD      BC,265                  ; -2+256+9+2
 12597  4594  73                J7EC2:  LD      (HL),E
 12598  4595  23                        INC     HL
 12599  4596  72                        LD      (HL),D
 12600  4597  23                        INC     HL                      ; pointer to i/o channel buffer
 12601  4598  eb                        EX      DE,HL
 12602  4599  3600                      LD      (HL),0                  ; i/o channel closed
 12603  459b  09                        ADD     HL,BC                   ; to the next i/o channel buffer
 12604  459c  eb                        EX      DE,HL
 12605  459d  3d                        DEC     A
 12606  459e  f29445                    JP      P,J7EC2                 ; next i/o channel
 12607  45a1  e1                        POP     HL                      ; start of i/o channel buffer
 12608  45a2  010900                    LD      BC,9
 12609  45a5  09                        ADD     HL,BC
 12610  45a6  2262f8                    LD      (NULBUF),HL             ; pointer to the i/o channel 0 buffer
 12611  45a9  c9                        RET
 12612                          
 12613  45aa  4d53582020737973  T7ED8:  DEFB    "MSX  system"
              74656d            
 12614  45b5  00                        DEFB    0
 12615                          
 12616  45b6  76657273696f6e20  T7EE4:  DEFB    "version 1.0",13,10
              312e300d0a        
 12617  45c3  00                        DEFB    0
 12618                          
 12619  45c4  4d53582042415349  T7EF2:  DEFB    "MSX BASIC "
              4320              
 12620  45ce  00                        DEFB    0
 12621  45cf  436f707972696768  T7EFD:  DEFB    "Copyright 1983 by Microsoft",13,10
              7420313938332062  
              79204d6963726f73  
              6f66740d0a        
 12622  45ec  00                        DEFB    0
 12623                          
 12624  45ed  2042797465732066  I7F1B:  DEFB    " Bytes free"
              726565            
 12625  45f8  00                        DEFB    0
 12626                          
 12627                          
 12628                          ; Initial Workarea variables
 12629                          
 12630                          
 12631                          I7F27:
 12632                                  PHASE   VARWRK
 12633                          
 12634  f380  d3a8              RDPRIM: OUT     ($A8),A
 12635  f382  5e                        LD      E,(HL)
 12636  f383  1803                      JR      J7F2F
 12637                          
 12638  f385  d3a8              WRPRIM: OUT     ($A8),A
 12639  f387  73                        LD      (HL),E
 12640  f388  7a                J7F2F:  LD      A,D
 12641  f389  d3a8                      OUT     ($A8),A
 12642  f38b  c9                        RET
 12643                          
 12644  f38c  d3a8              CLPRIM: OUT     ($A8),A
 12645  f38e  08                        EX      AF,AF'
 12646  f38f  cd98f3                    CALL    CLPRM1
 12647  f392  08                        EX      AF,AF'
 12648  f393  f1                        POP     AF
 12649  f394  d3a8                      OUT     ($A8),A
 12650  f396  08                        EX      AF,AF'
 12651  f397  c9                        RET
 12652                          
 12653                          CLPRM1:
 12654  f398  dde9                      JP      (IX)
 12655                          
 12656  f39a  2c0e              USRTAB: defw    C475A                   ; illegal function call
 12657  f39c  2c0e                      defw    C475A                   ; illegal function call
 12658  f39e  2c0e                      defw    C475A                   ; illegal function call
 12659  f3a0  2c0e                      defw    C475A                   ; illegal function call
 12660  f3a2  2c0e                      defw    C475A                   ; illegal function call
 12661  f3a4  2c0e                      defw    C475A                   ; illegal function call
 12662  f3a6  2c0e                      defw    C475A                   ; illegal function call
 12663  f3a8  2c0e                      defw    C475A                   ; illegal function call
 12664  f3aa  2c0e                      defw    C475A                   ; illegal function call
 12665  f3ac  2c0e                      defw    C475A                   ; illegal function call
 12666                          
 12667                          LINL40:
 12668                                  IF BASVER = 0
 12669                                  defb    39
 12670                                  ELSE
 12671  f3ae  25                        defb    37
 12672                                  ENDIF
 12673                          
 12674  f3af  1d                LINL32: defb    29
 12675                          
 12676  f3b0  1d                LINLEN: defb    29
 12677                          
 12678  f3b1  18                CRTCNT: defb    24
 12679                          
 12680  f3b2  0e                CLMLST: defb    14
 12681                          
 12682  f3b3  0000              TXTNAM: defw    0
 12683  f3b5  0000              TXTCOL: defw    0
 12684  f3b7  0008              TXTCGP: defw    $0800
 12685  f3b9  0000              TXTATR: defw    0
 12686  f3bb  0000              TXTPAT: defw    0
 12687                          
 12688  f3bd  0018              T32NAM: defw    $1800
 12689  f3bf  0020              T32COL: defw    $2000
 12690  f3c1  0000              T32CGP: defw    0
 12691  f3c3  001b              T32ATR: defw    $1B00
 12692  f3c5  0038              T32PAT: defw    $3800
 12693                          
 12694  f3c7  0018              GRPNAM: defw    $1800
 12695  f3c9  0020              GRPCOL: defw    $2000
 12696  f3cb  0000              GRPCGP: defw    0
 12697  f3cd  001b              GRPATR: defw    $1B00
 12698  f3cf  0038              GRPPAT: defw    $3800
 12699                          
 12700  f3d1  0008              MLTNAM: defw    $0800
 12701  f3d3  0000              MLTCOL: defw    0
 12702  f3d5  0000              MLTCGP: defw    0
 12703  f3d7  001b              MLTATR: defw    $1B00
 12704  f3d9  0038              MLTPAT: defw    $3800
 12705                          
 12706  f3db  01                CLIKSW: defb    1
 12707  f3dc  01                CSRY:   defb    1
 12708  f3dd  01                CSRX:   defb    1
 12709  f3de  00                CNSDFG: defb    0
 12710                          
 12711  f3df  00                RG0SAV: defb    $00
 12712  f3e0  e0                RG1SAV: defb    $E0
 12713  f3e1  00                RG2SAV: defb    $00
 12714  f3e2  00                RG3SAV: defb    $00
 12715  f3e3  00                RG4SAV: defb    $00
 12716  f3e4  00                RG5SAV: defb    $00
 12717  f3e5  00                RG6SAV: defb    $00
 12718  f3e6  00                RG7SAV: defb    $00
 12719  f3e7  00                STATFL: defb    $00
 12720  f3e8  ff                TRGFLG: defb    $FF
 12721  f3e9  0f                FORCLR: defb    15
 12722  f3ea  04                BAKCLR: defb    4
 12723                          
 12724                          BDRCLR:
 12725                                  IF BASVER = 0
 12726                                  defb    7
 12727                                  ELSE
 12728  f3eb  04                        defb    4
 12729                                  ENDIF
 12730                          
 12731  f3ec  c30000            MAXUPD: jp      0
 12732  f3ef  c30000            MINUPD: jp      0
 12733  f3f2  0f                ATRBYT: defb    15
 12734  f3f3  59f9              QUEUES: defw    QUETAB
 12735  f3f5  ff                FRCNEW: defb    $FF
 12736  f3f6  01                SCNCNT: defb    1
 12737  f3f7  32                REPCNT: defb    50
 12738  f3f8  f0fb              PUTPNT: defw    KEYBUF
 12739  f3fa  f0fb              GETPNT: defw    KEYBUF
 12740  f3fc  535c262d0f        CS1200: defb    $53,$5C,$26,$2D,$0F
 12741  f401  252d0e161f        CS2400: defb    $25,$2D,$0E,$16,$1F
 12742  f406  535c                      defb    $53,$5C
 12743  f408  262d                      defb    $26,$2D
 12744  f40a  0f                        defb    $0F
 12745  f40b  0001              ASPCT1: defw    $0100
 12746  f40d  0001              ASPCT2: defw    $0100
 12747  f40f  3a                ENDPRG: defb    ':'
 12748                          
 12749                                  DEPHASE
 12750                          
 12751                          ;       Bugfix          check for zero length devicenames (e.g. ":xxx" filenames)
 12752                          ;       Inputs          ________________________
 12753                          ;       Outputs         ________________________
 12754                          
 12755                                  IF      NDEVFIX = 1
 12756                          
 12757                          ; bugfix for zero length devicename
 12758                          
 12759  4689  1189fd            C7FB7:  LD      DE,PROCNM
 12760  468c  a7                        AND     A
 12761  468d  c0                        RET     NZ
 12762  468e  04                        INC     B                       ; use length 1 (name ':' is used)
 12763  468f  c9                        RET
 12764                          
 12765                                  ENDIF
 12766                          
 12767                                  IF      SLOTFIX = 1
 12768                          
 12769                          M7FBE:  CALL    C7FCB
 12770                                  LD      E,(HL)
 12771                                  JR      J7FC8
 12772                          
 12773                          M7FC4:  CALL    C7FCB
 12774                                  LD      (HL),E
 12775                          J7FC8:  LD      A,B
 12776                                  JR      J7FD9
 12777                          
 12778                          C7FCB:  RRCA
 12779                                  RRCA
 12780                                  AND     3
 12781                                  LD      D,A
 12782                                  LD      A,(D.FFFF)
 12783                                  CPL
 12784                                  LD      B,A
 12785                                  AND     $FC
 12786                                  OR      D
 12787                                  LD      D,A
 12788                          J7FD9:  LD      (D.FFFF),A
 12789                                  LD      A,E
 12790                                  RET
 12791                          
 12792                                  ELSE
 12793                          
 12794                          ; Padding of zeroes to fill the page
 12795  4690  0000000000000000          DEFS    66, 0
              0000000000000000  
              0000000000000000  
              0000000000000000  
              0000000000000000  
              0000000000000000  
              0000000000000000  
              0000000000000000  
              0000              
 12796                          
 12797                                  ENDIF
 12798                          
 12799                          
